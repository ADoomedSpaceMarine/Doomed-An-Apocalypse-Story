//
// CatsVisor 1.9.1
//
// Based on XV117's NewDoomguy Visor and on KEENO7's Dynamic Hud for BD21 which are both 
//based on Ultimate Doom visor by Saegiru
//  
// Comptatible with Vanilla Doom, BeautifulDoom, BrutalDoom v21 RC1, BD21 (+ TomtefarsExtension1.8b), HardDoom, SmoothDoom, LegendDoom
//
// Original code by KEENO7 and Saegiru 
// Modified by SchrodingCat
//
// One day i'll clean this mess...
//

#library "CatsVisorHud"
#include "zcommon.acs"

// Variables for the mugshot
int catsdamage;
int catsdamage2;
int catsfiring;
int CatsWeaponPickup;
int BossKill;
int RealHealth;
int RealArmor;

// Resolution / Aspect ratio checker from UDV
//
// List of aspect ratios.
Function int abs(int x)
{
    if (x < 0)
        return -x;
    return x;
}

Function int GetAspectRatio(void)
{
    int noWideScreen = GetCVAR("vid_nowidescreen");
    int tft = GetCVAR("vid_tft");

    if (noWideScreen)
    {
        if (tft && GetScreenHeight() * 5 / 4 == GetScreenWidth())
        {
            return 54;
        }
        return 43;
    }

    // If the size is approximately 16:9, consider it so.
    if (Abs(GetScreenHeight() * 16 / 9 - GetScreenWidth()) < 10)
    {
        return 169;
    }
    // Consider 17:10 as well.
    if (Abs(GetScreenHeight() * 17 / 10 - GetScreenWidth()) < 10)
    {
        return 1710;
    }
	if (GetScreenWidth() == 1280 && GetScreenHeight() == 800)
	{
		return 43;
	}
    // 16:10 has more variance in the pixel dimensions. Grr.
    if (Abs(GetScreenHeight() * 16 / 10 - GetScreenWidth()) < 60)
    {
        // 320x200 and 640x400 are always 4:3, not 16:10
        if ((GetScreenWidth() == 320 && GetScreenHeight() == 200) || (GetScreenWidth() == 640 && GetScreenHeight() == 400))
        {
            return 43;
        }
        return 1610;
    }
    // Unless vid_tft is set, 1280x1024 is 4:3, not 5:4.
    if (tft && GetScreenHeight() * 5 / 4 == GetScreenWidth())
    {
        return 54;
    }
    // Assume anything else is 4:3
    return 43;
}

//Mugshot scripts

function bool OnButton (int button)
{
 if((GetPlayerInput(-1,INPUT_BUTTONS) & button))
  return true;
  
  return false;
}

Script "SlowLife" ENTER
{
	while(true)
	{
		int PrevHealthD = GetActorProperty(0, APROP_Health);
		Delay(1);
		int CurentHealthD = GetActorProperty(0, APROP_Health);
		if (PrevHealthD > CurentHealthD)
		{
			while (PrevHealthD > CurentHealthD)
			{
			PrevHealthD = (PrevHealthD - 1);
			RealHealth = PrevHealthD;
			delay(1);
			}
		}
		else if (PrevHealthD < CurentHealthD)
		{
			while (PrevHealthD < CurentHealthD)
			{
			PrevHealthD = (PrevHealthD + 1);
			RealHealth = PrevHealthD;
			delay(1);
			}
		}
		else
		{
		   PrevHealthD = CurentHealthD;
		   RealHealth = PrevHealthD;
		}
	}
}	
Script "SlowArmor" ENTER
{
	while(true)
	{
		int PrevArmorD = CheckInventory("BasicArmor");
		Delay(1);
		int CurentArmorD = CheckInventory("BasicArmor");
		if (PrevArmorD > CurentArmorD)
		{
			while (PrevArmorD > CurentArmorD)
			{
			PrevArmorD = (PrevArmorD - 1);
			RealArmor = PrevArmorD;
			delay(1);
			}
		}
		else if (PrevArmorD < CurentArmorD)
		{
			while (PrevArmorD < CurentArmorD)
			{
			PrevArmorD = (PrevArmorD + 1);
			RealArmor = PrevArmorD;
			delay(1);
			}
		}
		else
		{
		   PrevArmorD = CurentArmorD;
		   RealArmor = PrevArmorD;
		}
	}
}		
Script "WeaponPickup" ENTER
{
	while(true)
	{
		int Prevweapons = (CheckInventory("SSG") + CheckInventory("PowerStrength")+ CheckInventory("Chain_saw")+ CheckInventory("Shot_Gun") + CheckInventory("U_Shotgun")+ CheckInventory("U_SSG")+ CheckInventory("U_Chainsaw")+ CheckInventory("Minigun")+ CheckInventory("U_MiniGun")+ CheckInventory("Rocket_Launcher") + CheckInventory("U_RocketLauncher")+ CheckInventory("Plasma_Gun")+ CheckInventory("U_PlasmaRifle"));
		Delay(1);
		if (Prevweapons < (CheckInventory("SSG")+ CheckInventory("PowerStrength")+ CheckInventory("Chain_saw")+ CheckInventory("Shot_Gun") + CheckInventory("U_Shotgun")+ CheckInventory("U_SSG")+ CheckInventory("U_Chainsaw")+ CheckInventory("Minigun")+ CheckInventory("U_MiniGun")+ CheckInventory("Rocket_Launcher") + CheckInventory("U_RocketLauncher")+ CheckInventory("Plasma_Gun")+ CheckInventory("U_PlasmaRifle")))
		{
		 CatsWeaponPickup = 1;
		 delay(60);
		}
		else
		{
		 CatsWeaponPickup = 0;
		}
	}
}
Script "HealthDamage" ENTER
{
	while(true)
	{
		int PrevHealth = GetActorProperty(0, APROP_Health);
		Delay(1);
	    if (PrevHealth > GetActorProperty(0, APROP_Health))
		{
		 catsdamage = 1;
		 delay(40);
		}
		else
		{
		 catsdamage = 0;
		}
	}
}
Script "HealthDamage2" ENTER
{
	while(true)
	{
		int PrevHealth2 = GetActorProperty(0, APROP_Health);
		Delay(1);
	    if (PrevHealth2 > (GetActorProperty(0, APROP_Health) + 40))
		{
		 catsdamage2 = 1;
		 delay(60);
		}
		else
		{
		 catsdamage2 = 0;
		}
	}
}
Script "IsFiring" ENTER
{
	while(true)
	{
		if (OnButton(BT_ATTACK))
		{
		 delay(20);
		 catsfiring = 1;
		 delay(15);
		}
		else
		{
		 catsfiring = 0;
		 delay(15);
		}
	}
}
Script "BossKill" ENTER
{
	while(true)
	{
		int PrevBossCount = (ThingCountName("BaronOfHell", 0) + ThingCountName("CyberDemon", 0) + ThingCountName("SpiderMastermind", 0) + ThingCountName("IconofSin", 0));
		Delay(1);
	    if (PrevBossCount > (ThingCountName("BaronOfHell", 0)+ ThingCountName("CyberDemon", 0) + ThingCountName("SpiderMastermind", 0) + ThingCountName("IconofSin", 0)))
		{
		 delay(15);
		 BossKill = 1;
		 delay(80);
		}
		else
		{
		 BossKill = 0;
		}
	}
}
//
// CatsVisor main script
//
script "CatsVisorHud" ENTER
{
	if (GameType () != GAME_TITLE_MAP)
	{	
	 int CatV_Stats = CheckInventory("CatV_Stats");
	 int CatV_AmmoC = CheckInventory("CatV_AmmoC");
	 int CatV_WeaNam = CheckInventory("CatV_WeaNam");
	 int CatV_ArmTyp = CheckInventory("CatV_ArmTyp");
	 int CatV_Screen = CheckInventory("CatV_Screen");
	 int CatV_Altabar = CheckInventory("CatV_Altabar");
	 int CatV_ArmIco = CheckInventory("CatV_ArmIco");
	 int CatV_AmmIco = CheckInventory("CatV_AmmIco");
	 int CatV_Clock = CheckInventory("CatV_Clock");
	 int CatV_Mug = CheckInventory("CatV_Mug");
	 int CatV_ArmLght = CheckInventory("CatV_ArmLght");
	 int CatV_StatsMini = CheckInventory("CatV_StatsMini");
	 int CatV_NoOverlay = CheckInventory("CatV_NoOverlay");
	 int CatV_HPBottom = CheckInventory("CatV_HPBottom");
	 int aspectratio = GetAspectRatio();
	 int extcam = CheckInventory("cat_extcam") | CheckInventory("IsDuringHelmetAnimation");
	 int t;
	 int x = 0.5;
	 int y = 0.5; 
	 int xres = 832;
	 int yres = 384;
	 SetHudSize(xres,yres,0);
	 int x_font_res = 5762;
	 int y_font_res = 3240;
	 int x_timer_res = 2880;
	 int y_timer_res = 1420;
	 int mtotal = GetLevelInfo (LEVELINFO_TOTAL_MONSTERS);
	 int mkilled = GetLevelInfo (LEVELINFO_KILLED_MONSTERS);
	 int itotal = GetLevelInfo (LEVELINFO_TOTAL_ITEMS);
	 int ifound = GetLevelInfo (LEVELINFO_FOUND_ITEMS);
	 int stotal = GetLevelInfo (LEVELINFO_TOTAL_SECRETS);
	 int sfound = GetLevelInfo (LEVELINFO_FOUND_SECRETS);
	 int life = RealHealth;
	 int maxlife = GetActorProperty (0, APROP_SpawnHealth);
	 int armor = RealArmor;
	 int bkey = checkinventory("bluecard") | checkinventory("BD_BlueCard") | checkinventory("GLBlueCard"); 
	 int ykey = checkinventory("yellowcard") | checkinventory("BD_YellowCard") | checkinventory("GLYellowCard");
	 int rkey = checkinventory("redcard") | checkinventory("BD_RedCard") | checkinventory("GLRedCard");
	 int skey = checkinventory("silvercard");
	 int pkey = checkinventory("pinkcard");
	 int brkey = checkinventory("browncard");
	 int blkey = checkinventory("blackcard");
	 int gkey = checkinventory("greencard");
	 int okey = checkinventory("orangecard");
	 int bskull = checkinventory("blueskull") | checkinventory("BD_BlueSkull") | checkinventory("GLBlueSkull");
	 int yskull = checkinventory("yellowskull") | checkinventory("BD_YellowSkull") | checkinventory("GLYellowSkull");
	 int rskull = checkinventory("redskull") | checkinventory("BD_RedSkull") | checkinventory("GLRedSkull");
	 int sskull = checkinventory("silverskull");
	 int pskull = checkinventory("pinkskull");
	 int brskull = checkinventory("brownskull");
	 int blskull = checkinventory("blackskull");
	 int gskull = checkinventory("greenskull");
	 int oskull = checkinventory("orangeskull");
	 int blursphere = checkinventory("PowerInvisibility");
	 int blurtime = (GetActorPowerupTics(0, "PowerInvisibility"))/35;
	 int radsuit = checkinventory("PowerIronFeet") | checkinventory("PowerMask");
	 int radsuittime = (GetActorPowerupTics(0, "PowerIronFeet"))/35;
	 int invusphere = checkinventory("PowerInvulnerable");
	 int invutime = (GetActorPowerupTics(0, "PowerInvulnerable"))/35;
	 int nightvision = checkinventory("PowerTorch") | checkinventory("PowerLightAmp");
	 int nightvtime = ((GetActorPowerupTics(0, "PowerTorch"))/35) | ((GetActorPowerupTics(0, "PowerLightAmp"))/35);
	 int ammo = 0;
	 int ammo2 = 0;
	 int ammo3 = 0;
	 str weapon = GetWeapon();
	 str weaponname = "";
	 int havegrenade = CheckInventory("U_HandGrenades");
	 int havegrenadea = CheckInventory("HandGrenades");
	 int haveC4weapon = CheckInventory("C4Weapon");
	 str armortype = GetArmorInfo (ARMORINFO_CLASSNAME);
	 str armortype2 = "";
	 str weicon = "";
	 int savepercent = GetArmorInfo (ARMORINFO_SAVEPERCENT);
	 int savepint = 0;
	 int Pclip = 0;
	 int clip = 0;
	 int shell = 0;
	 int grenade = 0;
	 int C4ammo = 0;
	 int greenshell = 0;
	 int cell = 0;
	 int rocket = 0;
	 int gas = 0;
	 int hellish = 0;
	 int BuzzAm = 0;
	 int SoulAmmo = 0;
	 int revolverbullets = 0;
	 int minigunammo = 0;
	 int railcore = 0;
	 int ammorate = 0;
	 int ammorate2 = 0;	 
	 int ammocapa = 0;
	 int nightvrate = 0;
	 int clipsize = 0;
	 int berserk = CheckInventory("PowerStrength");
	 int berserktime = (GetActorPowerupTics(0, "PowerStrength"))/35;
	 int stamina = CheckInventory("UsedStamina");
	 int stamina2 = CheckInventory("Stamina");
	 int offset = 0;
	 int oxygenlevel = GetAirSupply (PlayerNumber())/35;
	 int JPoints = CheckInventory("JPoints");
	 int JpFull = CheckInventory("BarIsFull");
	 int Jscore = checkinventory("JScore");
	 int MorphedPlayer = strICmp(weapon, "D4BARONHUD") == 0 | strICmp(weapon, "REVENANT_RUNE") ==0 | strICmp(weapon, "D4REVENANTHUD") ==0;
	 str PlClass = GetActorClass (0);
	 //XV117's D4 arsenal & D4T crucible SE
		 int IsPlayingD4Arsenal = CheckInventory("IsPlayingD4Arsenal");
		 int IsPlayingD4TCSE = strICmp(PlClass, "Doom4Player") == 0;
		 int modcooldown = 0;
		 int maxcooldown = 0;
		 int cooldownrate = 0;
		//Upgrades 
		 int UpgradeBoxes = CheckInventory("UpgradeBoxToken");
		 str upgrade = "";
		 str upgrade2 = "";		
		//Pistol
		int UpPistolProtoGenerator = CheckInventory("HasUpgradePistolProtoGenerator");
		int UpPistolFastCharge = CheckInventory("HasUpgradePistolFastCharge");
		//Repeater
		int UpRepeaterDamage = CheckInventory("HasUpgradeRepeaterDamage") | CheckInventory("RepeaterDamageUpgrade");
		int UpRepeaterScope = CheckInventory("HasUpgradeRepeaterScope");
		int UpRepeaterStun = CheckInventory("RepeaterStunAltUpgrade");
		//Shotgun
		int ModHasTriShot = CheckInventory("ModTriShotActive") | CheckInventory("TriShotActive");
		int SGTriShotTimer = CheckInventory("SGTriShotTimer");
		int ModHasExplosiveShot = CheckInventory("ModExplosiveShotActive") | CheckInventory("GrenadeActive");
		int SGGrenadeTimer = CheckInventory("SGGrenadeTimer");
		//SSG
		int UpSSGPierce = CheckInventory("SSGUpgradePierce");
		int UpSSGReload = CheckInventory("SSGUpgradeReload");
		//HAR
		int ModHasMicroMissile = CheckInventory("ModMicroMissileActive") | CheckInventory("MicroMissilesActive");
		int ModHasTacticalScope = CheckInventory("ModTacticalScopeActive") | CheckInventory("TacticalScopeActive");
		//Chaingun
		int ModHasMobileTurret = CheckInventory("ModMobileTurretActive") | CheckInventory("MobileTurretActive");
		int ModHasGatlingRotator = CheckInventory("ModGatlingRotatorActive") | CheckInventory("GatlingRotatorActive");
		//Rocket launcher
		int ModHasLockOn = CheckInventory("ModLockOnActive") | CheckInventory("LockOnActive");
		int ModHasDetonator = CheckInventory("ModDetonatorActive") | CheckInventory("DetonateActive");
		//Grenade launcher
		int UpGrenadeLaucherDamage = CheckInventory("HasUpgradeGrenadeLaucherDamage") | CheckInventory("GrenadeLauncherSmartDamageUpgrade");
		int UpGrenadeLaucherAltFire = CheckInventory("HasUpgradeGrenadeLaucherAltFire")| CheckInventory("GrenadeLauncherAltFireUpgrade");
		int GLGasTimer = CheckInventory("GLGasTimer");
		//Plasma gun
		int ModHasHeatWave = CheckInventory("ModHeatWaveActive") | CheckInventory("HeatBlastActive");
		int ModHasStunBomb = CheckInventory("ModStunBombActive") | CheckInventory("StunBombActive");
		int StunBombTimer = CheckInventory("PlasmaStunBombTimer");
		//BFG
		int ModBFGAltfire = CheckInventory("BFGAltfireUpgrade");
		int ModBFGVolley = CheckInventory("BFGVolleyUpgrade");
		//Lighnting Gun
		int UpLightningGunDamage = CheckInventory("HasUpgradeLightningGunDamage") | CheckInventory("LightningGunDamageUpgrade");
		int UpLightningGunAltFire = CheckInventory("HasUpgradeLightningGunAltFire") | CheckInventory("LightningGunAltFireUpgrade");
		//Hellshot
		int UpHellshotAltFire = CheckInventory("HasUpgradeHellshotAltFire") | CheckInventory("HellShotAltFireUpgrade");
		int HSFlareTimer = CheckInventory("HSFlareTimer");
		int UpHellshotDamage = CheckInventory("HellShotDamageUpgrade");
		//VortexRifle
		int UpVortexRifleDamage = CheckInventory("HasUpgradeVortexRifleDamage") | CheckInventory("VortexDamageUpgrade");
		int UpVortexRifleScope = CheckInventory("HasUpgradeVortexRifleScope") | CheckInventory("VortexBetterScopeUpgrade");
		int VortexFireTimer	= CheckInventory("VortexFireToken");
		//Gauss Canon
		int ModHasSiegeMode = CheckInventory("ModSiegeModeActive") | CheckInventory("SiegeActive");
		int ModHasPrecisionScope = CheckInventory("ModPrecisionScopeActive") | CheckInventory("PrecisionActive");
		//HellishMissile
		int UpMissileBatteryJetThruster = CheckInventory("HasUpgradeMissileBatteryJetThruster");
		int UpMissileBatteryGuidedMissile = CheckInventory("HasUpgradeMissileBatteryGuidedMissile");
		//Mancubus Canon
		int UpFlammeCannonMK2 = CheckInventory("HasUpgradeFlammeCannonMK2");
		  
	 while(true)
	 {	
		  aspectratio = GetAspectRatio();
		  CatV_Stats = CheckInventory("CatV_Stats");
	      CatV_AmmoC = CheckInventory("CatV_AmmoC");
		  CatV_WeaNam = CheckInventory("CatV_WeaNam");
		  CatV_ArmTyp = CheckInventory("CatV_ArmTyp");
		  CatV_Screen = CheckInventory("CatV_Screen");
		  CatV_Altabar = CheckInventory("CatV_Altabar");
		  CatV_ArmIco = CheckInventory("CatV_ArmIco");
		  CatV_AmmIco = CheckInventory("CatV_AmmIco");
		  CatV_Clock = CheckInventory("CatV_Clock");
		  CatV_Mug = CheckInventory("CatV_Mug");
	      CatV_ArmLght = CheckInventory("CatV_ArmLght");
		  CatV_StatsMini = CheckInventory("CatV_StatsMini");
		  CatV_NoOverlay = CheckInventory("CatV_NoOverlay");
		  CatV_HPBottom = CheckInventory("CatV_HPBottom");
		  extcam = CheckInventory("cat_extcam") | CheckInventory("IsDuringHelmetAnimation");
		  SetFont("BLANK");
		  if (aspectratio == 169)
			 {
			  offset = 0;
			 }
		  if (aspectratio == 43)
			 {
			  offset = 0.150;
			 }
		  if (aspectratio == 1610)
			 {
			  offset = 0.050;
			 }
		  t = timer() / 35;
		  itotal = GetLevelInfo (LEVELINFO_TOTAL_ITEMS);
		  ifound = GetLevelInfo (LEVELINFO_FOUND_ITEMS);
		  stotal = GetLevelInfo (LEVELINFO_TOTAL_SECRETS);
		  sfound = GetLevelInfo (LEVELINFO_FOUND_SECRETS);
		  mtotal = GetLevelInfo (LEVELINFO_TOTAL_MONSTERS);
		  mkilled = GetLevelInfo (LEVELINFO_KILLED_MONSTERS);
		  life = RealHealth;
		  armor = RealArmor;
		  weapon = GetWeapon();
		  weaponname = "";
		  bkey = checkinventory("bluecard") | checkinventory("BD_BlueCard") | checkinventory("GLBlueCard");
		  ykey = checkinventory("yellowcard") | checkinventory("BD_YellowCard") | checkinventory("GLYellowCard");
		  rkey = checkinventory("redcard") | checkinventory("BD_RedCard") | checkinventory("GLRedCard");
		  skey = checkinventory("silvercard");
		  pkey = checkinventory("pinkcard");
		  brkey = checkinventory("browncard");
		  blkey = checkinventory("blackcard");
		  gkey = checkinventory("greencard");
		  okey = checkinventory("orangecard");
		  
		  bskull = checkinventory("blueskull") | checkinventory("BD_BlueSkull")  | checkinventory("GLBlueSkull");
		  yskull = checkinventory("yellowskull") | checkinventory("BD_YellowSkull") | checkinventory("GLYellowSkull");
		  rskull = checkinventory("redskull") | checkinventory("BD_RedSkull") | checkinventory("GLRedSkull");
		 
		  sskull = checkinventory("silverskull");
		  pskull = checkinventory("pinkskull");
		  brskull = checkinventory("brownskull");
		  blskull = checkinventory("blackskull");
		  gskull = checkinventory("greenskull");
		  oskull = checkinventory("orangeskull");
		  havegrenadea = CheckInventory("HandGrenades");
		  havegrenade = CheckInventory("U_HandGrenades");
		  haveC4weapon = CheckInventory("C4Weapon");
		  blursphere = checkinventory("BlurSphere");
		  blurtime = (GetActorPowerupTics(0, "PowerInvisibility"))/35;
		  radsuit = checkinventory("PowerIronFeet") | checkinventory("PowerMask");
		  radsuittime = (GetActorPowerupTics(0, "PowerIronFeet"))/35;
		  invusphere = checkinventory("PowerInvulnerable");
		  invutime = (GetActorPowerupTics(0, "PowerInvulnerable"))/35;
		  nightvision = checkinventory("PowerTorch") | checkinventory("PowerLightAmp");
		  nightvtime = ((GetActorPowerupTics(0, "PowerTorch"))/35)  | ((GetActorPowerupTics(0, "PowerLightAmp"))/35);
		  berserk = CheckInventory("PowerStrength");
		  berserktime = (GetActorPowerupTics(0, "PowerStrength"))/35;
		  stamina = CheckInventory("UsedStamina");
		  stamina2 = CheckInventory("Stamina");
		  armortype = GetArmorInfo (ARMORINFO_CLASSNAME);
		  armortype2 = "";
		  savepercent = GetArmorInfo (ARMORINFO_SAVEPERCENT);
		  savepint = 0;
		  ammo = 0;
		  ammo2 = 0;
		  ammo3 = 0;
		  weicon = "";
		  BuzzAm = 0;
		  Pclip = 0;
		  clip = 0;
		  shell = 0;
		  grenade = 0;
		  C4ammo = 0;
		  greenshell = 0;
		  cell = 0;
		  rocket = 0;
		  gas = 0;
		  hellish = 0;
		  SoulAmmo = 0; 
		  revolverbullets = 0;
		  minigunammo = 0;
		  railcore = 0;
		  ammorate = 0;
		  ammorate2 = 0;
		  nightvrate = 0;
		  ammocapa = 0;
		  clipsize = 0;
		  oxygenlevel = GetAirSupply (PlayerNumber())/35;
		  PlClass = GetActorClass (0);
		  JPoints = CheckInventory("JPoints");
		  JpFull = CheckInventory("BarIsFull");
		  Jscore = checkinventory("JScore");
		  MorphedPlayer = strICmp(weapon, "D4BARONHUD") == 0 | strICmp(weapon, "REVENANT_RUNE") ==0 | strICmp(weapon, "D4REVENANTHUD") ==0;
		 
		 
		  //XV117's D4 arsenal & D4T crucible SE
		  IsPlayingD4Arsenal = CheckInventory("IsPlayingD4Arsenal");
		  IsPlayingD4TCSE = strICmp(PlClass, "Doom4Player") == 0;
		if(IsPlayingD4Arsenal | IsPlayingD4TCSE)
		{
		 modcooldown = 0;
		  maxcooldown = 0;
		  cooldownrate = 0;
		//Upgrades 
		  UpgradeBoxes = CheckInventory("UpgradeBoxToken");
		  upgrade = "";
		  upgrade2 = "";		
		//Pistol
		 UpPistolProtoGenerator = CheckInventory("HasUpgradePistolProtoGenerator");
		 UpPistolFastCharge = CheckInventory("HasUpgradePistolFastCharge");
		//Repeater
		 UpRepeaterDamage = CheckInventory("HasUpgradeRepeaterDamage") | CheckInventory("RepeaterDamageUpgrade");
		 UpRepeaterScope = CheckInventory("HasUpgradeRepeaterScope");
		 UpRepeaterStun = CheckInventory("RepeaterStunAltUpgrade");
		//Shotgun
		 ModHasTriShot = CheckInventory("ModTriShotActive") | CheckInventory("TriShotActive");
		 SGTriShotTimer = CheckInventory("SGTriShotTimer");
		 ModHasExplosiveShot = CheckInventory("ModExplosiveShotActive") | CheckInventory("GrenadeActive");
		 SGGrenadeTimer = CheckInventory("SGGrenadeTimer");
		//SSG
		 UpSSGPierce = CheckInventory("SSGUpgradePierce");
		 UpSSGReload = CheckInventory("SSGUpgradeReload");
		//HAR
		 ModHasMicroMissile = CheckInventory("ModMicroMissileActive") | CheckInventory("MicroMissilesActive");
		 ModHasTacticalScope = CheckInventory("ModTacticalScopeActive") | CheckInventory("TacticalScopeActive");
		//Chaingun
		 ModHasMobileTurret = CheckInventory("ModMobileTurretActive") | CheckInventory("MobileTurretActive");
		 ModHasGatlingRotator = CheckInventory("ModGatlingRotatorActive") | CheckInventory("GatlingRotatorActive");
		//Rocket launcher
		 ModHasLockOn = CheckInventory("ModLockOnActive") | CheckInventory("LockOnActive");
		 ModHasDetonator = CheckInventory("ModDetonatorActive") | CheckInventory("DetonateActive");
		//Grenade launcher
		 UpGrenadeLaucherDamage = CheckInventory("HasUpgradeGrenadeLaucherDamage") | CheckInventory("GrenadeLauncherSmartDamageUpgrade");
		 UpGrenadeLaucherAltFire = CheckInventory("HasUpgradeGrenadeLaucherAltFire")| CheckInventory("GrenadeLauncherAltFireUpgrade");
		 GLGasTimer = CheckInventory("GLGasTimer");
		//Plasma gun
		 ModHasHeatWave = CheckInventory("ModHeatWaveActive") | CheckInventory("HeatBlastActive");
		 ModHasStunBomb = CheckInventory("ModStunBombActive") | CheckInventory("StunBombActive");
		 StunBombTimer = CheckInventory("PlasmaStunBombTimer") | CheckInventory("PlasmaStunBombCounter");
		//BFG
		 ModBFGAltfire = CheckInventory("BFGAltfireUpgrade");
		 ModBFGVolley = CheckInventory("BFGVolleyUpgrade");
		//Lighnting Gun
		 UpLightningGunDamage = CheckInventory("HasUpgradeLightningGunDamage") | CheckInventory("LightningGunDamageUpgrade");
		 UpLightningGunAltFire = CheckInventory("HasUpgradeLightningGunAltFire") | CheckInventory("LightningGunAltFireUpgrade");
		//Hellshot
		 UpHellshotAltFire = CheckInventory("HasUpgradeHellshotAltFire") | CheckInventory("HellShotAltFireUpgrade");
		 HSFlareTimer = CheckInventory("HSFlareTimer");
		 UpHellshotDamage = CheckInventory("HellShotDamageUpgrade");
		//VortexRifle
		 UpVortexRifleDamage = CheckInventory("HasUpgradeVortexRifleDamage") | CheckInventory("VortexDamageUpgrade");
		 UpVortexRifleScope = CheckInventory("HasUpgradeVortexRifleScope") | CheckInventory("VortexBetterScopeUpgrade");
		 VortexFireTimer	= CheckInventory("VortexFireToken");
		//Gauss Canon
		 ModHasSiegeMode = CheckInventory("ModSiegeModeActive") | CheckInventory("SiegeActive");
		 ModHasPrecisionScope = CheckInventory("ModPrecisionScopeActive") | CheckInventory("PrecisionActive");
		//HellishMissile
		 UpMissileBatteryJetThruster = CheckInventory("HasUpgradeMissileBatteryJetThruster");
		 UpMissileBatteryGuidedMissile = CheckInventory("HasUpgradeMissileBatteryGuidedMissile");
		//Mancubus Canon
		 UpFlammeCannonMK2 = CheckInventory("HasUpgradeFlammeCannonMK2");
		}
		 if(strICmp(weapon, "D4BARONHUD") == 0 ) maxlife = 1000;
		  if(strICmp(weapon, "REVENANT_RUNE") == 0 ) maxlife = 900;
		  if(strICmp(weapon, "D4REVENANTHUD") == 0 ) maxlife = 300;
		  if(!MorphedPlayer) maxlife = GetActorProperty (0, APROP_SpawnHealth);
		  if(life != 0)
		  {
		 	int liferate = ((FixedMul(100.000,(FixedDiv (life, maxlife))))>> 16);
		  }
		  
	
		//Visor cracks
		
		if (!extcam && !MorphedPlayer)
		 {
		    if(life <= 65) SetFont("VSBREAK");
			if(life > 65) SetFont("Blank");
		 }		   
		else SetFont("Blank");
		  {
		   HudMessage(s:"A"; HUDMSG_ALPHA, 17402, CR_untranslated, (FixedMul(x+0.065,xres<<16)>>16<<16), (FixedMul(y,yres<<16)>>16<<16), 0.01, 0.30);
		  }
		  
	    if (!extcam && !MorphedPlayer)
		 {
			if(life <= 50 && life > 30) SetFont("VSBREAK2");
			if(life > 50) SetFont("Blank");
			if(life <= 30) SetFont("Blank");
		 }
		else SetFont("Blank");
			{
			 HudMessage(s:"A"; HUDMSG_ALPHA, 17401, CR_untranslated, (FixedMul(x-0.165,xres<<16)>>16<<16), (FixedMul(y,yres<<16)>>16<<16), 0.01, 0.40);
			} 
			
	    if (!extcam && !MorphedPlayer)
		 {	  
			  if(life <= 30) SetFont("VSBREAK3");
			  if(life > 30) SetFont("Blank");
		 }
		 else SetFont("Blank");
			 {
			  HudMessage(s:"A"; HUDMSG_ALPHA, 17400, CR_untranslated, (FixedMul(x-0.165,xres<<16)>>16<<16), (FixedMul(y,yres<<16)>>16<<16), 0.01, 0.40);
			 } 	  
		if (!extcam && !MorphedPlayer)
		 {	  
			  if(life <= 16) SetFont("VSBREAK4");
			  if(life > 16) SetFont("Blank");
		 }
		 else SetFont("Blank");
			 {
			  HudMessage(s:"A"; HUDMSG_ALPHA, 17403, CR_untranslated, (FixedMul(x+0.150,xres<<16)>>16<<16), (FixedMul(y,yres<<16)>>16<<16), 0.01, 0.50);
			 } 	  
		 
		//JPoints bar
		if (!extcam && !MorphedPlayer)
		 {
		  
		  if((JPoints) == 0) setfont("JPNTS21");
		  if((JPoints) >= 50 && (JPoints) <= 240) SetFont("JPNTS20");
		  if((JPoints) >= 241 && (JPoints) <= 440) SetFont("JPNTS19");
		  if((JPoints) >= 441 && (JPoints) <= 640) SetFont("JPNTS18");
		  if((JPoints) >= 641 && (JPoints) <= 840) SetFont("JPNTS17");
		  if((JPoints) >= 841 && (JPoints) <= 1040) SetFont("JPNTS16");
		  if((JPoints) >= 1041 && (JPoints) <= 1240) SetFont("JPNTS15");
		  if((JPoints) >= 1241 && (JPoints) <= 1440) SetFont("JPNTS14");
		  if((JPoints) >= 1441 && (JPoints) <= 1640) SetFont("JPNTS13");
		  if((JPoints) >= 1641 && (JPoints) <= 1840) SetFont("JPNTS12");
		  if((JPoints) >= 1841 && (JPoints) <= 2040) SetFont("JPNTS11");
		  if((JPoints) >= 2041 && (JPoints) <= 2240) SetFont("JPNTS10");
		  if((JPoints) >= 2241 && (JPoints) <= 2440) SetFont("JPNTS9");
		  if((JPoints) >= 2441 && (JPoints) <= 2640) SetFont("JPNTS8");
		  if((JPoints) >= 2641 && (JPoints) <= 2840) SetFont("JPNTS7");
		  if((JPoints) >= 2841 && (JPoints) <= 3040) SetFont("JPNTS6");
		  if((JPoints) >= 3041 && (JPoints) <= 3240) SetFont("JPNTS5");
		  if((JPoints) >= 3241 && (JPoints) <= 3440) SetFont("JPNTS4");
		  if((JPoints) >= 3441 && (JPoints) <= 3640) SetFont("JPNTS3");
		  if((JPoints) >= 3641 && (JPoints) <= 3800) SetFont("JPNTS2");
		  if((JPoints) >= 3801 && (JPoints) <= 3999) SetFont("JPNTS1");
		  if((JPoints) >= 4000) SetFont("JPOD00");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16559926, CR_cyan, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.302),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		}
		else SetFont("Blank");
		  {
		  HudMessage(s:"A"; HUDMSG_ALPHA, 16559926, CR_green, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.302),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		 if (!extcam && !MorphedPlayer)
		   {
			if (JPoints < 4000 && JPoints > 50) setfont("JPINDI1");
			if (JPoints == 00) setfont("Blank");
			if (JPoints >= 4000) setfont("JPIND00");
		   }
		else SetFont("Blank");
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1649, CR_untranslated, (FixedMul(((x + offset) - 0.442),xres<<16)>>16<<16), (FixedMul((y - 0.302),yres<<16)>>16<<16), 0.01, 0.60);	
				} 
		// Jscore	
		if (!extcam && !MorphedPlayer && Jscore != 0)
		   {		
		   SetFont("AMMOFONT");
		   HudMessage(i:JScore; HUDMSG_ALPHA, 9944472, CR_yellow, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.165),yres<<16)>>16<<16), 0.01, 0.45);  
		   }
		else SetFont("Blank");
		HudMessage(i:JScore; HUDMSG_ALPHA, 9944472, CR_yellow, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.165),yres<<16)>>16<<16), 0.01, 0.45);		
		
	 	if (!extcam && !MorphedPlayer && Jscore != 0)
		   {		  
		   SetFont("SCORED1");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 9944473, CR_yellow, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y - 0.165),yres<<16)>>16<<16), 0.01, 0.45);
		   }
		else SetFont("Blank");
		HudMessage(s:"A"; HUDMSG_ALPHA, 9944473, CR_yellow, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y - 0.165),yres<<16)>>16<<16), 0.01, 0.45);
		
		//oxygenbar
		if (life > 0)
		{
		if (!extcam && !MorphedPlayer)
		 {
		  if (oxygenlevel != 20)
		  {
		  if(oxygenlevel <= 0) SetFont("Blank");
		  if(oxygenlevel == 1 ) SetFont("OXYG20");
		  if(oxygenlevel == 2 ) SetFont("OXYG19");
		  if(oxygenlevel == 3 ) SetFont("OXYG18");
		  if(oxygenlevel == 4 ) SetFont("OXYG17");
		  if(oxygenlevel == 5 ) SetFont("OXYG16");
		  if(oxygenlevel == 6 ) SetFont("OXYG15");
		  if(oxygenlevel == 7 ) SetFont("OXYG14");
		  if(oxygenlevel == 8 ) SetFont("OXYG13");
		  if(oxygenlevel == 9 ) SetFont("OXYG12");
		  if(oxygenlevel == 10 ) SetFont("OXYG11");
		  if(oxygenlevel == 11 ) SetFont("OXYG10");
		  if(oxygenlevel == 12 ) SetFont("OXYG9");
		  if(oxygenlevel == 13 ) SetFont("OXYG8");
		  if(oxygenlevel == 14 ) SetFont("OXYG7");
		  if(oxygenlevel == 15 ) SetFont("OXYG6");
		  if(oxygenlevel == 16 ) SetFont("OXYG5");
		  if(oxygenlevel == 17 ) SetFont("OXYG4");
		  if(oxygenlevel == 18 ) SetFont("OXYG3");
		  if(oxygenlevel == 19 ) SetFont("OXYG2");
		  if(oxygenlevel > 19 && oxygenlevel < 20) SetFont("OXYG1");
		  }
		  if (oxygenlevel == 20)
		  {
		  SetFont("blank");
		  }
		}
		else SetFont("Blank");
		  {
		  HudMessage(s:"A"; HUDMSG_ALPHA, 1642, CR_green, (FixedMul(((x + offset) - 0.510),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		 if (!extcam && !MorphedPlayer)
		   {
			if (oxygenlevel < 20 && oxygenlevel > 3) setfont("OXYAB");
			if (oxygenlevel == 20) setfont("Blank");
			if (oxygenlevel <= 3) setfont("OXYO00");
		   }
		else SetFont("Blank");
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1643, CR_untranslated, (FixedMul(((x + offset) - 0.620),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.60);	
				} 
		}
		if (life <= 0)
		{
		 SetFont("Blank");
		 {
		  HudMessage(s:"A"; HUDMSG_ALPHA, 1642, CR_green, (FixedMul(((x + offset) - 0.510),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.60);
		  HudMessage(s:"A"; HUDMSG_ALPHA, 1643, CR_untranslated, (FixedMul(((x + offset) - 0.620),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.60);	
		  } 
		}
		//Life bar
		{
		  if (!extcam && !MorphedPlayer)
		  {
		  if(life == 0) setfont("ARM21");
		  if(life >= 1 && life <= 5) SetFont("ARM20");
		  if(life >= 6 && life <= 10) SetFont("ARM19");
		  if(life >= 11 && life <= 15) SetFont("ARM18");
		  if(life >= 16 && life <= 20) SetFont("ARM17");
		  if(life >= 21 && life <= 25) SetFont("ARM16");
		  if(life >= 26 && life <= 30) SetFont("ARM15");
		  if(life >= 31 && life <= 35) SetFont("ARM14");
		  if(life >= 36 && life <= 40) SetFont("ARM13");
		  if(life >= 41 && life <= 45) SetFont("ARM12");
		  if(life >= 46 && life <= 50) SetFont("ARM11");
		  if(life >= 51 && life <= 55) SetFont("ARM10");
		  if(life >= 56 && life <= 60) SetFont("ARM9");
		  if(life >= 61 && life <= 65) SetFont("ARM8");
		  if(life >= 66 && life <= 70) SetFont("ARM7");
		  if(life >= 71 && life <= 75) SetFont("ARM6");
		  if(life >= 76 && life <= 80) SetFont("ARM5");
		  if(life >= 81 && life <= 85) SetFont("ARM4");
		  if(life >= 86 && life <= 90) SetFont("ARM3");
		  if(life >= 91 && life <= 95) SetFont("ARM2");
		  if(life >= 96 && life <= 100) SetFont("ARM1");
		  if(life >= 101 && life <= 105) SetFont("UBARM1");
		  if(life >= 106 && life <= 110) SetFont("UBARM2");
		  if(life >= 111 && life <= 115) SetFont("UBARM3");
		  if(life >= 116 && life <= 120) SetFont("UBARM4");
		  if(life >= 121 && life <= 125) SetFont("UBARM5");
		  if(life >= 126 && life <= 130) SetFont("UBARM6");
		  if(life >= 131 && life <= 135) SetFont("UBARM7");
		  if(life >= 136 && life <= 140) SetFont("UBARM8");
		  if(life >= 141 && life <= 145) SetFont("UBARM9");
		  if(life >= 146 && life <= 150) SetFont("UBARM10");
		  if(life >= 151 && life <= 155) SetFont("UBARM11");
		  if(life >= 156 && life <= 160) SetFont("UBARM12");
		  if(life >= 161 && life <= 165) SetFont("UBARM13");
		  if(life >= 166 && life <= 170) SetFont("UBARM14");
		  if(life >= 171 && life <= 175) SetFont("UBARM15");
		  if(life >= 176 && life <= 180) SetFont("UBARM16");
		  if(life >= 181 && life <= 185) SetFont("UBARM17");
		  if(life >= 186 && life <= 190) SetFont("UBARM18");
		  if(life >= 191 && life <= 195) SetFont("UBARM19");
		  if(life >= 196) SetFont("UBARM20");
		  }
		  else if (!extcam && MorphedPlayer)
		  {
		  if(liferate == 0) setfont("HELLHP21");
		  if(liferate >= 1 && liferate <= 5) SetFont("HELLHP20");
		  if(liferate >= 6 && liferate <= 10) SetFont("HELLHP19");
		  if(liferate >= 11 && liferate <= 15) SetFont("HELLHP18");
		  if(liferate >= 16 && liferate <= 20) SetFont("HELLHP17");
		  if(liferate >= 21 && liferate <= 25) SetFont("HELLHP16");
		  if(liferate >= 26 && liferate <= 30) SetFont("HELLHP15");
		  if(liferate >= 31 && liferate <= 35) SetFont("HELLHP14");
		  if(liferate >= 36 && liferate <= 40) SetFont("HELLHP13");
		  if(liferate >= 41 && liferate <= 45) SetFont("HELLHP12");
		  if(liferate >= 46 && liferate <= 50) SetFont("HELLHP11");
		  if(liferate >= 51 && liferate <= 55) SetFont("HELLHP10");
		  if(liferate >= 56 && liferate <= 60) SetFont("HELLHP9");
		  if(liferate >= 61 && liferate <= 65) SetFont("HELLHP8");
		  if(liferate >= 66 && liferate <= 70) SetFont("HELLHP7");
		  if(liferate >= 71 && liferate <= 75) SetFont("HELLHP6");
		  if(liferate >= 76 && liferate <= 80) SetFont("HELLHP5");
		  if(liferate >= 81 && liferate <= 85) SetFont("HELLHP4");
		  if(liferate >= 86 && liferate <= 90) SetFont("HELLHP3");
		  if(liferate >= 91 && liferate <= 95) SetFont("HELLHP2");
		  if(liferate >= 96 && liferate <= 100) SetFont("HELLHP1");
		  if(liferate >= 100) SetFont("HELLHP1");
		  }
		  else SetFont("Blank");
		
		  if (!CatV_HPBottom)
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644461, CR_untranslated, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		  else
		  {
			SetHudSize(1024,yres,0);
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644461, CR_untranslated, (FixedMul(((x + offset) - 0.370),1120<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);	 
			SetHudSize(xres,yres,0);
		  }
		}
		  
		// Health Pulse
		if (!extcam && !MorphedPlayer)
		  {
		  if(life >=80) SETFONT("puls00");
		  if(life < 80 && life >=60) SETFONT("puls01");
		  if(life < 60 && life >=40) SETFONT("puls02");
		  if(life < 40 && life >=20) SETFONT("puls03");
		  if(life < 20 && life >0) SETFONT("Rpuls01");
		  }
		else if (!extcam && MorphedPlayer)
		  {
		  SETFONT("Rpuls01");
		  }
		else SetFont("Blank");
		  if (!CatV_HPBottom)
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644462, CR_untranslated, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		  else
		  {
			SetHudSize(1024,yres,0);
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644462, CR_untranslated, (FixedMul(((x + offset) - 0.370),1120<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);	 	 
			SetHudSize(xres,yres,0);
		  }
		  
		
		  
		// berserk indicator
		if (!extcam && !MorphedPlayer)
		  {
			if(berserk) SETFONT("BERS00");
			if(!berserk) SETFONT("BLANK");
 		  }
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644480, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.365),yres<<16)>>16<<16), 0.01, 0.60);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644480, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.365),yres<<16)>>16<<16), 0.01, 0.60);
				}
			}			  			
		// Radsuit indicator
		if (!extcam && !MorphedPlayer)
		   {
			if(radsuittime >= 45 ) SETFONT("Rads99");
			if(radsuittime < 45 &&  radsuittime >= 30) SETFONT("Rads75");
			if(radsuittime < 30 &&  radsuittime >= 15) SETFONT("Rads50");
			if(radsuittime < 15 &&  radsuittime >= 5) SETFONT("Rads25");		
			if(radsuittime < 5 &&  radsuittime > 0) SETFONT("Rads00");
			if(radsuittime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644481, HUDMSG_FADEINOUT, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.245),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644481, HUDMSG_FADEINOUT, (FixedMul(((x + offset) - 0.500),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		
		// Blursphere indicator
		if (!extcam && !MorphedPlayer)
		   {
			if(blurtime >= 45 ) SETFONT("INVI100");
			if(blurtime < 45 &&  blurtime >= 30) SETFONT("INVI75");
			if(blurtime < 30 &&  blurtime >= 15) SETFONT("INVI50");
			if(blurtime < 15 &&  blurtime >= 5) SETFONT("INVI25");			
			if(blurtime < 15 &&  blurtime > 0) SETFONT("INVI00");
			if(blurtime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644482, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.209),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644482, CR_untranslated, (FixedMul(((x + offset) - 0.380),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		// Invulnerability indicator
		if (!extcam && !MorphedPlayer)
		   {
			if(invutime >= 20 ) SETFONT("INVU100");
			if(invutime < 20 &&  invutime >= 15) SETFONT("INVU75");
			if(invutime < 15 &&  invutime >= 10) SETFONT("INVU50");
			if(invutime < 10 &&  invutime >= 5) SETFONT("INVU25");			
			if(invutime < 5 &&  invutime > 0) SETFONT("INVU00");
			if(invutime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644483, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644483, CR_untranslated, (FixedMul(((x + offset) - 0.420),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}	
			}
		
		// NightVision indicator
		//SETFONT("AILIFONT"); HudMessage(i:nightvtime; HUDMSG_ALPHA, 1644482, CR_untranslated, (FixedMul(((x + offset) - 0.530),xres<<16)>>16<<16), (FixedMul((y + 0.200),yres<<16)>>16<<16), 0.01, 0.60);
		if (!extcam && !MorphedPlayer)
		   {
			if(nightvtime >= 80 ) SETFONT("Batc99");
			if(nightvtime < 80 &&  nightvtime >= 60) SETFONT("Batc75");
			if(nightvtime < 60 &&  nightvtime >= 35) SETFONT("Batc50");	
			if(nightvtime < 35 &&  nightvtime >= 15) SETFONT("Batc25");		
			if(nightvtime < 15 &&  nightvtime > 0) SETFONT("Batc00");
			if(nightvtime == 0) SETFONT("BLANK");
			}
			else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644489, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644489, CR_untranslated, (FixedMul(((x + offset) - 0.460),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);				
				}
			}
	
	
	if(GetCVar ("savetime_cvar") == 2)
		{
		  int ddamage1 = CheckInventory("PowerDoubleDamage");
		  int ddamtime1 = (GetActorPowerupTics(0, "PowerDoubleDamage"))/35;
		  int ddaspeed1 = CheckInventory("PowerDoubleFiringSpeed");
		  int ddasptime1 = (GetActorPowerupTics(0, "PowerDoubleFiringSpeed"))/35;
		  int qudamage1 = CheckInventory("PowerQuadDamageST");
		  int qudamtime1 = (GetActorPowerupTics(0, "PowerQuadDamageST"))/35;
		  int bloodrush1 = CheckInventory("PowerWeaponLevel2");
	      int blrushtime1 = (GetActorPowerupTics(0, "PowerWeaponLevel2"))/35;
		  int regenpower1 = CheckInventory("PowerRegeneration");
	      int regentime1 = (GetActorPowerupTics(0, "PowerRegeneration"))/35;
		  int turbopow1 = CheckInventory("PowerTurboST");
		  int turbotime1 = (GetActorPowerupTics(0, "PowerTurboST"))/35;
		  int timefreeze1 = CheckInventory("PowerTimeFreezer");
		  int timefrtime1 = (GetActorPowerupTics(0, "PowerTimeFreezer"))/35;
		  // Double damage indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(ddamtime1 >= 20 ) SETFONT("DAMA100");
		if(ddamtime1 < 20 &&  ddamtime1 >= 15) SETFONT("DAMA75");
		if(ddamtime1 < 15 &&  ddamtime1 >= 10) SETFONT("DAMA50");
		if(ddamtime1 < 10 &&  ddamtime1 >= 5) SETFONT("DAMA25");			
		if(ddamtime1 < 5 &&  ddamtime1 > 0) SETFONT("DAMA00");
		if(ddamtime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644484, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
			}
		// Double firing speed indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(ddasptime1 >= 20 ) SETFONT("DAMA100");
		if(ddasptime1 < 20 &&  ddasptime1 >= 15) SETFONT("DAMA75");
		if(ddasptime1 < 15 &&  ddasptime1 >= 10) SETFONT("DAMA50");
		if(ddasptime1 < 10 &&  ddasptime1 >= 5) SETFONT("DAMA25");			
		if(ddasptime1 < 5 &&  ddasptime1 > 0) SETFONT("DAMA00");
		if(ddasptime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644491, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
			}
		//Quad damage indicator 
		if (!extcam && !MorphedPlayer)
		   {
		if(qudamtime1 >= 20 ) SETFONT("QAMA100");
		if(qudamtime1 < 20 &&  qudamtime1 >= 15) SETFONT("QAMA75");
		if(qudamtime1 < 15 &&  qudamtime1 >= 10) SETFONT("QAMA50");
		if(qudamtime1 < 10 &&  qudamtime1 >= 5) SETFONT("QAMA25");			
		if(qudamtime1 < 5 &&  qudamtime1 > 0) SETFONT("QAMA00");
		if(qudamtime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644485, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
			}
		//Bloodrush indicator 
		if (!extcam && !MorphedPlayer)
		   {
		if(blrushtime1 >= 400 ) SETFONT("DOUB100");
		if(blrushtime1 < 400 &&  blrushtime1 >= 150) SETFONT("DOUB75");
		if(blrushtime1 < 150 &&  blrushtime1 >= 75) SETFONT("DOUB50");
		if(blrushtime1 < 75 &&  blrushtime1 >= 25) SETFONT("DOUB25");			
		if(blrushtime1 < 25 &&  blrushtime1 > 0) SETFONT("DOUB00");
		if(blrushtime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644486, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.205),yres<<16)>>16<<16), 0.01, 0.50);
			}
		// Regenpower indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(regentime1 >= 45 ) SETFONT("REGE100");
		if(regentime1 < 45 &&  regentime1 >= 30) SETFONT("REGE75");
		if(regentime1 < 30 &&  regentime1 >= 15) SETFONT("REGE50");
		if(regentime1 < 15 &&  regentime1 >= 5) SETFONT("REGE25");			
		if(regentime1 < 15 &&  regentime1 > 0) SETFONT("REGE00");
		if(regentime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.245),yres<<16)>>16<<16), 0.01, 0.50);
			}
		// Turbo indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(turbotime1 >= 20 ) SETFONT("SPEE100");
		if(turbotime1 < 20 &&  turbotime1 >= 15) SETFONT("SPEE75");
		if(turbotime1 < 15 &&  turbotime1 >= 10) SETFONT("SPEE50");
		if(turbotime1 < 10 &&  turbotime1 >= 5) SETFONT("SPEE25");			
		if(turbotime1 < 5 &&  turbotime1 > 0) SETFONT("SPEE00");
		if(turbotime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
			}
		
		// Time Freezer indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(timefrtime1 >= 5 ) SETFONT("TIMFR99");
		if(timefrtime1 < 5 &&  timefrtime1 >= 4) SETFONT("TIMFR99");
		if(timefrtime1 < 4 &&  timefrtime1 >= 3) SETFONT("TIMFR50");
		if(timefrtime1 < 3 &&  timefrtime1 >= 2) SETFONT("TIMFR25");			
		if(timefrtime1 < 2 &&  timefrtime1 >= 1) SETFONT("TIMFR00");
		if(timefrtime1 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644999, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
			}
		}
	
	if(IsPlayingD4Arsenal) //XV117's D4 Arsenal powerups
	  {
	 int qudamage2 = CheckInventory("D4PowerQuadDamage");
	 int qudamtime2 = (GetActorPowerupTics(0, "D4PowerQuadDamage"))/35;
	 int regenpower2 = CheckInventory("D4PowerRegen");
	 int regentime2 = (GetActorPowerupTics(0, "D4PowerRegen"))/35;
	 int turbopow2 = CheckInventory("D4PowerHaste");
	 int turbotime2 = (GetActorPowerupTics(0, "D4PowerHaste"))/35;
	 int D4invuln = CheckInventory("D4PowerInvuln");
	 int D4invulntime = (GetActorPowerupTics(0, "D4PowerInvuln"))/35;
	 
		//Quad damage indicator 
		if (!extcam && !MorphedPlayer)
		   {
		if(qudamtime2 >= 20 ) SETFONT("QAMA100");
		if(qudamtime2 < 20 &&  qudamtime2 >= 15) SETFONT("QAMA75");
		if(qudamtime2 < 15 &&  qudamtime2 >= 10) SETFONT("QAMA50");
		if(qudamtime2 < 10 &&  qudamtime2 >= 5) SETFONT("QAMA25");			
		if(qudamtime2 < 5 &&  qudamtime2 > 0) SETFONT("QAMA00");
		if(qudamtime2 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644485, CR_untranslated, (FixedMul(((x + offset) - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul(((x + offset) - 0.340),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
				
			}
	
		// Regenpower indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(regentime2 >= 45 ) SETFONT("REGE100");
		if(regentime2 < 45 &&  regentime2 >= 30) SETFONT("REGE75");
		if(regentime2 < 30 &&  regentime2 >= 15) SETFONT("REGE50");
		if(regentime2 < 15 &&  regentime2 >= 5) SETFONT("REGE25");			
		if(regentime2 < 15 &&  regentime2 > 0) SETFONT("REGE00");
		if(regentime2 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul(((x + offset) - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.245),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul(((x + offset) - 0.420),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
				
			}
		// Turbo indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(turbotime2 >= 20 ) SETFONT("SPEE100");
		if(turbotime2 < 20 &&  turbotime2 >= 15) SETFONT("SPEE75");
		if(turbotime2 < 15 &&  turbotime2 >= 10) SETFONT("SPEE50");
		if(turbotime2 < 10 &&  turbotime2 >= 5) SETFONT("SPEE25");			
		if(turbotime2 < 5 &&  turbotime2 > 0) SETFONT("SPEE00");
		if(turbotime2 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul(((x + offset)  - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul(((x + offset) - 0.380),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		//Invulnerability
		if (!extcam && !MorphedPlayer)
		   {
			if(D4invulntime >= 20 ) SETFONT("INVU100");
			if(D4invulntime < 20 &&  D4invulntime >= 15) SETFONT("INVU75");
			if(D4invulntime < 15 &&  D4invulntime >= 10) SETFONT("INVU50");
			if(D4invulntime < 10 &&  D4invulntime >= 5) SETFONT("INVU25");			
			if(D4invulntime < 5 &&  D4invulntime > 0) SETFONT("INVU00");
			if(D4invulntime == 0) SETFONT("BLANK");
		}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644483, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644483, CR_untranslated, (FixedMul(((x + offset) - 0.420),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}			
			}
	 }
	if(IsPlayingD4TCSE) // D4T Crucible SE
	{
	 int qudamageD4 = CheckInventory("PowerQDamage");
	 int qudamtimeD4 = (GetActorPowerupTics(0, "PowerQDamage"))/35;
	 int turbopowD4 = CheckInventory("PowerD4Speed");
	 int turbotimeD4 = (GetActorPowerupTics(0, "PowerD4Speed"))/35;
	 int regenpowerD4 = CheckInventory("PowerD4Regeneration");
	 int regentimeD4 = (GetActorPowerupTics(0, "PowerD4Regeneration"))/35;
	 int invulnD4 = CheckInventory("PowerD4Invulnerable");
	 int invulntimeD4 = (GetActorPowerupTics(0, "PowerD4Invulnerable"))/35;
	 
		//Quad damage indicator 
		if (!extcam && !MorphedPlayer)
		   {
		if(qudamtimeD4 >= 20 ) SETFONT("QAMA100");
		if(qudamtimeD4 < 20 &&  qudamtimeD4 >= 15) SETFONT("QAMA75");
		if(qudamtimeD4 < 15 &&  qudamtimeD4 >= 10) SETFONT("QAMA50");
		if(qudamtimeD4 < 10 &&  qudamtimeD4 >= 5) SETFONT("QAMA25");			
		if(qudamtimeD4 < 5 &&  qudamtimeD4 > 0) SETFONT("QAMA00");
		if(qudamtimeD4 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644485, CR_untranslated, (FixedMul(((x + offset) - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul(((x + offset) - 0.340),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
				
			}
	
		// Turbo indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(turbotimeD4 >= 20 ) SETFONT("SPEE100");
		if(turbotimeD4 < 20 &&  turbotimeD4 >= 15) SETFONT("SPEE75");
		if(turbotimeD4 < 15 &&  turbotimeD4 >= 10) SETFONT("SPEE50");
		if(turbotimeD4 < 10 &&  turbotimeD4 >= 5) SETFONT("SPEE25");			
		if(turbotimeD4 < 5 &&  turbotimeD4 > 0) SETFONT("SPEE00");
		if(turbotimeD4 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul(((x + offset)  - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul(((x + offset) - 0.380),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		//Invulnerability
		if (!extcam && !MorphedPlayer)
		   {
			if(invulntimeD4 >= 20 ) SETFONT("INVU100");
			if(invulntimeD4 < 20 &&  invulntimeD4 >= 15) SETFONT("INVU75");
			if(invulntimeD4 < 15 &&  invulntimeD4 >= 10) SETFONT("INVU50");
			if(invulntimeD4 < 10 &&  invulntimeD4 >= 5) SETFONT("INVU25");			
			if(invulntimeD4 < 5 &&  invulntimeD4 > 0) SETFONT("INVU00");
			if(invulntimeD4 == 0) SETFONT("BLANK");
		}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644483, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644483, CR_untranslated, (FixedMul(((x + offset) - 0.420),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}			
			}
		// Regenpower indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(regentimeD4 >= 45 ) SETFONT("REGE100");
		if(regentimeD4 < 45 &&  regentimeD4 >= 30) SETFONT("REGE75");
		if(regentimeD4 < 30 &&  regentimeD4 >= 15) SETFONT("REGE50");
		if(regentimeD4 < 15 &&  regentimeD4 >= 5) SETFONT("REGE25");			
		if(regentimeD4 < 15 &&  regentimeD4 > 0) SETFONT("REGE00");
		if(regentimeD4 == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul(((x + offset)  - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul(((x + offset) - 0.380),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
	}
	if(strICmp(PlClass, "BEDoomer") == 0) // BD:BE
	  {
	 int ddaspeed = CheckInventory("PowerD4DFS");
     int ddasptime = (GetActorPowerupTics(0, "PowerD4DFS"))/35;
	 int qudamage = CheckInventory("PowerD4QuadDamage");
	 int qudamtime = (GetActorPowerupTics(0, "PowerD4QuadDamage"))/35;
	 int regenpower = CheckInventory("PowerD4Regen");
	 int regentime = (GetActorPowerupTics(0, "PowerD4Regen"))/35;
	 int turbopow = CheckInventory("PowerD4Haste");
	 int turbotime = (GetActorPowerupTics(0, "PowerD4Haste"))/35;
	 // Double firing speed indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(ddasptime >= 20 ) SETFONT("DAMA100");
		if(ddasptime < 20 &&  ddasptime >= 15) SETFONT("DAMA75");
		if(ddasptime < 15 &&  ddasptime >= 10) SETFONT("DAMA50");
		if(ddasptime < 10 &&  ddasptime >= 5) SETFONT("DAMA25");			
		if(ddasptime < 5 &&  ddasptime > 0) SETFONT("DAMA00");
		if(ddasptime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644491, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
			}
		//Quad damage indicator 
		if (!extcam && !MorphedPlayer)
		   {
		if(qudamtime >= 20 ) SETFONT("QAMA100");
		if(qudamtime < 20 &&  qudamtime >= 15) SETFONT("QAMA75");
		if(qudamtime < 15 &&  qudamtime >= 10) SETFONT("QAMA50");
		if(qudamtime < 10 &&  qudamtime >= 5) SETFONT("QAMA25");			
		if(qudamtime < 5 &&  qudamtime > 0) SETFONT("QAMA00");
		if(qudamtime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644485, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
			}
	
		// Regenpower indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(regentime >= 45 ) SETFONT("REGE100");
		if(regentime < 45 &&  regentime >= 30) SETFONT("REGE75");
		if(regentime < 30 &&  regentime >= 15) SETFONT("REGE50");
		if(regentime < 15 &&  regentime >= 5) SETFONT("REGE25");			
		if(regentime < 15 &&  regentime > 0) SETFONT("REGE00");
		if(regentime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644487, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.245),yres<<16)>>16<<16), 0.01, 0.50);
			}
		// Turbo indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(turbotime >= 20 ) SETFONT("SPEE100");
		if(turbotime < 20 &&  turbotime >= 15) SETFONT("SPEE75");
		if(turbotime < 15 &&  turbotime >= 10) SETFONT("SPEE50");
		if(turbotime < 10 &&  turbotime >= 5) SETFONT("SPEE25");			
		if(turbotime < 5 &&  turbotime > 0) SETFONT("SPEE00");
		if(turbotime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
			}
	 }
	if(CheckInventory("IsPlayingAsProjectBrutality")) // PB 3.0
	  {			
		 int dddamage = CheckInventory("PowerDoubleDamage");
		 int dddamtime = (GetActorPowerupTics(0, "PowerDoubleDamage"))/35;
		 int dddaspeed = CheckInventory("PowerDoubleFiringSpeed");
		 int dddasptime = (GetActorPowerupTics(0, "PowerDoubleFiringSpeed"))/35;
		 int tturbopow = CheckInventory("PowerSpeed");
		 int tturbotime = (GetActorPowerupTics(0, "PowerSpeed"))/35;
		 int timefreeze = CheckInventory("PowerTimeFreezer");
		 int timefrtime = (GetActorPowerupTics(0, "PowerTimeFreezer"))/35;
		// Double damage indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(dddamtime >= 20 ) SETFONT("DAMA100");
		if(dddamtime < 20 &&  dddamtime >= 15) SETFONT("DAMA75");
		if(dddamtime < 15 &&  dddamtime >= 10) SETFONT("DAMA50");
		if(dddamtime < 10 &&  dddamtime >= 5) SETFONT("DAMA25");			
		if(dddamtime < 5 &&  dddamtime > 0) SETFONT("DAMA00");
		if(dddamtime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644484, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644484, CR_untranslated, (FixedMul((x - 0.380),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		// Double firing speed indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(dddasptime >= 20 ) SETFONT("DAMA100");
		if(dddasptime < 20 &&  dddasptime >= 15) SETFONT("DAMA75");
		if(dddasptime < 15 &&  dddasptime >= 10) SETFONT("DAMA50");
		if(dddasptime < 10 &&  dddasptime >= 5) SETFONT("DAMA25");			
		if(dddasptime < 5 &&  dddasptime > 0) SETFONT("DAMA00");
		if(dddasptime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644491, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.165),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644491, CR_untranslated, (FixedMul((x - 0.420),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		// Turbo indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(tturbotime >= 20 ) SETFONT("SPEE100");
		if(tturbotime < 20 &&  tturbotime >= 15) SETFONT("SPEE75");
		if(tturbotime < 15 &&  tturbotime >= 10) SETFONT("SPEE50");
		if(tturbotime < 10 &&  tturbotime >= 5) SETFONT("SPEE25");			
		if(tturbotime < 5 &&  tturbotime > 0) SETFONT("SPEE00");
		if(tturbotime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644488, CR_untranslated, (FixedMul((x - 0.460),xres<<16)>>16<<16), (FixedMul((y + 0.190),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		// Time Freezer indicator
		if (!extcam && !MorphedPlayer)
		   {
		if(timefrtime >= 5 ) SETFONT("TIMFR99");
		if(timefrtime < 5 &&  timefrtime >= 4) SETFONT("TIMFR99");
		if(timefrtime < 4 &&  timefrtime >= 3) SETFONT("TIMFR50");
		if(timefrtime < 3 &&  timefrtime >= 2) SETFONT("TIMFR25");			
		if(timefrtime < 2 &&  timefrtime >= 1) SETFONT("TIMFR00");
		if(timefrtime == 0) SETFONT("BLANK");
			}
		else SetFont("Blank");
			{
				if (!CatV_HPBottom)
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644999, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
				else				
				{
					HudMessage(s:"A"; HUDMSG_ALPHA, 1644999, CR_untranslated, (FixedMul((x - 0.445),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.50);
				}
			}
		}
	//BDBE Stamina
	if(strICmp(PlClass, "BEDoomer") == 0)  // BD:BE
	  {
	  //Stamina indicator
		if (!extcam && !MorphedPlayer)
		   {
			  if(stamina2 == 840) setfont("BLANK");
			  if(stamina2 <= 839 && stamina2 >= 800) setfont("BLANK");
			  if(stamina2 <= 799 && stamina2 >= 760) SetFont("STAM20");
			  if(stamina2 <= 759 && stamina2 >= 710) SetFont("STAM19");
			  if(stamina2 <= 709 && stamina2 >= 670) SetFont("STAM18");
			  if(stamina2 <= 669 && stamina2 >= 630) SetFont("STAM17");
			  if(stamina2 <= 629 && stamina2 >= 590) SetFont("STAM16");
			  if(stamina2 <= 589 && stamina2 >= 550) SetFont("STAM15");
			  if(stamina2 <= 549 && stamina2 >= 510) SetFont("STAM14");
			  if(stamina2 <= 509 && stamina2 >= 470) SetFont("STAM13");
			  if(stamina2 <= 469 && stamina2 >= 430) SetFont("STAM12");
			  if(stamina2 <= 429 && stamina2 >= 390) SetFont("STAM11");
			  if(stamina2 <= 389 && stamina2 >= 350) SetFont("STAM10");
			  if(stamina2 <= 349 && stamina2 >= 310) SetFont("STAM9");
			  if(stamina2 <= 309 && stamina2 >= 270) SetFont("STAM8");
			  if(stamina2 <= 269 && stamina2 >= 230) SetFont("STAM7");
			  if(stamina2 <= 229 && stamina2 >= 190) SetFont("STAM6");
			  if(stamina2 <= 189 && stamina2 >= 150) SetFont("STAM5");
			  if(stamina2 <= 149 && stamina2 >= 110) SetFont("STAM4");
			  if(stamina2 <= 109 && stamina2 >= 70) SetFont("STAM3");
			  if(stamina2 <= 69 && stamina2 >= 30) SetFont("STAM2");
			  if(stamina2 <= 29) SetFont("STAM1");
		   }
		else SetFont("Blank");
				{
					if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949499, CR_untranslated, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.382),yres<<16)>>16<<16), 0.01, 0.60);
					  } 
					  else
					  {
						SetHudSize(1024,yres,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949499, CR_untranslated, (FixedMul(((x + offset) - 0.380),1120<<16)>>16<<16), (FixedMul((y + 0.258),yres<<16)>>16<<16), 0.01, 0.60);	 
						SetHudSize(xres,yres,0);
					  }
					
				}
		if (!extcam && !MorphedPlayer)
		   {	
			 if (stamina2 <= 149) setfont("STAMO00");
			 if (stamina2 >= 150) setfont("BLANK");
		   }
		else SetFont("Blank");
				{
					if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949498, CR_untranslated, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.382),yres<<16)>>16<<16), 0.01, 0.60);
					  } 
					  else
					  {
					    SetHudSize(1024,yres,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949498, CR_untranslated, (FixedMul(((x + offset) - 0.342),1120<<16)>>16<<16), (FixedMul((y + 0.258),yres<<16)>>16<<16), 0.01, 0.60);	 
						SetHudSize(xres,yres,0);
					  }
				}
	  }
	else
	{
		//Stamina indicator
		if (!extcam && !MorphedPlayer)
		   {
			  if(stamina == 0) setfont("BLANK");
			  if(stamina >= 1 && stamina <= 3) setfont("BLANK");
			  if(stamina >= 4 && stamina <= 5) SetFont("STAM20");
			  if(stamina >= 6 && stamina <= 10) SetFont("STAM19");
			  if(stamina >= 11 && stamina <= 15) SetFont("STAM18");
			  if(stamina >= 16 && stamina <= 20) SetFont("STAM17");
			  if(stamina >= 21 && stamina <= 25) SetFont("STAM16");
			  if(stamina >= 26 && stamina <= 30) SetFont("STAM15");
			  if(stamina >= 31 && stamina <= 35) SetFont("STAM14");
			  if(stamina >= 36 && stamina <= 40) SetFont("STAM13");
			  if(stamina >= 41 && stamina <= 45) SetFont("STAM12");
			  if(stamina >= 46 && stamina <= 50) SetFont("STAM11");
			  if(stamina >= 51 && stamina <= 55) SetFont("STAM10");
			  if(stamina >= 56 && stamina <= 60) SetFont("STAM9");
			  if(stamina >= 61 && stamina <= 65) SetFont("STAM8");
			  if(stamina >= 66 && stamina <= 70) SetFont("STAM7");
			  if(stamina >= 71 && stamina <= 75) SetFont("STAM6");
			  if(stamina >= 76 && stamina <= 80) SetFont("STAM5");
			  if(stamina >= 81 && stamina <= 85) SetFont("STAM4");
			  if(stamina >= 86 && stamina <= 90) SetFont("STAM3");
			  if(stamina >= 91 && stamina <= 95) SetFont("STAM2");
			  if(stamina >= 96) SetFont("STAM1");
		   }
		else SetFont("Blank");
				{
					if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949499, CR_untranslated, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.382),yres<<16)>>16<<16), 0.01, 0.60);
					  } 
					  else
					  {
						SetHudSize(1024,yres,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949499, CR_untranslated, (FixedMul(((x + offset) - 0.380),1120<<16)>>16<<16), (FixedMul((y + 0.258),yres<<16)>>16<<16), 0.01, 0.60);	 
						SetHudSize(xres,yres,0);						
					  }
				}
		if (!extcam && !MorphedPlayer)
		   {	
			 if (stamina >= 90) setfont("STAMO00");
			 if (stamina <= 89) setfont("BLANK");
		   }
		else SetFont("Blank");
				{
					if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949498, CR_untranslated, (FixedMul(((x + offset) - 0.342),xres<<16)>>16<<16), (FixedMul((y - 0.382),yres<<16)>>16<<16), 0.01, 0.60);
					  } 
					  else
					  {
					    SetHudSize(1024,yres,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 16949498, CR_untranslated, (FixedMul(((x + offset) - 0.380),1120<<16)>>16<<16), (FixedMul((y + 0.258),yres<<16)>>16<<16), 0.01, 0.60);	 
						SetHudSize(xres,yres,0);
					  }
				}
		}
		
	// Armor Savepercent	
		savepint = (FixedMul(100.000, savepercent) >> 16);
	
		if (!extcam && !MorphedPlayer && CatV_ArmIco)
		   {	
			if(strICmp(armortype, "None") == 0 && (strICmp(weapon, "D4BARONHUD") == 0 | strICmp(weapon, "D4REVENANTHUD") == 0))
			{
			SetFont("BLANK");
			}
			else
			{
			SetFont("AMMOFONT");
			}
		   }
		else SetFont("Blank");
			
			if (!CatV_HPBottom)
					  {
						HudMessage(i:savepint; HUDMSG_ALPHA, 1644472, CR_lightblue, (FixedMul(((x + offset) - 0.510),xres<<16)>>16<<16), (FixedMul((y + 0.280),yres<<16)>>16<<16), 0.01, 0.45);
					  } 
				 else
					  {
					  if (!extcam && !MorphedPlayer && CatV_ArmIco) SetFont("UDVSMALL");
					  else SetFont("BLANK");												
						SetHudSize(x_font_res,y_font_res,0);
						HudMessage(i:savepint; HUDMSG_ALPHA, 1644472, CR_lightblue, (FixedMul(((x + offset) - 0.550),x_font_res<<16)>>16<<16), (FixedMul((y + 0.300),y_font_res<<16)>>16<<16), 0.01, 0.45);		 
						SetHudSize(xres,yres,0);
					  }
			
			
	
	//Armor Icons
	  if(strICmp(PlClass, "BEDoomer") == 0) //BD:BE v3.1d
	  {
	  if (!extcam && !MorphedPlayer && CatV_ArmIco)
		{
		if(strICmp(armortype, "BasicArmorPickup") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Generic Armor";
			}
		if(strICmp(armortype, "ArmorBoots") == 0)
			{
			SetFont("BOTSA");
			armortype2 = "Armor Boots";
			}
		if(strICmp(armortype, "ArmorHelmet") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Helmet";
			}
		if(strICmp(armortype, "ArmorUniform") == 0)
			{
			SetFont("UNIFOA");
			armortype2 = "Armor Uniform";
			}
		if(strICmp(armortype, "LightArmorNew") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "MediumArmor") == 0)
			{
			SetFont("ARMUB");
			armortype2 = "Medium Armor";
			}
		if(strICmp(armortype, "HeavyArmorNew") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "TechArmorProtection") == 0)
			{
			SetFont("ARMUD");
			armortype2 = "Tech Armor";
			}
		if(strICmp(armortype, "BD_ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "BD_GreenArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "BD_BlueArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus2") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus1armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus5armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus10armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus15armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}	
		if(strICmp(armortype, "ArmorShard") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorShardDroped") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "LightArmor") == 0)
			{
			SetFont("PBARM1");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "HeavyArmor") == 0)
			{
			SetFont("PBARM3");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "sexyhelmet") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "sexygreenarmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "sexybluearmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "GreenArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "BlueArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "HDArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "HDGreenArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "HDBlueArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "None") == 0)
			{
			SetFont("WINDOA");
			armortype2 = "No Armor";
			}	
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "D4BARONHUD") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "D4REVENANTHUD") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}		
		}
		else SetFont("Blank");
		
				if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.535),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.50);
					  } 
				else
					  {
					    SetHudSize(1456,672,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.565),1456<<16)>>16<<16), (FixedMul((y + 0.270),672<<16)>>16<<16), 0.01, 0.50);
						SetHudSize(xres,yres,0);
					  }
	  }
	  else if(CheckInventory("64Fist")) //BD64
	  {
	  if (!extcam && !MorphedPlayer && CatV_ArmIco)
		{
		if(strICmp(armortype, "BasicArmorPickup") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Generic Armor";
			}
		if(strICmp(armortype, "ArmorBoots") == 0)
			{
			SetFont("BOTSA");
			}
		if(strICmp(armortype, "ArmorHelmet") == 0)
			{
			SetFont("HELMMA");
			}
		if(strICmp(armortype, "ArmorUniform") == 0)
			{
			SetFont("UNIFOA");
			}
		if(strICmp(armortype, "LightArmorNew") == 0)
			{
			SetFont("ARMUA");
			}
		if(strICmp(armortype, "MediumArmor") == 0)
			{
			SetFont("ARMUB");
			}
		if(strICmp(armortype, "HeavyArmorNew") == 0)
			{
			SetFont("ARMUC");
			}
		if(strICmp(armortype, "BlueArmorForMegasphere") == 0)
			{
			SetFont("ARMUGS");
			armortype2 = "Megasphere Armor";
			}
		if(strICmp(armortype, "TechArmorProtection") == 0)
			{
			SetFont("ARMUD");
			}
		if(strICmp(armortype, "BD_ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			}
		if(strICmp(armortype, "BD_GreenArmor") == 0)
			{
			SetFont("ARMUA");
			}
		if(strICmp(armortype, "BD_BlueArmor") == 0)
			{
			SetFont("ARMUC");
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus") == 0)
			{
			SetFont("SHARDA");
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus2") == 0)
			{
			SetFont("SHARDA");
			}	
		if(strICmp(armortype, "ArmorShard") == 0)
			{
			SetFont("SHARDA");
			}
		if(strICmp(armortype, "ArmorShardDroped") == 0)
			{
			SetFont("SHARDA");
			}
		if(strICmp(armortype, "LightArmor") == 0)
			{
			SetFont("ARMUA");
			}
		if(strICmp(armortype, "HeavyArmor") == 0)
			{
			SetFont("ARMUC");
			}
		if(strICmp(armortype, "ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			}
		if(strICmp(armortype, "64ArmorBonus") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "GreenArmor") == 0)
			{
			SetFont("ARMUA");
			}
		if(strICmp(armortype, "BlueArmor") == 0)
			{
			SetFont("ARMUC");
			}
		if(strICmp(armortype, "64GreenArmor") == 0)
			{
			SetFont("B64AR1");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "64BlueArmor") == 0)
			{
			SetFont("B64AR2");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "HDArmorBonus") == 0)
			{
			SetFont("SHARDA");
			}
		if(strICmp(armortype, "HDGreenArmor") == 0)
			{
			SetFont("ARMUA");
			}
		if(strICmp(armortype, "HDBlueArmor") == 0)
			{
			SetFont("ARMUC");
			}
		if(strICmp(armortype, "None") == 0)
			{
			SetFont("WINDOA");
			}	
		}
		else SetFont("Blank");
		
				if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.535),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.50);
					  } 
				else
					  {
					    SetHudSize(1456,672,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.565),1456<<16)>>16<<16), (FixedMul((y + 0.270),672<<16)>>16<<16), 0.01, 0.50);
						SetHudSize(xres,yres,0);
					  }
	  }
	  else if(CheckInventory("Melee") | CheckInventory("NewMelee")) //complexdoom + lca
	  {
	  if (!extcam && !MorphedPlayer && CatV_ArmIco)
		{
		if(strICmp(armortype, "BasicArmorPickup") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Armor";
			}
		if(strICmp(armortype, "NewArmorBonus") == 0)
			{
			SetFont("BON4A0");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "StartingArmor") == 0)
			{
			SetFont("ARMMA0");
			armortype2 = "Starting Armor";
			}
		if(strICmp(armortype, "ModdedGreenArmor2") == 0)
			{
			SetFont("ARMJA0");
			armortype2 = "Green Armor";
			}
		if(strICmp(armortype, "ModdedGreenArmor") == 0)
			{
			SetFont("ARMJA0");
			armortype2 = "Green Armor";
			}
		if(strICmp(armortype, "ModdedBlueArmor2") == 0)
			{
			SetFont("ARMKA0");
			armortype2 = "Blue Armor";
			}
		if(strICmp(armortype, "ModdedBlueArmor") == 0)
			{
			SetFont("ARMKA0");
			armortype2 = "Blue Armor";
			}	
		if(strICmp(armortype, "RedArmor2") == 0)
			{
			SetFont("ARMLA0");
			armortype2 = "Red Armor";
			}
		if(strICmp(armortype, "RedArmor") == 0)
			{
			SetFont("ARMLA0");
			armortype2 = "Red Armor";
			}
		if(strICmp(armortype, "LegendaryArmor") == 0)
			{
			SetFont("ARMPQ0");
			armortype2 = "Legendary Armor";
			}
		if(strICmp(armortype, "PhaseArmor") == 0)
			{
			SetFont("ARMHA0");
			armortype2 = "Phase Armor";
			}
		if(strICmp(armortype, "EnragedLegendaryArmor") == 0)
			{
			SetFont("CDCFZZ");
			armortype2 = "Enraged Legendary Armor";
			}	
		if(strICmp(armortype, "NemesisArmor") == 0)
			{
			SetFont("CDHEAR");
			armortype2 = "Nemesis Armor";
			}
		if(strICmp(armortype, "NemesisArmorBonus") == 0)
			{
			SetFont("CDHEAB");
			armortype2 = "Nemesis Armor Bonus";
			}
		if(strICmp(armortype, "None") == 0)
			{
			SetFont("WINDOA");
			armortype2 = "No Armor";
			}	
		}
		else SetFont("Blank");
				
				if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.535),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.50);
					  } 
				else
					  {
					    SetHudSize(1456,672,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.565),1456<<16)>>16<<16), (FixedMul((y + 0.270),672<<16)>>16<<16), 0.01, 0.50);
						SetHudSize(xres,yres,0);
					  }
	  }
	  else if(CheckInventory("IsPlayingAsProjectBrutality")) // PB 3.0
	  {
	  if (!extcam && !MorphedPlayer && CatV_ArmIco)
		{
		if(strICmp(armortype, "BasicArmorPickup") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Generic Armor";
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus2") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}	
		if(strICmp(armortype, "ArmorShard") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorBonus") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "StrongArmorShard") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Strong Armor Bonus";
			}
		if(strICmp(armortype, "SuperArmorBonus") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Super Armor Bonus";
			}
		if(strICmp(armortype, "LightArmor") == 0)
			{
			SetFont("PBARM1");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "MediumArmor") == 0)
			{
			SetFont("PBARM2");
			armortype2 = "Medium Armor";
			}
		if(strICmp(armortype, "HeavyArmor") == 0)
			{
			SetFont("PBARM3");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "EliteArmor") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Elite Armor";
			}
		if(strICmp(armortype, "None") == 0)
			{
			SetFont("WINDOA");
			armortype2 = "No Armor";
			}
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "D4BARONHUD") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "REVENANT_RUNE") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}	
		}
		else SetFont("Blank");
				 if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.535),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.50);
					  } 
				 else
					  {
					    SetHudSize(1456,672,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.565),1456<<16)>>16<<16), (FixedMul((y + 0.270),672<<16)>>16<<16), 0.01, 0.50);
						SetHudSize(xres,yres,0);
					  }
	  }
	  else if(IsPlayingD4Arsenal | IsPlayingD4TCSE) // XV117's D4 Arsenal & D4T Crucible SE
	  {
	  if (!extcam && !MorphedPlayer && CatV_ArmIco)
		{
		if(strICmp(armortype, "BasicArmorPickup") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Generic Armor";
			}
		if(strICmp(armortype, "D4ArmorBonus") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "D4LightArmor") == 0)
			{
			SetFont("ARD4A0");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "D4MediumArmor") == 0)
			{
			SetFont("ARD4B0");
			armortype2 = "Medium Armor";
			}
		if(strICmp(armortype, "D4GreenArmor") == 0)
			{
			SetFont("ARD4A0");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "D4HeavyArmor") == 0)
			{
			SetFont("ARD4C0");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "D4BlueArmor") == 0)
			{
			SetFont("ARD4B0");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "D4ArmorForMega") == 0)
			{
			SetFont("ARD4C0");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "D4DArmorForMega") == 0)
			{
			SetFont("ARD4B0");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "None") == 0)
			{
			SetFont("WINDOA");
			armortype2 = "No Armor";
			}
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "D4BARONHUD") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "REVENANT_RUNE") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}	
		}
		else SetFont("Blank");
				 if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.535),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.50);
					  } 
				 else
					  {
					    SetHudSize(1456,672,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.565),1456<<16)>>16<<16), (FixedMul((y + 0.270),672<<16)>>16<<16), 0.01, 0.50);
						SetHudSize(xres,yres,0);
					  }
	  }
	  else	//All armors
	  {/////////////////////////////////////////
	   if (!extcam && !MorphedPlayer && CatV_ArmIco)
		{
		if(strICmp(armortype, "BasicArmorPickup") == 0)
			{
			SetFont("GENARM");
			armortype2 = "Generic Armor";
			}
		if(strICmp(armortype, "ArmorBoots") == 0)
			{
			SetFont("BOTSA");
			armortype2 = "Armor Boots";
			}
		if(strICmp(armortype, "ArmorHelmet") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Helmet";
			}
		if(strICmp(armortype, "ArmorUniform") == 0)
			{
			SetFont("UNIFOA");
			armortype2 = "Armor Uniform";
			}
		if(strICmp(armortype, "LightArmorNew") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "MediumArmor") == 0)
			{
			SetFont("ARMUB");
			armortype2 = "Medium Armor";
			}
		if(strICmp(armortype, "HeavyArmorNew") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "TechArmorProtection") == 0)
			{
			SetFont("ARMUD");
			armortype2 = "Tech Armor";
			}
		if(strICmp(armortype, "BD_ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "BD_GreenArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "BD_BlueArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorShardFatalityBonus2") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus1armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus5armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus10armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "CrueltyBonus15armor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}	
		if(strICmp(armortype, "ArmorShard") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorShardNoCount") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "GiveArmor") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}	
		if(strICmp(armortype, "ArmorBonus_GlowEff") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorShardDroped") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "LightArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "FDGreenArmorPickup") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "FDBlueArmorPickup") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "FDArmorBonusPickup") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "GreenArmour") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "BlueArmour") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "ArmourBonus") == 0)
			{
			SetFont("HELMMA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "BlueArmorForMegasphere") == 0)
			{
			SetFont("ARMUGS");
			armortype2 = "Megasphere Armor";
			}
		if(strICmp(armortype, "HeavyArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}

		if(strICmp(armortype, "sexyhelmet") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "sexygreenarmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "sexybluearmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "GreenArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "BlueArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "HDArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "U_ArmorBonus") == 0)
			{
			SetFont("SHARDA");
			armortype2 = "Armor Bonus";
			}
		if(strICmp(armortype, "HDGreenArmor") == 0)
			{
			SetFont("ARMUA");
			armortype2 = "Light Armor";
			}
		if(strICmp(armortype, "HDBlueArmor") == 0)
			{
			SetFont("ARMUC");
			armortype2 = "Heavy Armor";
			}
		if(strICmp(armortype, "None") == 0)
			{
			SetFont("WINDOA");
			armortype2 = "No Armor";
			}	
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "D4BARONHUD") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}
		if(strICmp(armortype, "None") == 0 && strICmp(weapon, "D4REVENANTHUD") == 0)
			{
			SetFont("DERUA00");
			armortype2 = "";
			}	
		}
		else SetFont("Blank");
		{
				 if (!CatV_HPBottom)
					  {
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.535),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.50);
					  } 
				 else
					  {
					    SetHudSize(1456,672,0);
						HudMessage(s:"A"; HUDMSG_ALPHA, 1644473, CR_untranslated, (FixedMul(((x + offset) - 0.565),1456<<16)>>16<<16), (FixedMul((y + 0.270),672<<16)>>16<<16), 0.01, 0.50);
						SetHudSize(xres,yres,0);
					  }
		
		}
		}////////////////////////////////////////////
		
	//Weapon and Ammo 
		if(strICmp(PlClass, "BEDoomer") == 0) //BD:BE v3.1d
		{
		
			// Slot 2
		  if(strICmp(weapon, "BDPistol") == 0)                 ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("PistolAmmo"), weicon="PINAXA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 16;
		  if(strICmp(weapon, "DualPistols") == 0)              ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDDualPistolAmmo"), weicon="PINADA", weaponname = "Pistols", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 32;
		  if(strICmp(weapon, "Revolver") == 0)       	       ammo = CheckInventory("RevolverBullets"), ammo2 = CheckInventory("TE_RevolverAmmo"), weicon="PINAMA", weaponname = "Revolver", ammocapa = GetAmmoCapacity("RevolverBullets"), clipsize = 6;
		  if(strICmp(weapon, "DualRevolver") == 0)       	   ammo = CheckInventory("RevolverBullets"), ammo2 = CheckInventory("DualRevolverAmmo"), weicon="PINAMA", weaponname = "Revolvers", ammocapa = GetAmmoCapacity("RevolverBullets"), clipsize = 12;
			//Slot 2 (SMG)
		 
		  if(strICmp(weapon, "BrutalSMG") == 0)                ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDSMGAmmo"), weicon="PINADA", weaponname = "SMG", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 41;
		  if(strICmp(weapon, "DualSMG") == 0)                  ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDDualSMGAmmo"), weicon="PINADA", weaponname = "Dual SMG", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 82;
		  if(StrICmp(weapon, "MP40") == 0)                     ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("MP40Ammo"), weicon="PINADA", weaponname = "MP40", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 32;
		  if(StrICmp(weapon, "DualMP40") == 0)                 ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("DualMP40Ammo"), weicon="PINAXA", weaponname = "Dual MP40", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 46;
		  if(strICmp(weapon, "ClassicSMG") == 0)               ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "SMG", ammocapa = GetAmmoCapacity("Clip2"), clipsize =ammocapa;
			//Slot 4
		  if(StrICmp(weapon, "Rifle") == 0)                    ammo = CheckInventory("RifleClip"), ammo2 = CheckInventory("RifleAmmo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("RifleClip"), clipsize = 31;
		  if(StrICmp(weapon, "MiniGun") == 0)                  ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINANA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
		  if(StrICmp(weapon, "DualRifles") == 0)               ammo = CheckInventory("Clip2"), ammo2 = checkinventory("dOUBLERifleAmmo"), weicon="PINADA", weaponname = "Rifles", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 62;
		  if(StrICmp(weapon, "Machinegun") == 0)               ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "Machinegun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
		  if(strICmp(weapon, "Chaingun") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		    // Slot 3
		
		  if(StrICmp(weapon, "Shot_Gun") == 0)                 ammo = CheckInventory("Shell2"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell2"), clipsize = 12;  
		  if(StrICmp(weapon, "Quad_Shotgun") == 0)             ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("QuadShotgunAmmo"), weicon="PINAEA", weaponname = "Quad Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 4;
		  if(StrICmp(weapon, "SSG") == 0)                      ammo = CheckInventory("SSGShell"), ammo2 = CheckInventory("SSGAmmo"), weicon="BESGM", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("SSGShell"), clipsize = 2;
		  if(StrICmp(weapon, "AutoShotgun") == 0)       	   ammo = CheckInventory("GreenShell"), ammo2 = CheckInventory("M1014Ammo"), weicon="PINALA", weaponname = "Auto Shotgun", ammocapa = GetAmmoCapacity("GreenShell"), clipsize = 8;
		  if(StrICmp(weapon, "U_AssaultShotgun") == 0)         ammo = CheckInventory("GreenShell"), ammo2 = CheckInventory("AssaultShotgunAmmo"), weicon="PINALA", weaponname = "Assault Shotgun", ammocapa = GetAmmoCapacity("GreenShell"), clipsize = 20;
		  if(StrICmp(weapon, "AssaultShotgun") == 0)           ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("AssaultShotgunAmmo"), weicon="PINAEA", weaponname = "Assault Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 20;  
		  if(strICmp(weapon, "Quad-Shotgun") == 0)             ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Quad Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "BD_SuperShotgun") == 0)          ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		    // Slot 5
		  
		  if(StrIcmp(weapon, "Rocket_Launcher") == 0)          ammo = CheckInventory("RocketAmmo2"), ammo2 = CheckInventory("RocketRounds"), weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo2"), clipsize = 6;
		  if(StrIcmp(weapon, "GrenadeLauncher") == 0)          ammo = CheckInventory("AmmoRocket"), ammo2 = -1, weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "ClassicRocketLauncher") == 0)    ammo = CheckInventory("AmmoRocket"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = ammocapa;
		  if(StrICmp(weapon, "SniperRifle") == 0)       	   ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("SniperAmmo"), weicon="PINADA", weaponname = "Sniper Rifle", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 5;
		 
			//Slot 6 & 7
		  if(StrIcmp(weapon, "Plasma_Gun") == 0)               ammo = CheckInventory("Cell2"), ammo2 = CheckInventory("PlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell2"), clipsize = 50;
		  if(StrIcmp(weapon, "BIG_FUCKING_GUN") == 0)          ammo = CheckInventory("BFGPlasma"), ammo2 = -1, weicon="BEBFGM", weaponname = "BFG", ammocapa = GetAmmoCapacity("BFGPlasma"), clipsize = ammocapa;
		  if(StrICmp(weapon, "DUalPlasmaRifles") == 0)         ammo = CheckInventory("AmmoCell"), ammo2 = checkinventory("DoublePlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifles", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = 100;
		  if(StrIcmp(weapon, "BFG10k") == 0)                   ammo = CheckInventory("BFGPlasma"), ammo2 = -1, weicon="BEBFGM", weaponname = "BFG 10k", ammocapa = GetAmmoCapacity("BFGPlasma"), clipsize = ammocapa;
		  if(strICmp(weapon, "BFG9000") == 0)          		   ammo = CheckInventory("BFGPlasma"), ammo2 = -1, weicon="BEBFGM", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("BFGPlasma"), clipsize = ammocapa;
		    //Slot 8
		  if(StrIcmp(weapon, "FlameCannon") == 0)              ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weicon="PINGASA", weaponname = "Flame Cannon", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "Flamethrower2") == 0)            ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weicon="PINGASA", weaponname = "Flame  Thrower", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HellishMissileLauncher") == 0)   ammo = CheckInventory("MiniHellRocketAmmo"),ammo2 = -1, weicon="PINHLSA", weaponname = "Hellish Missile Launcher", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
		    //Slot 9
		  if(strICmp(weapon, "RiotShield") == 0)           	   ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDPistolAmmo"), weicon="PINADA", weaponname = "Pistol + Shield", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 16;
		  if(StrIcmp(weapon, "U_HandGrenades") == 0)           ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "PIGANA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HandGrenades") == 0)             ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "GCDAXA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "C4Weapon") == 0)         		   ammo = CheckInventory("C4Ammo"), ammo2 = -1, weicon = "PIC4NA", weaponname = "C4 Charges", ammocapa = GetAmmoCapacity("C4Ammo"), clipsize = ammocapa;
		    //Slot 1
		  if(strICmp(weapon, "Chain_saw") ==0)                 ammo = CheckInventory("ChainSawGas"), ammo2 = -1, weicon="PINGASA", ammocapa = GetAmmoCapacity("ChainSawGas"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "Melee_Attacks") == 0)            ammo = -1, ammo2 = -1, weicon = "NONEA";
		  if(strICmp(weapon, "SoulCube") ==0)                  ammo = CheckInventory("SoulAmmo"), ammo2 = -1, weicon="PINAKA", ammocapa = GetAmmoCapacity("SoulAmmo"),clipsize = ammocapa;

				
		  if(StrICmp(weapon, "ImpShield") == 0)                ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "ZMANShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "SguyShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "CguyShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "NaziShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "EvilMarineShield") == 0)         ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "ZombieCivilianShield") == 0)     ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;

		  if(StrICmp(weapon, "U_HitlersBuzzsaw") == 0)         ammo = CheckInventory("BuzzsawAmmoz"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", clipsize = ammocapa;
		  if(StrICmp(weapon, "HitlersBuzzsaw") == 0)           ammo = CheckInventory("BuzzsawAmmo"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", clipsize = ammocapa;
		  
		  if(StrIcmp(weapon, "U_Unmaker") == 0)                ammo = CheckInventory("U_SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("U_SoulAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "Unmaker") == 0)                  ammo = CheckInventory("SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("SoulAmmo"),clipsize = ammocapa;
		  
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		else if(IsPlayingD4TCSE) // D4T Crucible SE
		{
			if(strICmp(weapon, "NewBaronHUD") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "D4WeaponUpgrader") ==0)        ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "NewRevenantHUD") ==0)        ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";			
			if(strICmp(weapon, "D4Chainsaw") ==0)              ammo = CheckInventory("D4Fuel"), ammo2 = -1, ammocapa = GetAmmoCapacity("D4Fuel"), weicon = "D4GAA0", weaponname = "Chainsaw";
			if(strICmp(weapon, "D4DFist") ==0)         		  ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "D4Axe") == 0)       	       ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Axe";
			// Slot 2
			if(strICmp(weapon, "D4Pistol") == 0)       	       
			{
				ammo = CheckInventory("PistolAltFireCounter"), ammo2 = -1, weicon = "INFIAA", weaponname = "EMG Sidearm", ammocapa = 52, clipsize = ammocapa;
				if(UpPistolFastCharge) upgrade = "fast charge";
				if(UpPistolProtoGenerator) upgrade2 = "proto generator";	
			}
			if(StrICmp(weapon, "D4Repeater") == 0)             
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Burst Rifle", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				if(UpRepeaterDamage) upgrade2 = "damage +";
				if(UpRepeaterScope) upgrade = "precision scope";	
			}
			// Slot 3
            		if(StrICmp(weapon, "D4Shotgun") == 0)              
			{
				ammo = CheckInventory("D4Shells"), ammo2 = -1, weicon="D4SHA0", weaponname = "Combat Shotgun", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = ammocapa;
				if(ModHasTriShot) upgrade = "burst shot", modcooldown = SGTriShotTimer, maxcooldown = 52;
				if(ModHasExplosiveShot) upgrade = "explosive module", modcooldown = SGGrenadeTimer, maxcooldown = 52;				
			}
			if(StrICmp(weapon, "D4SuperShotgun") == 0)	ammo = CheckInventory("D4Shells"), ammo2 = -1, weicon="D4SHA0", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = ammocapa;
			if(StrICmp(weapon, "D4Chaingun") == 0)             
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				if(ModHasMobileTurret) upgrade = "mobile turret";
				if(ModHasGatlingRotator) upgrade = "gatling rotator";	
			}
			if(StrICmp(weapon, "D4HAR") == 0)
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "H.A.R", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				if(ModHasMicroMissile) upgrade = "micro missiles";
				if(ModHasTacticalScope) upgrade = "tactical scope";
			}
			if(StrIcmp(weapon, "D4RocketLauncher") == 0)       
			{
				ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="D4MIA0", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
				if(ModHasLockOn) upgrade = "lock-on mode";
				if(ModHasDetonator) upgrade = "detonator mode";	
			}
			if(StrIcmp(weapon, "D4GrenadeLauncher") == 0)      
			{
				ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="D4MIA0", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
				if(UpGrenadeLaucherAltFire) upgrade = "poison grenade", modcooldown = GLGasTimer, maxcooldown = 52;
				if(UpGrenadeLaucherDamage) upgrade2 = "damage +";	
			}
			if(strICmp(weapon, "D4PlasmaRifle") == 0)          
			{
				ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="D4CLA0", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
				if(ModHasStunBomb) upgrade = "stun bomb", modcooldown = StunBombTimer, maxcooldown = 52;
				if(ModHasHeatWave) upgrade = "heat wave";	
			}
			if(StrIcmp(weapon, "D4GaussCannon") == 0)          
			{
				ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="D4ROA0", weaponname = "Gauss Cannon", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa;
				if(ModHasPrecisionScope) upgrade = "precision bolt";
				if(ModHasSiegeMode) upgrade = "siege mode";	
			}
			if(StrIcmp(weapon, "D4BFG") == 0)                  ammo = CheckInventory("D4BFGAmmo"), ammo2 = -1, weicon="D4BFA0", weaponname = "BFG", ammocapa = GetAmmoCapacity("D4BFGAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4VortexRifle") == 0)          
			{
				ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="D4ROA0", weaponname = "Vortex Rifle", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa, modcooldown = VortexFireTimer, maxcooldown = 52;
				if(UpVortexRifleDamage) upgrade2 = "damage +";
				if(UpVortexRifleScope) upgrade = "infrared scope";	
			}
			if(StrIcmp(weapon, "D4LightningGun") == 0)        
			{
				ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="D4CLA0", weaponname = "Lightning Rifle", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
				if(UpLightningGunAltFire) upgrade = "voltaic arc";
				if(UpLightningGunDamage) upgrade2 = "damage +";	
			}
			if(StrIcmp(weapon, "D4HellShot") == 0)             
			{
				ammo = CheckInventory("D4Argent"), ammo2 = -1, weicon="HLLMMA", weaponname = "Hell Shot", ammocapa = GetAmmoCapacity("D4Argent"), clipsize = ammocapa;
				if(UpHellshotAltFire) upgrade = "argent flare", modcooldown = HSFlareTimer, maxcooldown = 52;
			}
			if(StrICmp(weapon, "MG42") == 0)           		   ammo = CheckInventory("MG42Ammo"), ammo2 = -1, weicon="PINAIA", weaponname = "MG 42", ammocapa = GetAmmoCapacity("MG42Ammo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4StaticRifle") == 0) 
			{
				ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="D4ROA0", weaponname = "Static Rifle", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa;
			}
			if(StrIcmp(weapon, "D4Reaper") == 0)          
			{
				ammo = CheckInventory("D4Argent"), ammo2 = -1, weicon="HLLMMA", weaponname = "Reaper", ammocapa = GetAmmoCapacity("D4Argent"), clipsize = ammocapa;
			}
			if(StrIcmp(weapon, "D4MP40") == 0)	ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("D2KMP40Ammo"), weaponname = "MP 40", weicon="PINAIA", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 32;
			
			if(strICmp(weapon, "D4MeatShield") == 0)
			{
				ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "EMG Sidearm";
				if(UpPistolFastCharge) upgrade = "fast charge";
				if(UpPistolProtoGenerator) upgrade2 = "proto generator";	
			}

			// Dual Weapons
			if(strICmp(weapon, "D4Pistol") == 0 && CheckInventory("PistolDualWield"))
			{
				ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "Dual EMG Sidearms";
			}
			if(StrICmp(weapon, "D4Repeater") == 0 && CheckInventory("RepeaterDualWield"))
			{	
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Dual Burst Rifles", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
			}
			if(StrICmp(weapon, "D4HAR") == 0 && CheckInventory("HARDualWield"))
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Dual H.A.Rs", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				upgrade = "";
			}
			if(StrIcmp(weapon, "D4RocketLauncher") == 0 && CheckInventory("RocketLauncherDualWield"))       
			{
				ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="D4MIA0", weaponname = "Dual Rocket Launchers", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
				upgrade = "";
			}
			if(StrICmp(weapon, "D4SSG") == 0 && CheckInventory("SSGDualWield"))	ammo = CheckInventory("D4Shells"), ammo2 = CheckInventory("DualSSGAmmo"), weicon="D4SHA0", weaponname = "Dual Super Shotguns", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = 4;
		  	if(StrIcmp(weapon, "D4DualMP40") == 0)	ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("D2KDualMP40Ammo"), weaponname = "Dual MP40s", weicon="PINAIA", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 64;


		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		  
		}
		else if(CheckInventory("D4DFist")) //D4T
	    {
	  //D4TWeapons
			if(strICmp(weapon, "D2K16BaronHUD") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "D2K16RevenantHUD") ==0)        ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";			
			if(strICmp(weapon, "D4Chainsaw") ==0)              ammo = CheckInventory("D4Fuel"), ammo2 = -1, weicon = "PINGASA", weaponname = "Chainsaw", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = ammocapa;
			if(strICmp(weapon, "D4DFist") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "D4Pistol") == 0)       	       ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "Charge Pistol";
			if(strICmp(weapon, "D4PistolDM") == 0)       	   ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "Charge Pistol";
            if(StrICmp(weapon, "D4Shotgun") == 0)              ammo = CheckInventory("D4Shells"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = ammocapa;
		    if(StrICmp(weapon, "D4SuperShotgun") == 0)         ammo = CheckInventory("D4Shells"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = ammocapa;
			if(StrICmp(weapon, "D4Reaper") == 0)        	   ammo = CheckInventory("D4Shells"), ammo2 = -1, weicon="PINAEA", weaponname = "Reaper", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = ammocapa;
			if(StrICmp(weapon, "D4Chaingun") == 0)             ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
			if(StrICmp(weapon, "D4HAR") == 0)      		       ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="PINADA", weaponname = "Machinegun", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4RocketLauncher") == 0)       ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4GrenadeLauncher") == 0)      ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
			if(StrICmp(weapon, "D4Repeater") == 0)             ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="PINADA", weaponname = "Repeater", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
			if(strICmp(weapon, "D4PlasmaRifle") == 0)          ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Gun", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4GaussCannon") == 0)          ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="PINAFA", weaponname = "Gauss Cannon", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4BFG") == 0)                  ammo = CheckInventory("D4BFGAmmo"), ammo2 = -1, weicon="BFAMMA", weaponname = "BFG", ammocapa = GetAmmoCapacity("D4BFGAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4VortexRifle") == 0)          ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="PINAFA", weaponname = "Vortex Rifle", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4HellShot") == 0)             ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="PINADA", weaponname = "Hell Gun", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4LightningGun") == 0)         ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="PINADA", weaponname = "Lightning Gun", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4StaticRifle") == 0)          ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="PINAFA", weaponname = "Vortex Rifle", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa;
			
			if(StrICmp(weapon, "DualMachineguns") == 0)        ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "Machineguns", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
			if(StrICmp(weapon, "DualD4PeaShooter") == 0)       ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Pistols";
			if(StrICmp(weapon, "DualD4Pistol") == 0)     	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Charge Pistols";
			if(StrICmp(weapon, "DualD4Plasmaguns") == 0)       ammo = CheckInventory("AmmoCell"), ammo2 = -1, weicon="PINADA", weaponname = "Plasma Guns", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = ammocapa;
			if(StrICmp(weapon, "DualRepeaters") == 0)          ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "Repeaters", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
			if(StrIcmp(weapon, "DualD4RocketLaunchers") == 0)  ammo = CheckInventory("AmmoRocket"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launchers", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = ammocapa;
			if(StrICmp(weapon, "D4DualSSG") == 0)              ammo = CheckInventory("AmmoShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotguns", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = ammocapa;
			if(StrICmp(weapon, "MG42") == 0)           		   ammo = CheckInventory("MG42Ammo"), ammo2 = -1, weicon="PINAIA", weaponname = "MG 42", clipsize = ammocapa;
			if(StrIcmp(weapon, "RevenantMissileBattery") == 0) ammo = CheckInventory("MiniHellRocketAmmo"), ammo2 = -1, weicon="PINHLSA", weaponname = "Revenant Missile Battery", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4MancubusArm") == 0)          ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Mancubus Arm", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4MP40") == 0)                 ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("D2KMP40Ammo"), weaponname = "MP 40", weicon="PINAIA", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 32;
			
		
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
	  }
		else if(CheckInventory("64Fist")) //BD64
		{
		//BrutalDoom 64 weapons
		  if(StrIcmp(weapon, "64Chainsaw") == 0)               ammo = CheckInventory("SawGas"), ammo2 = -1, weicon="PINGASA", weaponname = "", weicon="PINGASA", ammocapa = GetAmmoCapacity("SawGas"), clipsize = ammocapa;
		  if(strICmp(weapon, "64Fist") ==0)                    ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "64Pistol") == 0)          	   ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "64Shotgun") == 0)          	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "64SuperShotgun") == 0)           ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "64Rifle") == 0)            	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "64RocketLauncher") == 0)         ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;
		  if(strICmp(weapon, "64Chaingun") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "64PlasmaRifle") == 0)            ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "64BFG9000") == 0)          	   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "Lasergun") == 0)           	   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Laser Gun", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(StrICmp(weapon, "64RifleTactical") == 0)          ammo = CheckInventory("Clip"), ammo2 = CheckInventory("rifleammo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("Clip"), clipsize = 31;
		  if(StrICmp(weapon, "64ShotgunTACTICAL") == 0)        ammo = CheckInventory("Shell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize = 8;  
		  if(strICmp(weapon, "64ChaingunTACTICAL") == 0)       ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "64RocketLauncherTactical") == 0) ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;	
		  if(StrIcmp(weapon, "64PlasmaRifleTACTICAL") == 0)    ammo = CheckInventory("Cell"), ammo2 = CheckInventory("PlasmaRifleAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = 30;
		 if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}	
		else if(CheckInventory("Melee") | CheckInventory("NewMelee")) //complexdoom + lca
		{
		//	---------------------------------
		// Complex Doom Clusterfuck weapons
		// ----------------------------------
		//CD Weapons :
			if(strICmp(weapon, "Melee") ==0)                 		       ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "Melee ") ==0)                 		       ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "NewMelee") ==0)                 		   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "Chainsaw ") ==0)                 	 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "Chainsaw") ==0)                 	 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			
			if(strICmp(weapon, "Handgun") == 0)       	      	  		   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("PistolMagazine"), weicon="PINAXA", weaponname = "Hand Gun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 16;
			if(strICmp(weapon, "Handgun ") == 0)       	      	  		   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("PistolMagazine"), weicon="PINAXA", weaponname = "Hand Gun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 16;
			if(strICmp(weapon, "Hand Gun") == 0)       	      	  		   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("PistolMagazine"), weicon="PINAXA", weaponname = "Hand Gun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 16;
			if(StrICmp(weapon, "Combat Shotgun") == 0)       	 	       ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunMagazine"), weicon="PINAEA", weaponname = "Combat Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 8;
			if(StrICmp(weapon, "Combat Shotgun ") == 0)       	 	       ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunMagazine"), weicon="PINAEA", weaponname = "Combat Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 8;
			if(strICmp(weapon, "Assault Shotgun") == 0)       	  		   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunDrum"), weicon="PINAEA", weaponname = "Assault Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 12;
			if(strICmp(weapon, "Double Barrel Shotgun") == 0)       	   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("SSGShell"), weicon="PINAEA", weaponname = "Double Barrel Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 2;
			if(strICmp(weapon, "Double Barrel Shotgun ") == 0)       	   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("SSGShell"), weicon="PINAEA", weaponname = "Double Barrel Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 2;
			if(strICmp(weapon, "Quad Barrel Shotgun") == 0)       		   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("QuadShell"), weicon="PINAEA", weaponname = "Quad Barrel Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 4;
			if(strICmp(weapon, "Quad Barrel Shotgun ") == 0)       		   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("QuadShell"), weicon="PINAEA", weaponname = "Quad Barrel Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 4;
			
			if(strICmp(weapon, "Assault Rifle ") == 0)       	      	   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("ARMagazine"), weicon="PINADA", weaponname = "Assault Rifle", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 41;
			if(strICmp(weapon, "Assault Rifle") == 0)       	      	   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("ARMagazine"), weicon="PINADA", weaponname = "Assault Rifle", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 41;
			if(strICmp(weapon, "Minigun ") == 0)       	      	    	   ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			if(strICmp(weapon, "Minigun2") == 0)       	      	    	   ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			
			if(strICmp(weapon, "Rocket Launcher") == 0)       	      	   ammo = CheckInventory("Missile"), ammo2 = CheckInventory("RocketDrum"), weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("Missile"), clipsize = 5;
			if(strICmp(weapon, "Grenade Launcher") == 0)       	      	   ammo = CheckInventory("Missile"), ammo2 = CheckInventory("GrenadeDrum"), weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("Missile"), clipsize = 5;
			
			if(StrIcmp(weapon, "Plasma Rifle") == 0)          		       ammo = CheckInventory("NewCell"), ammo2 = CheckInventory("PlasmaCell"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("NewCell"), clipsize = 50;
			if(StrIcmp(weapon, "Railgun ") == 0)               			   ammo = CheckInventory("NewCell"), ammo2 = CheckInventory("CellCharge"), weicon="PINAFA", weaponname = "Railgun", ammocapa = GetAmmoCapacity("NewCell"), clipsize = 50;
			if(StrIcmp(weapon, "Railgun2") == 0)               			   ammo = CheckInventory("NewCell"), ammo2 = CheckInventory("CellCharge"), weicon="PINAFA", weaponname = "Railgun", ammocapa = GetAmmoCapacity("NewCell"), clipsize = 50;
			
			if(StrIcmp(weapon, "BFG9500") == 0)                 		   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9500", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "BFG10K ") == 0)                 		   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 10K", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Hand Grenade") == 0)          			   ammo = CheckInventory("HandGrenadeAmmo"), ammo2 = -1, weicon = "GCDAXA", weaponname = "Hand Grenade", ammocapa = GetAmmoCapacity("HandGrenadeAmmo"), clipsize = ammocapa;
		    if(StrIcmp(weapon, "Land Mine") == 0)         		  		   ammo = CheckInventory("MineAmmo"), ammo2 = -1, weicon = "MCDAXA", weaponname = "Land Mine", ammocapa = GetAmmoCapacity("MineAmmo"), clipsize = ammocapa;
		//CD ExWeapons :

			/*
			"Hand Grenade"
			"Land Mine"
			*/
			if(strICmp(weapon, "Explosive Minigun") == 0)       	       ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Explosive Minigun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			if(strICmp(weapon, "Demon Tech Rifle") == 0)       	      	   ammo = CheckInventory("DemonAmmo"), ammo2 = CheckInventory("DemonMagazine"), weicon="CDCFDB", weaponname = "Demon Tech Rifle", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = 60;
			if(StrIcmp(weapon, "Demon Tech BFG10K") == 0)                  ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Demon Tech BFG10K", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "MP40") == 0)       	      	  			   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("MP40Mag"), weicon="PINADA", weaponname = "MP 40", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 40;
			if(strICmp(weapon, "MP-40") == 0)       	      	  		   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("MP40Mag"), weicon="PINADA", weaponname = "MP 40", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 40;
		//LCA v1.5.9.6 Weapons
			if(StrIcmp(weapon, "Advanced Necronomicon") == 0)              ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Advanced Necronomicon", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Assault Shotgun ") == 0)       	  		   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunDrum2"), weicon="PINAEA", weaponname = "Assault Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 12;
			if(StrIcmp(weapon, "BehemothCannon") == 0)                     ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "BehemothCannon", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Plasma Handgun") == 0)          		   ammo = CheckInventory("PlasmaHGCell"), ammo2 = CheckInventory("PlasmaHGCell"), weicon="CDCFCC", weaponname = "Plasma Handgun", ammocapa = GetAmmoCapacity("PlasmaHGCell"), clipsize = 100;
			if(StrIcmp(weapon, "Demon Tech Devastator") == 0)              ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Demon Tech Devastator", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Demon Tech Railgun") == 0)       	       ammo = CheckInventory("DemonAmmo"), ammo2 = CheckInventory("DemonAmmoCharge"), weicon="CDCFDB", weaponname = "Demon Tech Railgun", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = 60;
			if(strICmp(weapon, "Demon Tech Rifle ") == 0)       	       ammo = CheckInventory("DemonAmmo"), ammo2 = CheckInventory("DemonMagazine"), weicon="CDCFDB", weaponname = "Demon Tech Rifle", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = 50;
			if(strICmp(weapon, "Explosive Minigun ") == 0)       	       ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Explosive Minigun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Freezer Rifle") == 0)                 	   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Freezer Rifle", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(strICmp(weapon, "Hexa-Shotgun") == 0)       	   			   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("HexaShell"), weicon="PINAEA", weaponname = "Hexa-Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 6;
			if(strICmp(weapon, "Legendary AK-47") == 0)       	      	   ammo = CheckInventory("LegendaryBulletMag"), ammo2 = CheckInventory("LAK47Magazine"), weicon="CDCFL1", weaponname = "Legendary AK-47", ammocapa = GetAmmoCapacity("LegendaryBulletMag"), clipsize = 31;
			if(strICmp(weapon, "Legendary Assault Shotgun") == 0)          ammo = CheckInventory("LegendaryShell"), ammo2 = CheckInventory("LegendaryShotgunDrum"), weicon="CDCFLS", weaponname = "Legendary Assault Shotgun", ammocapa = GetAmmoCapacity("LegendaryShell"), clipsize = 12;
			if(StrIcmp(weapon, "Legendary BFG") == 0)                      ammo = CheckInventory("LDemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Legendary BFG", ammocapa = GetAmmoCapacity("LDemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Legendary BFG 10K") == 0)                  ammo = CheckInventory("LDemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Legendary BFG 10K", ammocapa = GetAmmoCapacity("LDemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Legendary Light Machine Gun") == 0)        ammo = CheckInventory("LegendaryLMGBulletMag"), ammo2 = CheckInventory("LLMGMagazine"), weicon="CDCFL1", weaponname = "Legendary LMG", ammocapa = GetAmmoCapacity("LegendaryLMGBulletMag"), clipsize = 76;	
			if(StrIcmp(weapon, "Legendary Plasmatic Cannon") == 0)         ammo = CheckInventory("LDemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Legendary Plasma Cannon", ammocapa = GetAmmoCapacity("LDemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Legendary Plasmatic Rifle") == 0)          ammo = CheckInventory("LDemonAmmo"), ammo2 = CheckInventory("LDemonMagazine"), weicon="CDCFLC", weaponname = "Legendary Plasma Rifle", ammocapa = GetAmmoCapacity("LDemonAmmo"), clipsize = 50;


		// LCA djb weapons	:
			if(strICmp(weapon, "Legendary Railgun") == 0)                  ammo = CheckInventory("LDemonAmmo"), ammo2 = CheckInventory("LEGRailgunAmmo"), weicon="CDCFLC", weaponname = "Legendary Railgun", ammocapa = GetAmmoCapacity("LDemonAmmo"), clipsize = 60;
			if(strICmp(weapon, "Legendary Revolver") == 0)                 ammo = CheckInventory("LegendaryBulletMag"), ammo2 = CheckInventory("LEGENDARYRevolverSpinner"), weicon="CDCFL2", weaponname = "Legendary Revolver", ammocapa = GetAmmoCapacity("LegendaryBulletMag"), clipsize = 6;
			if(strICmp(weapon, "Legendary Sawed-Off Shotgun") == 0)        ammo = CheckInventory("LegendaryShell"), ammo2 = CheckInventory("LegendaryPellets"), weicon="CDCFLS", weaponname = "Legendary Shotgun", ammocapa = GetAmmoCapacity("LegendaryShell"), clipsize = 2;
			if(strICmp(weapon, "Nailgun") == 0)       	   			       ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Nailgun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			if(StrIcmp(weapon, "FreezerBFG") == 0)                 		   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Freezer BFG", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;

			
		//LCA ark weapons
			if(StrIcmp(weapon, "D-BFG") == 0)                 		       ammo = CheckInventory("DCell"), ammo2 = -1, weicon="CDCFCC", weaponname = "D-BFG", ammocapa = GetAmmoCapacity("DCell"), clipsize = ammocapa;
			//"Plasma Handgun" "PlasmaMagazine" "NewCell"
			if(StrIcmp(weapon, "LegendaryChainsaw") == 0)                  ammo = CheckInventory("LegendaryCell"), ammo2 = -1, weicon="CDCFLC", weaponname = "Legendary Chainsaw", ammocapa = GetAmmoCapacity("LegendaryCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Demon Tech Ballista") == 0)                ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Demon Tech Ballista", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "BFG15K") == 0)                 		       ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 15K", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(strICmp(weapon, "M79 Gas Grenade Launcher") == 0)       	   ammo = CheckInventory("Missile"), ammo2 = CheckInventory("M79G"), weicon="PINAGA", weaponname = "M79 Gas Grenade Launcher", ammocapa = GetAmmoCapacity("Missile"), clipsize = 1;
				
		//Insanelca

			if(strICmp(weapon, "Enraged Legendary Plasmatic Rifle") == 0)       	      	   ammo = CheckInventory("ILDemonAmmo"), ammo2 = CheckInventory("ILDemonMagazine"), weicon="CDCFDB", weaponname = "Enraged Legendary Plasma Rifle", ammocapa = GetAmmoCapacity("ILDemonAmmo"), clipsize = 100;
			if(strICmp(weapon, "Enraged Legendary Assault Shotgun") == 0)       	      	   ammo = CheckInventory("EnragedLegendaryShell"), ammo2 = CheckInventory("EnragedLegendaryShotgunDrum"), weicon="PINAKA", weaponname = "Enraged Legendary A-Shotgun", ammocapa = GetAmmoCapacity("EnragedLegendaryShell"), clipsize = 12;
			if(strICmp(weapon, "Enraged Legendary Plasmatic Cannon") == 0)       	      	   ammo = CheckInventory("ILDemonAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "Enraged Legendary Plasma Cannon", ammocapa = GetAmmoCapacity("ILDemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Enraged Legendary Light Machine Gun") == 0)       	      	   ammo = CheckInventory("ELegendaryLMGBulletMag"), ammo2 = CheckInventory("ELLMGMagazine"), weicon="PINAKA", weaponname = "Enraged Legendary LMG", ammocapa = GetAmmoCapacity("ELegendaryLMGBulletMag"), clipsize = 92;
			if(strICmp(weapon, "EnragedLegendaryChainsaw") ==0)                 		       ammo = CheckInventory("ILDemonAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "Enraged Legendary Chainsaw", ammocapa = GetAmmoCapacity("ILDemonAmmo"), clipsize = ammocapa;
			
		//Randommons
			if(StrIcmp(weapon, "BarbatosCannon") == 0)             		   ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Barbatos Cannon", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "PyroCannon") == 0)           			   ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "PyroCannon", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Demon Tech Shotgun") == 0)                 ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Demon Tech Shotgun", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Blackhole Generator") == 0)                ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Blackhole Generator", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
				
		//Complex Dust Weapons		
				
				if(StrIcmp(weapon, "HellStaff") == 0)           		   ammo = CheckInventory("DustMana"), ammo2 = -1, weicon="CDCFM1", weaponname = "Hell Staff", ammocapa = GetAmmoCapacity("DustMana"), clipsize = ammocapa;
				if(StrIcmp(weapon, "OccultSpellbook") == 0)           	   ammo = CheckInventory("DustMana"), ammo2 = -1, weicon="CDCFM1", weaponname = "Occult Spellbook", ammocapa = GetAmmoCapacity("DustMana"), clipsize = ammocapa;
				if(StrIcmp(weapon, "PlasmaRepeater") == 0)                 ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Repeater", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
				if(strICmp(weapon, "Explosive Shotgun") == 0)       	   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ExplosiveShotgunMagazine"), weicon="PINAEA", weaponname = "Explosive Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 9;
				if(StrIcmp(weapon, "FantasyStaff") == 0)           		   ammo = CheckInventory("DustMana"), ammo2 = -1, weicon="CDCFM1", weaponname = "FantasyStaff", ammocapa = GetAmmoCapacity("DustMana"), clipsize = ammocapa;
				if(StrIcmp(weapon, "DesiccationRod") == 0)           	   ammo = CheckInventory("DustMana"), ammo2 = -1, weicon="CDCFM1", weaponname = "Desiccation Rod", ammocapa = GetAmmoCapacity("DustMana"), clipsize = ammocapa;
				if(StrIcmp(weapon, "ExplosiveRailgun") == 0)          	   ammo = CheckInventory("NewCell"), ammo2 = CheckInventory("EXPCellCharge"), weicon="PINAFA", weaponname = "Explosive Railgun", ammocapa = GetAmmoCapacity("NewCell"), clipsize = 60;
				if(StrIcmp(weapon, "TeslaRifle") == 0)          		   ammo = CheckInventory("NewCell"), ammo2 = CheckInventory("TeslaPlasmaCell"), weicon="PINAFA", weaponname = "Tesla Rifle", ammocapa = GetAmmoCapacity("NewCell"), clipsize = 20;

		//HEM custom weapons

			if(strICmp(weapon, "LegendaryNuclearMissilelauncher") == 0)    ammo = CheckInventory("NuclearMissile"), ammo2 = CheckInventory("NuclearMissile"), weicon="PBEXAM", weaponname = "Legendary Nuclear Launcher", ammocapa = GetAmmoCapacity("NuclearMissile"), clipsize = 2;
			if(StrIcmp(weapon, "Nemesis") == 0)             		 	   ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Nemesis", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Improved Minigun") == 0)       	      	   ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Improved Minigun", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Welder") == 0)           			       ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Welder", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
			if(strICmp(weapon, "ExplosiveRifle") == 0)       	      	   ammo = CheckInventory("BulletMag"), ammo2 = -1, weicon="PINADA", weaponname = "Explosive Rifle", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Lifeleecher") == 0)             		   ammo = CheckInventory("HadesCrystal"), ammo2 = -1, weicon="CDCFDB", weaponname = "Life Leecher", ammocapa = GetAmmoCapacity("HadesCrystal"), clipsize = ammocapa;
			if(StrIcmp(weapon, "AcidWorm") == 0)             		 	   ammo = CheckInventory("AcidAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Acid Worm", ammocapa = GetAmmoCapacity("AcidAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "VileStaff") == 0)             		 	   ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFDB", weaponname = "Vile Staff", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "Enforcer") == 0)       	      			   ammo = CheckInventory("BulletMag"), ammo2 = CheckInventory("EnforcerClip"), weicon="PINADA", weaponname = "Enforcer", ammocapa = GetAmmoCapacity("BulletMag"), clipsize = 31;
			if(StrIcmp(weapon, "HeavyChaingun") == 0)              		   ammo = CheckInventory("NewShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Heavy Chaingun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "BigFearGun") == 0)               		   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Big Fear Gun", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "ProxLauncher") == 0)              		   ammo = CheckInventory("ProxMines"), ammo2 = -1, weicon="PINAGA", weaponname = "Mine Launcher", ammocapa = GetAmmoCapacity("ProxMines"), clipsize = ammocapa;
			if(StrIcmp(weapon, "BFG2704") == 0)             		       ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 2704", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(strICmp(weapon, "NuclearMissileLauncher") == 0)    		   ammo = CheckInventory("NuclearMissile"), ammo2 = CheckInventory("NuclearMissileCharge"), weicon="PBEXAM", weaponname = "Nuclear Launcher", ammocapa = GetAmmoCapacity("NuclearMissile"), clipsize = 2;
			if(StrIcmp(weapon, "EFG9000") == 0)           	  			   ammo = CheckInventory("Missile"), ammo2 = -1, weicon="PINAGA", weaponname = "EFG9 000", ammocapa = GetAmmoCapacity("Missile"), clipsize = ammocapa;
			if(StrIcmp(weapon, "BFG 20K") == 0)               			   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 20K", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Hellstorm Cannon") == 0)           	  	   ammo = CheckInventory("Missile"), ammo2 = -1, weicon="PINAGA", weaponname = "Hellstorm Cannon", ammocapa = GetAmmoCapacity("Missile"), clipsize = ammocapa;
			if(StrIcmp(weapon, "HellstormCannon") == 0)           	  	   ammo = CheckInventory("Missile"), ammo2 = -1, weicon="PINAGA", weaponname = "Hellstorm Cannon", ammocapa = GetAmmoCapacity("Missile"), clipsize = ammocapa;
			if(StrIcmp(weapon, "HomingRocketLauncher") == 0)             ammo = CheckInventory("Missile"), ammo2 = -1, weicon="PINAGA", weaponname = "HomingRocketLauncher", ammocapa = GetAmmoCapacity("Missile"), clipsize = ammocapa;
			if(StrIcmp(weapon, "RapidRocketlauncher") == 0)           	   ammo = CheckInventory("Missile"), ammo2 = -1, weicon="PINAGA", weaponname = "Rapid Rocket launcher", ammocapa = GetAmmoCapacity("Missile"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Rapid Rocketlauncher") == 0)           	   ammo = CheckInventory("Missile"), ammo2 = -1, weicon="PINAGA", weaponname = "Rapid Rocket launcher", ammocapa = GetAmmoCapacity("Missile"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Real True Legendary BFG") == 0)            ammo = CheckInventory("LDemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Legendary BFG", ammocapa = GetAmmoCapacity("LDemonAmmo"), clipsize = ammocapa;

			
		//Clusterfuck weapons
			
			if(strICmp(weapon, "Nemesis Rifle") == 0)       	      	   ammo = CheckInventory("NLDemonAmmo"), ammo2 = CheckInventory("NLDemonMagazine"), weicon="CDCFLC", weaponname = "Nemesis Rifle", ammocapa = GetAmmoCapacity("NLDemonAmmo"), clipsize = 50;
			if(strICmp(weapon, "Nemesis Assault Shotgun") == 0)       	   ammo = CheckInventory("NemesisShell"), ammo2 = CheckInventory("NemesisShotgunDrum"), weicon="CDCFDS", weaponname = "Nemesis Assault Shotgun", ammocapa = GetAmmoCapacity("NemesisShell"), clipsize = 16;
			if(strICmp(weapon, "Nemesis Sawed-Off Shotgun") == 0)          ammo = CheckInventory("NemesisShell"), ammo2 = CheckInventory("NemesisPellets"), weicon="CDCFDS", weaponname = "Nemesis Shotgun", ammocapa = GetAmmoCapacity("NemesisShell"), clipsize = 2;
			if(StrIcmp(weapon, "Nemesis Plasmatic Cannon") == 0)           ammo = CheckInventory("NLDemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Nemesis Plasma Cannon", ammocapa = GetAmmoCapacity("NLDemonAmmo"), clipsize = ammocapa;	
			if(StrIcmp(weapon, "HellStorm BFG10K") == 0)                   ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="CDCFLC", weaponname = "HellStorm BFG 10k", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "HellStormBFG10K") == 0)                    ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="CDCFLC", weaponname = "HellStorm BFG 10k", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "HellStormBFG") == 0)                       ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="CDCFLC", weaponname = "HellStorm BFG", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "FlameSword") == 0)             		       ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "Flame Sword", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "CommanderDevastator") == 0)                ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Devastator", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "BFG9500") == 0)                            ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9500", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
			if(StrIcmp(weapon, " Demon Tech BFG10K ") == 0)                ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Demon Tech BFG 10k", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "RuffianCannon") == 0)             	  	   ammo = CheckInventory("DemonAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "Ruffian Cannon", ammocapa = GetAmmoCapacity("DemonAmmo"), clipsize = ammocapa;
			if(strICmp(weapon, "ExplosiveSSG") == 0)         			   ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ExpSSGShell"), weicon="PINAEA", weaponname = "Explosive SSG", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 2;
			if(StrIcmp(weapon, "Nemesis BFG") == 0)           			   ammo = CheckInventory("NLDemonAmmo"), ammo2 = -1, weicon="CDCFLC", weaponname = "Nemesis BFG", ammocapa = GetAmmoCapacity("NLDemonAmmo"), clipsize = ammocapa;		
			

		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		
		else if(CheckInventory("IsPlayingAsProjectBrutality")) // PB 3.0
		{
			// Slot 2
		 
		  if(strICmp(weapon, "BDpistol") == 0)                 ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("PrimaryPistolAmmo"), weicon="PINAXA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 16;
		  if(strICmp(weapon, "Handgun") == 0)                  ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("SecondaryPistolAmmo"), weicon="PINAXA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 32;
		  if(strICmp(weapon, "DualMagnums") == 0)              ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("AkimboAmmo"), weicon="PINAMA", weaponname = "Revolvers", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 12;
		  if(strICmp(weapon, "Revolver") == 0)       	       ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("RevolverAmmo"), weicon="PINAMA", weaponname = "Revolvers", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 6; 
		  if(strICmp(weapon, "Deagle") == 0)                  ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("DeagleAmmo"), weicon="PINAXA", weaponname = "Desert Eagle", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 6;
		  if(strICmp(weapon, "Deagle") == 0 && CheckInventory("DualWieldingDeagles"))       ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("DeagleAmmo"), weicon="PINAXA", weaponname = "Desert Eagles", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 12;
			
		  //Slot 2 (SMG)
		  if(strICmp(weapon, "CompactSMG") == 0)               ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("SMGAmmo"), weicon="PINAXA", weaponname = "Compact SMG", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 51;
		  if(StrICmp(weapon, "Carbine") == 0)                  ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("XRifleAmmo"), weicon="PINADA", weaponname = "Carbine", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 41;
		  if(StrICmp(weapon, "DualCarbines") == 0)             ammo = CheckInventory("NewClip"), ammo2 = checkinventory("DoubleCarbineAmmo"), weicon="PINADA", weaponname = "Carbines", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 82;
		  if(StrICmp(weapon, "Rifle") == 0)                    ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("RifleAmmo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 31;
		  if(StrICmp(weapon, "DualRifles") == 0)               ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("DoubleRifleAmmo"), weicon="PINADA", weaponname = "Rifles", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 62;
		  if(StrICmp(weapon, "HMG") == 0)                      ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("HMGAmmo"), weicon="PINADA", weaponname = "Heavy Nail Gun", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 80;
		  if(StrICmp(weapon, "LMG") == 0)                      ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("LMGAmmo"), weicon="PINADA", weaponname = "Light Machingun", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 61;
		  if(StrICmp(weapon, "Mini_Gun") == 0)                 ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("NewClip"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HitlersBuzzsaw") == 0)           ammo = CheckInventory("BuzzsawAmmo"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", ammocapa = GetAmmoCapacity("BuzzsawAmmo"), clipsize = ammocapa;;
		  if(StrICmp(weapon, "SecretWeapon_MP40") == 0)        ammo = CheckInventory("PistolBullets"), ammo2 = CheckInventory("MP40Ammo"), weicon="PINAXA", weaponname = "MP 40", ammocapa = GetAmmoCapacity("PistolBullets"), clipsize = 32;;

		  if(StrICmp(weapon, "Shot_Gun") == 0)         	     ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 9; 
		  if(StrICmp(weapon, "Shot_Gun") == 0 && CheckInventory("HasSlugs"))         	     ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINALA", weaponname = "Shotgun [slugs]", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 9; 
		  if(StrICmp(weapon, "Shot_Gun") == 0 && CheckInventory("HasDragonBreath"))          ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="FBSGAM", weaponname = "Shotgun [dragon]", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 9; 
		  if(StrICmp(weapon, "Shot_Mag") == 0)                 ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Mag Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 11;   
		  if(StrICmp(weapon, "SSG") == 0)                      ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("SSGAmmoCounter"), weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 2; 
		  if(StrICmp(weapon, "AutoShotgun") == 0)              ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("AutoShotgunAmmo"), weicon="PINAEA", weaponname = "Auto Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 12; 
		  if(StrICmp(weapon, "DualSSG") == 0)                  ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("DualSSGAmmo"), weicon="PINAEA", weaponname = "Super Shotguns", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 4; 
		  if(StrICmp(weapon, "DualAutoShotguns") == 0)         ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("DoubleASGAmmo"), weicon="PINAEA", weaponname = "Auto Shotguns", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 24; 
		  if(StrICmp(weapon, "Quad_SSG") == 0)                 ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("QSSGAmmoCounter"), weicon="PINAEA", weaponname = "Quad Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 4; 

		  if(StrIcmp(weapon, "Rocket_Launcher") == 0)          ammo = CheckInventory("RocketAmmo"), ammo2 = CheckInventory("RocketRounds"), weicon="PBROCK", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize = 6; 
		  if(StrIcmp(weapon, "Grenade_Launcher") == 0)         ammo = CheckInventory("HighExplosiveGrenadeRounds"), ammo2 = -1, weicon="PBROCK", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("HighExplosiveGrenadeRounds"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "Excavator") == 0)                ammo = CheckInventory("HighExplosiveGrenadeRounds"), ammo2 = CheckInventory("ExcavatorRounds"), weicon="PBEXAM", weaponname = "Excavator", ammocapa = GetAmmoCapacity("HighExplosiveGrenadeRounds"), clipsize = 5; 
		  if(StrIcmp(weapon, "Super_Grenade_Launcher") == 0)   ammo = CheckInventory("SpecialGrenadeRounds"), ammo2 = CheckInventory("GrenadeRounds"), weicon="SGLNOR", weaponname = "SuperGrenadeLauncher", ammocapa = GetAmmoCapacity("SpecialGrenadeRounds"), clipsize = 6; 
		  if(StrIcmp(weapon, "Super_Grenade_Launcher") == 0 && CheckInventory("GrenadeTypeImpact"))   ammo = CheckInventory("SpecialGrenadeRounds"), ammo2 = CheckInventory("GrenadeRounds"), weicon="SGLNOR", weaponname = "SGL [impact]", ammocapa = GetAmmoCapacity("SpecialGrenadeRounds"), clipsize = 6; 
		  if(StrIcmp(weapon, "Super_Grenade_Launcher") == 0 && CheckInventory("GrenadeTypeLVG"))   ammo = CheckInventory("SpecialGrenadeRounds"), ammo2 = CheckInventory("GrenadeRounds"), weicon="SGLLVG", weaponname = "SGL [sticky]", ammocapa = GetAmmoCapacity("SpecialGrenadeRounds"), clipsize = 6; 
		  if(StrIcmp(weapon, "Super_Grenade_Launcher") == 0 && CheckInventory("GrenadeTypeIncendiary"))   ammo = CheckInventory("SpecialGrenadeRounds"), ammo2 = CheckInventory("GrenadeRounds"), weicon="SGLINC", weaponname = "SGL [incendiary]", ammocapa = GetAmmoCapacity("SpecialGrenadeRounds"), clipsize = 6; 
		  if(StrIcmp(weapon, "Super_Grenade_Launcher") == 0 && CheckInventory("GrenadeTypeCryo"))   ammo = CheckInventory("SpecialGrenadeRounds"), ammo2 = CheckInventory("GrenadeRounds"), weicon="SGLFRZ", weaponname = "SGL [cryogenic]", ammocapa = GetAmmoCapacity("SpecialGrenadeRounds"), clipsize = 6; 
		  if(StrIcmp(weapon, "Super_Grenade_Launcher") == 0 && CheckInventory("GrenadeTypeAcid"))   ammo = CheckInventory("SpecialGrenadeRounds"), ammo2 = CheckInventory("GrenadeRounds"), weicon="SGLACI", weaponname = "SGL [acid]", ammocapa = GetAmmoCapacity("SpecialGrenadeRounds"), clipsize = 6; 	 
		 
		  if(StrIcmp(weapon, "Plasma_Gun") == 0)               ammo = CheckInventory("Cell"), ammo2 = CheckInventory("PlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = 50; 
		  if(StrICmp(weapon, "DualPlasmaRifles") == 0)         ammo = CheckInventory("Cell"), ammo2 = checkinventory("DoublePlasmagunAmmo"), weicon="PINAFA", weaponname = "Plasma Rifles", ammocapa = GetAmmoCapacity("Cell"), clipsize = 100; 
		  if(StrIcmp(weapon, "M2PlasmaRifle") == 0)            ammo = CheckInventory("Cell"), ammo2 = CheckInventory("M2PlasmaAmmo"), weicon="PINAFA", weaponname = "M2 Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = 50; 
		  if(StrICmp(weapon, "DualM2PlasmaRifles") == 0)         ammo = CheckInventory("Cell"), ammo2 = checkinventory("DoubleM2PlasmagunAmmo"), weicon="PINAFA", weaponname = "M2 Plasma Rifles", ammocapa = GetAmmoCapacity("Cell"), clipsize = 100;   
		  if(StrIcmp(weapon, "PulseCannon") == 0)              ammo = CheckInventory("Cell"), ammo2 = CheckInventory("PulseCannonAmmo"), weicon="PINAFA", weaponname = "Pulse Cannon", ammocapa = GetAmmoCapacity("Cell"), clipsize = 60; 
		  if(StrICmp(weapon, "DualPulseCannons") == 0)         ammo = CheckInventory("Cell"), ammo2 = checkinventory("DoublePulseCannonAmmo"), weicon="PINAFA", weaponname = "Pulse Cannons", ammocapa = GetAmmoCapacity("Cell"), clipsize = 120;   
		  
		  if(StrIcmp(weapon, "BIG_FUCKING_GUN_MKIV") == 0)     ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG Mk.IV", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa; 
		  if(StrIcmp(weapon, "BIG_FUCKING_GUN") == 0)          ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;   
		  if(StrIcmp(weapon, "PlasmaBeam") == 0)               ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Beamgun", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa; 
		  if(StrIcmp(weapon, "BHGen") == 0)                    ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Black hole Generator", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;     
		  if(StrIcmp(weapon, "Rail_Gun") == 0)                 ammo = CheckInventory("Cell"), ammo2 = CheckInventory("RailgunAmmo"), weicon="PINAFA", weaponname = "Rail Gun", ammocapa = GetAmmoCapacity("Cell"), clipsize = 50; 
		  if(StrIcmp(weapon, "FreezerRifle") == 0)             ammo = CheckInventory("Cell"), ammo2 = CheckInventory("FreezerAmmo"), weicon="PINAFA", weaponname = "Freezer Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = 60; 
		  
		  if(StrIcmp(weapon, "FlameCannon") == 0)              ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Flame Cannon", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa; 
		  if(StrIcmp(weapon, "HellishMissileLauncher") == 0)   ammo = CheckInventory("MiniHellRocketAmmo"), ammo2 = -1, weicon="PINHLSA", weaponname = "Hellish Missile Launcher", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa; 
		  if(StrIcmp(weapon, "Hell_rifle") == 0)               ammo = CheckInventory("Demonpower"), ammo2 = CheckInventory("HellAmmo"), weicon = "PINAKA", weaponname = "Hell Rifle", ammocapa = GetAmmoCapacity("Demonpower"), clipsize = 50; 
		  if(StrIcmp(weapon, "Revenant_Rune") == 0)            ammo = CheckInventory("MiniHellRocketAmmo"), ammo2 = -1, weicon="PINHLSA", weaponname = "", ammocapa = GetAmmoCapacity("CeMiniHellRocketAmmoll"), clipsize = ammocapa; 
		    
	      if(StrICmp(weapon, "ASGguyShield") == 0)             ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldASGAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "CarbineZombieShield") == 0)      ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldCarbineAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "CommandoShield") == 0)           ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";  
		  if(StrICmp(weapon, "DarkImpShield") == 0)            ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";	
		  if(StrICmp(weapon, "HMGGuyShield") == 0)             ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";	
		  if(StrICmp(weapon, "ImpShield") == 0)                ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "ZombieScientistShield") == 0)    ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "PlasmaZombieShield") == 0)       ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPlasmaAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "SavageImpShield ") == 0)         ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "SguyShield") == 0)               ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "TriclopsImpShield") == 0)        ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";
		  if(StrICmp(weapon, "ZMANShield") == 0)               ammo = CheckInventory("MeatshieldGunAmmo"), ammo2 = CheckInventory("MeatshieldPistolAmmo"), weicon="NONEA", weaponname = "Pistol";
					/////////////////
		  if(strICmp(weapon, "Traditional_Chainsaw") ==0)      ammo = 0, weicon = "NONEA";
		  if(StrIcmp(weapon, "Traditional_Fist") == 0)         ammo = 0, weicon = "NONEA";
		  if(strICmp(weapon, "Traditional_Pistol") == 0)       ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Pistol", clipsize = ammocapa;
		  if(StrICmp(weapon, "Traditional_Shotgun") == 0)      ammo = CheckInventory("NewShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Sotgun", clipsize = ammocapa;
		  if(StrICmp(weapon, "Traditional_SSG") == 0)          ammo = CheckInventory("NewShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", clipsize = ammocapa;
		  if(StrICmp(weapon, "Traditional_ChainGun") == 0)     ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Chaingun", clipsize = ammocapa;
		  if(StrIcmp(weapon, "Traditional_RocketLauncher") == 0) ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", clipsize = ammocapa;
		  if(StrIcmp(weapon, "Traditional_PlasmaRifle") == 0)  ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", clipsize = ammocapa;
		  if(StrIcmp(weapon, "Traditional_BFG") == 0)          ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG", clipsize = ammocapa; 
		   
		   /////////////////
		  if(strICmp(weapon, "Vanilla_Chain_saw") ==0)      ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrICmp(weapon, "VanillaRifle") == 0)          ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("VanillaRifleAmmo"), weicon="PINADA", weaponname = "Rifle", clipsize = ammocapa;
		  if(StrICmp(weapon, "DualVanillaRifles") == 0)     ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("DoubleVanillaRifleAmmo"), weicon="PINADA", weaponname = "Rifles", clipsize = ammocapa;
		  if(StrICmp(weapon, "Vanilla_SSG") == 0)           ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("SSGAmmoCounter2"), weicon="PINAEA", weaponname = "Super Shotgun", clipsize = ammocapa;
		  if(StrICmp(weapon, "Vanilla_Mini_Gun") == 0)      ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", clipsize = ammocapa;
		  if(StrIcmp(weapon, "Vanilla_Rocket_Launcher") == 0) ammo = CheckInventory("RocketAmmo"), ammo2 = CheckInventory("RocketRounds"), weicon="PINAGA", weaponname = "Rocket Launcher", clipsize = ammocapa;
		  if(StrIcmp(weapon, "Vanilla_Plasma_Gun") == 0)    ammo = CheckInventory("Cell"), ammo2 = CheckInventory("PlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", clipsize = ammocapa;
		  if(StrICmp(weapon, "Vanilla_DualPlasmaRifles") == 0) ammo = CheckInventory("Cell"), ammo2 = checkinventory("DoublePlasmagunAmmo"), weicon="PINAFA", weaponname = "Plasma Rifles", clipsize = ammocapa;
		  if(StrIcmp(weapon, "U_HandGrenades") == 0)           ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "PIGANA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HandGrenades") == 0)             ammo = CheckInventory("HandGrenadeAmmo"), ammo2 = -1, weicon = "PIGANA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("HandGrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "C4Weapon") == 0)         		   ammo = CheckInventory("C4Ammo"), ammo2 = -1, weicon = "PIC4NA", weaponname = "C4 Charge", ammocapa = GetAmmoCapacity("C4Ammo"), clipsize = ammocapa;
		   
		  if(strICmp(weapon, "Chain_saw") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "U_Chainsaw") ==0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "ClassicModernSaw") ==0)          ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrIcmp(weapon, "Melee_Attacks") == 0)            ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrIcmp(weapon, "BrutalAxe") == 0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrIcmp(weapon, "ClassicFist") == 0)              ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "ClassicSaw") ==0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "Chainsaw") ==0)                  ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "BD_Chainsaw") ==0)               ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "Fist") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "BD_Fist") ==0)                   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "Melee_Attacks") ==0)             ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "D4BARONHUD") == 0)               ammo = -1, ammo2 = -1, weicon = "DERUA00", weaponname = "";
		  if(strICmp(weapon, "REVENANT_RUNE") ==0)             ammo = -1, ammo2 = -1, weicon = "DERUA00", weaponname = "";

		  if(StrICmp(weapon, "U_HitlersBuzzsaw") == 0)         ammo = CheckInventory("BuzzsawAmmoz"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw";
		  if(StrICmp(weapon, "HitlersBuzzsaw") == 0)           ammo = CheckInventory("BuzzsawAmmo"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw";
		  
		  if(StrIcmp(weapon, "U_Unmaker") == 0)                ammo = CheckInventory("U_SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("U_SoulAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "Unmaker") == 0)                  ammo = CheckInventory("SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("U_SoulAmmo"),clipsize = ammocapa;
		  
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		else if(CheckInventory("PerkFist")) //JohnnyDoom
		{
		// Slot 2
		  if(strICmp(weapon, "BrutalPistol") == 0)             ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("BDPistolAmmo"), weicon="PINADA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 10;
          if(strICmp(weapon, "PerkPistol") == 0)               ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("NewClip"), clipsize = ammocapa;    	
		//Slot 4
		  if(StrICmp(weapon, "Rifle") == 0)                    ammo = CheckInventory("NewClip"), ammo2 = CheckInventory("rifleammo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("NewClip"), clipsize = 30;
		  if(StrICmp(weapon, "PerkRifle") == 0)                    ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("NewClip"), clipsize = ammocapa; 
		  if(StrICmp(weapon, "Mini_Gun") == 0)                  ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("NewClip"), clipsize = ammocapa;
		  if(StrICmp(weapon, "PerkChaingun") == 0)             ammo = CheckInventory("NewClip"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("NewClip"), clipsize = ammocapa;
		// Slot 3
		  if(StrICmp(weapon, "Shot_Gun") == 0)                 ammo = CheckInventory("NewShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = 9;  
		  if(StrICmp(weapon, "PerkShotGun") == 0)                 ammo = CheckInventory("NewShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = ammocapa;  
		  if(StrICmp(weapon, "PerkSSG") == 0)                  ammo = CheckInventory("NewShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = ammocapa;
		  if(StrICmp(weapon, "SSG") == 0)                      ammo = CheckInventory("NewShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("NewShell"), clipsize = ammocapa;
		 // Slot 5
		  if(StrIcmp(weapon, "PerkRocketLauncher") == 0)       ammo = CheckInventory("NewRocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("NewRocketAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "Rocket_Launcher") == 0)          ammo = CheckInventory("NewRocketAmmo"), ammo2 = CheckInventory("RocketRounds"), weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("NewRocketAmmo"), clipsize = 6;
		    //Slot 6 & 7
		  if(StrIcmp(weapon, "Plasma_Gun") == 0)               ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "PerkPlasmaGun") == 0)            ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "BlasterRifle") == 0)             ammo = CheckInventory("CellAmmo"), ammo2 = CheckInventory("NewCell"), weicon="PINAFA", weaponname = "Blaster Rifle", ammocapa = GetAmmoCapacity("CellAmmo"), clipsize = 30;
		  if(StrIcmp(weapon, "BIG_FUCKING_GUN") == 0)          ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "PerkBFG") == 0)        	       ammo = CheckInventory("NewCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG", ammocapa = GetAmmoCapacity("NewCell"), clipsize = ammocapa;
		    //Slot 8
		  if(StrIcmp(weapon, "FlameCannon") == 0)              ammo = CheckInventory("MiniHellRocketAmmo"), ammo2 = -1, weicon="PINGASA", weaponname = "Flame Cannon", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "Flamethrower2") == 0)            ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Flame Thrower", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HellishMissileLauncher") == 0)   ammo = CheckInventory("MiniHellRocketAmmo"),ammo2 = -1, weicon="PINHLSA", weaponname = "Hellish Missile Launcher", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
		    //Slot 9
		  if(StrIcmp(weapon, "HandGrenades") == 0)             ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "GCDAXA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "JohnnyBomb1") == 0)              ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "GCDAXA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		    //Slot 1
		  if(strICmp(weapon, "Chain_saw") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "PerkChainsaw") ==0)              ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "PerkFist") ==0)                  ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "Knife") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "KNIFAA", weaponname = "";
		  if(strICmp(weapon, "AllyRadio") ==0)                 ammo = CheckInventory("RadioCalls"), ammo2 = -1, weicon = "TELECA", weaponname = "Radio", ammocapa = GetAmmoCapacity("RadioCalls"), clipsize = ammocapa;
		  
		  if(StrICmp(weapon, "ImpShield") == 0)                ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "ZMANShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "SguyShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "CguyShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "NaziShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "EvilMarineShield") == 0)         ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "ZombieCivilianShield") == 0)     ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;

		  if(StrICmp(weapon, "U_HitlersBuzzsaw") == 0)         ammo = CheckInventory("BuzzsawAmmoz"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", clipsize = ammocapa;
		  if(StrICmp(weapon, "HitlersBuzzsaw") == 0)           ammo = CheckInventory("BuzzsawAmmo"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", clipsize = ammocapa;
		  
		  if(StrIcmp(weapon, "U_Unmaker") == 0)                ammo = CheckInventory("U_SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("U_SoulAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "Unmaker") == 0)                  ammo = CheckInventory("SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("SoulAmmo"),clipsize = ammocapa;
		  
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		else if(CheckInventory("FistFixed")) //Doom Remake 4
		{
		// Slot 2
		  
          if(strICmp(weapon, "PistolFixed") == 0)              ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", ammocapa = GetAmmoCapacity("Clip"), weaponname = "Pistol", clipsize =ammocapa;    	
		//Slot 4
		  if(strICmp(weapon, "ChaingunFixed") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		// Slot 3
		  if(strICmp(weapon, "SuperShotgunFixed") == 0)         	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "ShotgunFixed") == 0)          		   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		// Slot 5
		  if(strICmp(weapon, "RocketLauncherFixed") == 0)           ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;
		//Slot 6 & 7
		  if(strICmp(weapon, "PlasmaRifleFixed") == 0)              ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
	      if(strICmp(weapon, "BFG9000Fixed") == 0)          		   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		//Slot 8
	    //Slot 9
		//Slot 1
		  if(strICmp(weapon, "ChainsawFixed") ==0)                  ammo = -1, ammo2 = -1, weicon = "PINGASA", weaponname = "";
		  if(strICmp(weapon, "FistFixed") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		
		else if(strICmp(PlClass, "SaturnPlayer") == 0) //WeaponsOfSaturn
		{
		// Slot 2
		  
          if(strICmp(weapon, "Beretta") == 0)       	       ammo = CheckInventory("Clip"), ammo2 = CheckInventory("9mm"), weaponname = "Beretta", weicon="PINADA", ammocapa = GetAmmoCapacity("Clip"), clipsize = 16;
		  if(strICmp(weapon, "1911") == 0)       	       ammo = CheckInventory("Bullets"), ammo2 = CheckInventory("ACP"), weaponname = "1911", weicon="PINAXA", ammocapa = GetAmmoCapacity("Bullets"), clipsize = 8;
		  
		  //Slot 4
		  if(strICmp(weapon, "MP40") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = CheckInventory("MP40Ammo"),weicon="PINADA", weaponname = "MP40", ammocapa = GetAmmoCapacity("Clip"), clipsize = 32;
		  if(strICmp(weapon, "MachineRifle") == 0)          	   ammo = CheckInventory("RifleAmmo"), ammo2 = CheckInventory("Magazine"),weicon="PINADA", weaponname = "Machine Rifle", weicon="PINADA", ammocapa = GetAmmoCapacity("RifleAmmo"), clipsize = 41;
		  if(strICmp(weapon, "Minigun") == 0)          	   ammo = CheckInventory("Nato"), ammo2 = CheckInventory("NatoBelt"),weicon="PINANA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("Nato"), clipsize = 120;
		  
		// Slot 3
		  if(strICmp(weapon, "Coachgun") == 0)         	   ammo = CheckInventory("Shell"), ammo2 = CheckInventory("LoadedShells"), weicon="PINAEA", weaponname = "Coachgun", ammocapa = GetAmmoCapacity("Shell"), clipsize = 2;
		  if(strICmp(weapon, "Riotgun") == 0)          		   ammo = CheckInventory("Shell"), ammo2 = CheckInventory("LoadedShell"), weicon="PINAEA",  weaponname = "Riotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize = 9;
		// Slot 5
		  if(strICmp(weapon, "SaturnV") == 0)           ammo = CheckInventory("RocketAmmo"), ammo2 = CheckInventory("RocketRounds"), weicon="PINAGA", weaponname = "Saturn V", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize = 12;
		//Slot 6 & 7
		  if(strICmp(weapon, "NovaRifle") == 0)              ammo = CheckInventory("Cell"), ammo2 = CheckInventory("Cellpak"), weicon="PINAFA", weaponname = "Nova Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = 60;
	      if(strICmp(weapon, "TITAN") == 0)          		   ammo = CheckInventory("Cell"), ammo2 = CheckInventory("BFGCell"), weicon="PINAFA", weaponname = "TITAN", ammocapa = GetAmmoCapacity("Cell"), clipsize = 160;
		//Slot 8
	    //Slot 9
		//Slot 1
		  if(strICmp(weapon, "Motorsaw") ==0)                  ammo = -1, ammo2 = -1, weicon = "PINGASA", weaponname = "Motorsaw";
		  if(strICmp(weapon, "Knuckles") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		else if ( ( GetActorProperty(ActivatorTID(),APROP_Mass)==100 && !CheckInventory("IsPlayingAsPurist") && CheckInventory("Melee_Attacks") ) || ( GetActorProperty(ActivatorTID(),APROP_Mass)==100 && CheckInventory("ClassicFist") ) ) //BrutalDoomv20b
		{
			if(strICmp(weapon, "Chain_saw") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(StrIcmp(weapon, "Melee_Attacks") == 0)            ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(StrICmp(weapon, "Rifle") == 0)                    ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("RifleAmmo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 31;
			if(StrICmp(weapon, "DualRifles") == 0)               ammo = CheckInventory("Clip2"), ammo2 = checkinventory("dOUBLERifleAmmo"), weicon="PINADA", weaponname = "Rifles", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 62;
			if(StrICmp(weapon, "MiniGun") == 0)                  ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
			if(StrICmp(weapon, "Shot_Gun") == 0)                 ammo = CheckInventory("Shell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize = 8;  
			if(StrICmp(weapon, "SSG") == 0)                      ammo = CheckInventory("Shell"), ammo2 = CheckInventory("SSGAmmo"), weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize = 2;
			if(StrIcmp(weapon, "Rocket_Launcher") == 0)          ammo = CheckInventory("RocketAmmo"), ammo2 = CheckInventory("RocketRounds"), weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize = 6;
			if(StrIcmp(weapon, "GrenadeLauncher") == 0)          ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "Plasma_Gun") == 0)               ammo = CheckInventory("Cell"), ammo2 = CheckInventory("PlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = 50;
			if(StrICmp(weapon, "DUalPlasmaRifles") == 0)         ammo = CheckInventory("Cell"), ammo2 = checkinventory("DoublePlasmagunAmmo"), weicon="PINAFA", weaponname = "Plasma Rifles", ammocapa = GetAmmoCapacity("Cell"), clipsize = 100;
			if(StrIcmp(weapon, "BIG_FUCKING_GUN") == 0)          ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "HellishMissileLauncher") == 0)   ammo = CheckInventory("MiniHellRocketAmmo"),ammo2 = -1, weicon="PINHLSA", weaponname = "Hellish Missile Launcher", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
			if(StrICmp(weapon, "MP40") == 0)                     ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("MP40Ammo"), weicon="PINADA", weaponname = "MP40", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 32;
			if(StrIcmp(weapon, "BFG10k") == 0)                   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 10k", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
			if(StrIcmp(weapon, "RailGun") == 0)                  ammo = CheckInventory("Cell"), ammo2 = CheckInventory("RailgunAmmo"), weicon="PINAFA", weaponname = "Sonic Railgun", ammocapa = GetAmmoCapacity("Cell"), clipsize = 50;
			if(StrIcmp(weapon, "HandGrenades") == 0)             ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "PIGANA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "FlameCannon") == 0)              ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Flame Cannon", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
			
			if(ammocapa != 0)
			  {
				ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
			  }
			  if(clipsize != 0)
			  {
				ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
			  }
		}
		
		else //Vanilla ; HardDoom ; SmoothDoom ; BeautifulDoom ; BD21  (+ Tometefar ext. 1.8b  + Mutators 1.5.4b  + Doom 2016 Arsenal) ; LegendDoom ; Final Doomer
		{
		//Final Doomer
			//Plutonia
				if(strICmp(weapon, "FDPlutFist") ==0)               ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
				if(strICmp(weapon, "FDPlutPistol") == 0)            ammo = CheckInventory("FDPlutPistolAmmo"),ammo2 = -1, weicon="INFIAA", ammocapa = GetAmmoCapacity("FDPlutPistolAmmo"), weaponname = "Ol' Faithful", clipsize =ammocapa;
				if(StrICmp(weapon, "FDPlutShotgun") == 0)           ammo = CheckInventory("FDPlutShells"), ammo2 = -1, weicon="PINAEA", weaponname = "Scoped Shotgun", ammocapa = GetAmmoCapacity("FDPlutShells"), clipsize =ammocapa; 
				if(StrICmp(weapon, "FDPlutSuperShotgun") == 0)      ammo = CheckInventory("FDPlutShells"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("FDPlutShells"), clipsize =ammocapa;
				if(StrICmp(weapon, "FDPlutChaingun") == 0)          ammo = CheckInventory("FDPlutBullets"), ammo2 = -1,weicon="PINADA", weaponname = "Machine Gun", ammocapa = GetAmmoCapacity("FDPlutBullets"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDPlutRocketLauncher") == 0)    ammo = CheckInventory("FDPlutRocket"), ammo2 = -1, weicon="RCKFDP", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("FDPlutRocket"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDPlutPlasmaRifle") == 0)       ammo = CheckInventory("FDPlutCell"), ammo2 = -1, weicon="CELFDP", weaponname = "Heavy Machine Gun", ammocapa = GetAmmoCapacity("FDPlutCell"), clipsize = ammocapa;
				if(strICmp(weapon, "FDPlutChainsaw") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Power Saw";
				if(strICmp(weapon, "FDPlutBFG9000") == 0)          	ammo = CheckInventory("FDPlutBFGCharge"), ammo2 = -1, weicon="BFGFDP", weaponname = "Quantum Accelerator", ammocapa = GetAmmoCapacity("FDPlutBFGCharge"), clipsize = ammocapa;
			//TNT
				if(strICmp(weapon, "FDTNTFist") ==0)               ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
				if(strICmp(weapon, "FDTNTPistol") == 0)            ammo = CheckInventory("FDTNTPistolAmmo"),ammo2 = -1, weicon="INFIAA", ammocapa = GetAmmoCapacity("FDTNTPistolAmmo"), weaponname = "Prototype Pistol", clipsize =ammocapa;
				if(StrICmp(weapon, "FDTNTShotgun") == 0)           ammo = CheckInventory("FDTNTShells"), ammo2 = -1, weicon="SHLFDT", weaponname = "Tactical Shotgun", ammocapa = GetAmmoCapacity("FDTNTShells"), clipsize =ammocapa; 
				if(StrICmp(weapon, "FDTNTSuperShotgun") == 0)      ammo = CheckInventory("FDTNTShells"), ammo2 = -1, weicon="SHLFDT", weaponname = "Burst Shotgun", ammocapa = GetAmmoCapacity("FDTNTShells"), clipsize =ammocapa;
				if(StrICmp(weapon, "FDTNTChaingun") == 0)          ammo = CheckInventory("FDTNTBullets"), ammo2 = -1,weicon="BULFDT", weaponname = "Dual Uzis", ammocapa = GetAmmoCapacity("FDTNTBullets"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDTNTRocketLauncher") == 0)    ammo = CheckInventory("FDTNTRocket"), ammo2 = -1, weicon="RCKFDT", weaponname = "Missile Launcher", ammocapa = GetAmmoCapacity("FDTNTRocket"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDTNTPlasmaRifle") == 0)       ammo = CheckInventory("FDTNTCell"), ammo2 = -1, weicon="CELFDT", weaponname = "Maser", ammocapa = GetAmmoCapacity("FDTNTCell"), clipsize = ammocapa;
				if(strICmp(weapon, "FDTNTChainsaw") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Halderman Device";
				if(strICmp(weapon, "FDTNTBFG9000") == 0)           ammo = CheckInventory("FDTNTBFGCharge"), ammo2 = -1, weicon="BFGFDT", weaponname = "Incursion Annihilator", ammocapa = GetAmmoCapacity("FDTNTBFGCharge"), clipsize = ammocapa;
			//Doom2
				if(strICmp(weapon, "FDDoom2Fist") ==0)               ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
				if(strICmp(weapon, "FDDoom2Pistol") == 0)            ammo = CheckInventory("FDDoom2PistolAmmo"),ammo2 = -1, weicon="INFIAA", ammocapa = GetAmmoCapacity("FDDoom2PistolAmmo"), weaponname = "Pistol", clipsize =ammocapa;
				if(StrICmp(weapon, "FDDoom2Shotgun") == 0)           ammo = CheckInventory("FDDoom2Shells"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("FDDoom2Shells"), clipsize =ammocapa; 
				if(StrICmp(weapon, "FDDoom2SuperShotgun") == 0)      ammo = CheckInventory("FDDoom2Shells"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("FDDoom2Shells"), clipsize =ammocapa;
				if(StrICmp(weapon, "FDDoom2Chaingun") == 0)          ammo = CheckInventory("FDDoom2Bullets"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("FDDoom2Bullets"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDDoom2RocketLauncher") == 0)    ammo = CheckInventory("FDDoom2Rocket"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("FDDoom2Rocket"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDDoom2PlasmaRifle") == 0)       ammo = CheckInventory("FDDoom2Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("FDDoom2Cell"), clipsize = ammocapa;
				if(strICmp(weapon, "FDDoom2Chainsaw") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
				if(strICmp(weapon, "FDDoom2BFG9000") == 0)           ammo = CheckInventory("FDDoom2BFGCharge"), ammo2 = -1, weicon="BFGFDD", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("FDDoom2BFGCharge"), clipsize = ammocapa;
			//Aliens
				if(strICmp(weapon, "FDAliensFist") ==0)               ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
				if(strICmp(weapon, "FDAliensPistol") == 0)            ammo = CheckInventory("FDAliensPistolAmmo"),ammo2 = -1, weicon="INFIAA", ammocapa = GetAmmoCapacity("FDAliensPistolAmmo"), weaponname = "Ancient Pistol", clipsize =ammocapa;
				if(StrICmp(weapon, "FDAliensShotgun") == 0)           ammo = CheckInventory("FDAliensShells"), ammo2 = -1, weicon="PINAEA", weaponname = "Ancient Shotgun", ammocapa = GetAmmoCapacity("FDAliensShells"), clipsize =ammocapa; 
				if(StrICmp(weapon, "FDAliensSuperShotgun") == 0)      ammo = CheckInventory("FDAliensShells"), ammo2 = -1, weicon="PINAEA", weaponname = "Hybrid SSG", ammocapa = GetAmmoCapacity("FDAliensShells"), clipsize =ammocapa;
				if(StrICmp(weapon, "FDAliensChaingun") == 0)          ammo = CheckInventory("FDAliensBullets"), ammo2 = -1,weicon="BULFDA", weaponname = "Ancient AK", ammocapa = GetAmmoCapacity("FDAliensBullets"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDAliensRocketLauncher") == 0)    ammo = CheckInventory("FDAliensRocket"), ammo2 = -1, weicon="RCKFDA", weaponname = "Photon Scepter", ammocapa = GetAmmoCapacity("FDAliensRocket"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDAliensPlasmaRifle") == 0)       ammo = CheckInventory("FDAliensCell"), ammo2 = -1, weicon="CELFDA", weaponname = "Alien Elite Weapon", ammocapa = GetAmmoCapacity("FDAliensCell"), clipsize = ammocapa;
				if(strICmp(weapon, "FDAliensChainsaw") ==0)           ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "Stasis Bow";
				if(strICmp(weapon, "FDAliensBFG9000") == 0)           ammo = CheckInventory("FDAliensBFGCharge"), ammo2 = -1, weicon="BFGFDA", weaponname = "Illuminator", ammocapa = GetAmmoCapacity("FDAliensBFGCharge"), clipsize = ammocapa;
			//JPCP
				if(strICmp(weapon, "FDJPCPFist") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Katana";
				if(strICmp(weapon, "FDJPCPPistol") == 0)          	  ammo = CheckInventory("FDJPCPPistolAmmo"),ammo2 = -1, weicon="INFIAA", ammocapa = GetAmmoCapacity("FDJPCPPistolAmmo"), weaponname = "Silenced Pistol", clipsize =ammocapa;
				if(StrICmp(weapon, "FDJPCPShotgun") == 0)         	  ammo = CheckInventory("FDJPCPShells"), ammo2 = -1, weicon="SHLFDJ", weaponname = "Neutron Pulser", ammocapa = GetAmmoCapacity("FDJPCPShells"), clipsize =ammocapa; 
				if(StrICmp(weapon, "FDJPCPSuperShotgun") == 0)        ammo = CheckInventory("FDJPCPShells"), ammo2 = -1, weicon="SHLFDJ", weaponname = "Neutron Cascader", ammocapa = GetAmmoCapacity("FDJPCPShells"), clipsize =ammocapa;
				if(StrICmp(weapon, "FDJPCPChaingun") == 0)         	  ammo = CheckInventory("FDJPCPBullets"), ammo2 = -1,weicon="BULFDJ", weaponname = "Burst Needler", ammocapa = GetAmmoCapacity("FDJPCPBullets"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDJPCPRocketLauncher") == 0)   	  ammo = CheckInventory("FDJPCPRocket"), ammo2 = -1, weicon="RCKFDJ", weaponname = "Prism Cannon", ammocapa = GetAmmoCapacity("FDJPCPRocket"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDJPCPPlasmaRifle") == 0)     	  ammo = CheckInventory("FDJPCPCell"), ammo2 = -1, weicon="CELFDJ", weaponname = "Ofuda Caster", ammocapa = GetAmmoCapacity("FDJPCPCell"), clipsize = ammocapa;
				if(strICmp(weapon, "FDJPCPChainsaw") ==0)             ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
				if(strICmp(weapon, "FDJPCPBFG9000") == 0)          	  ammo = CheckInventory("FDJPCPBFGCharge"), ammo2 = -1, weicon="BFGFDJ", weaponname = "Onmyou Devastator", ammocapa = GetAmmoCapacity("FDJPCPBFGCharge"), clipsize = ammocapa;
			//BTSX
				if(strICmp(weapon, "FDBTSXFist") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Power Fist";
				if(strICmp(weapon, "FDBTSXPistol") == 0)           	  ammo = CheckInventory("FDBTSXPistolCharge"),ammo2 = -1, weicon="INFIAA", ammocapa = GetAmmoCapacity("FDBTSXPistolCharge"), weaponname = "Charge Pistol", clipsize =ammocapa;
				if(StrICmp(weapon, "FDBTSXShotgun") == 0)          	  ammo = CheckInventory("FDBTSXShells"), ammo2 = -1, weicon="SHLFDB", weaponname = "Arc Blaster", ammocapa = GetAmmoCapacity("FDBTSXShells"), clipsize =ammocapa; 
				if(StrICmp(weapon, "FDBTSXSuperShotgun") == 0)        ammo = CheckInventory("FDBTSXShells"), ammo2 = -1, weicon="SHLFDB", weaponname = "Machreaper", ammocapa = GetAmmoCapacity("FDBTSXShells"), clipsize =ammocapa;
				if(StrICmp(weapon, "FDBTSXChaingun") == 0)         	  ammo = CheckInventory("FDBTSXBullets"), ammo2 = -1,weicon="BULFDB", weaponname = "Pulse Rifle", ammocapa = GetAmmoCapacity("FDBTSXBullets"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDBTSXRocketLauncher") == 0)   	  ammo = CheckInventory("FDBTSXRocket"), ammo2 = -1, weicon="RCKFDB", weaponname = "Pulse Cannon", ammocapa = GetAmmoCapacity("FDBTSXRocket"), clipsize = ammocapa;
				if(StrIcmp(weapon, "FDBTSXPlasmaRifle") == 0)         ammo = CheckInventory("FDBTSXCell"), ammo2 = -1, weicon="CELFDB", weaponname = "Plasma Vulcan", ammocapa = GetAmmoCapacity("FDBTSXCell"), clipsize = ammocapa;
				if(strICmp(weapon, "FDBTSXChainsaw") ==0)             ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "NanoCore";
				if(strICmp(weapon, "FDBTSXBFG9000") == 0)          	  ammo = CheckInventory("FDBTSXBFGCharge"), ammo2 = -1, weicon="BFGFDB", weaponname = "X-Spark Cannon", ammocapa = GetAmmoCapacity("FDBTSXBFGCharge"), clipsize = ammocapa;
			
		
		//XV117's D4 Arsenal Weapons
			if(strICmp(weapon, "NewBaronHUD") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "D4WeaponUpgrader") ==0)        ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "NewRevenantHUD") ==0)        ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";			
			if(strICmp(weapon, "D4Chainsaw") ==0)              ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Chainsaw";
			if(strICmp(weapon, "Melee_Attacks") ==0)           ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			if(strICmp(weapon, "D4Axe") == 0)       	       ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "Axe";
			// Slot 2
			if(strICmp(weapon, "D4Pistol") == 0)       	       
			{
				ammo = CheckInventory("PistolTicCounter"), ammo2 = -1, weicon = "INFIAA", weaponname = "EMG Sidearm", ammocapa = GetAmmoCapacity("PistolTicCounter"), clipsize = ammocapa;
				if(UpPistolFastCharge) upgrade = "fast charge";
				if(UpPistolProtoGenerator) upgrade2 = "proto generator";	
			}
			if(StrICmp(weapon, "D4Repeater") == 0)             
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Burst Rifle", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				if(UpRepeaterDamage) upgrade2 = "damage +";
				if(UpRepeaterScope) upgrade = "precision scope";	
			}
			// Slot 3
            		if(StrICmp(weapon, "D4Shotgun") == 0)              
			{
				ammo = CheckInventory("D4Shells"), ammo2 = -1, weicon="D4SHA0", weaponname = "Combat Shotgun", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = ammocapa;
				if(ModHasTriShot) upgrade = "burst shot", modcooldown = SGTriShotTimer, maxcooldown = 52;
				if(ModHasExplosiveShot) upgrade = "explosive module", modcooldown = SGGrenadeTimer, maxcooldown = 52;				
			}
			if(StrICmp(weapon, "D4SSG") == 0)	ammo = CheckInventory("D4Shells"), ammo2 = CheckInventory("D4SSGAmmo"), weicon="D4SHA0", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = 2;
			if(StrICmp(weapon, "D4Chaingun") == 0)             
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				if(ModHasMobileTurret) upgrade = "mobile turret";
				if(ModHasGatlingRotator) upgrade = "gatling rotator";	
			}
			if(StrICmp(weapon, "D4HAR") == 0)
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "H.A.R", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				if(ModHasMicroMissile) upgrade = "micro missiles";
				if(ModHasTacticalScope) upgrade = "tactical scope";
			}
			if(StrIcmp(weapon, "D4RocketLauncher") == 0)       
			{
				ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="D4MIA0", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
				if(ModHasLockOn) upgrade = "lock-on mode";
				if(ModHasDetonator) upgrade = "detonator mode";	
			}
			if(StrIcmp(weapon, "D4GrenadeLauncher") == 0)      
			{
				ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="D4MIA0", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
				if(UpGrenadeLaucherAltFire) upgrade = "poison grenade", modcooldown = GLGasTimer, maxcooldown = 52;
				if(UpGrenadeLaucherDamage) upgrade2 = "damage +";	
			}
			if(strICmp(weapon, "D4PlasmaRifle") == 0)          
			{
				ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="D4CLA0", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
				if(ModHasStunBomb) upgrade = "stun bomb", modcooldown = StunBombTimer, maxcooldown = 52;
				if(ModHasHeatWave) upgrade = "heat wave";	
			}
			if(StrIcmp(weapon, "D4GaussCannon") == 0)          
			{
				ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="D4ROA0", weaponname = "Gauss Cannon", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa;
				if(ModHasPrecisionScope) upgrade = "precision bolt";
				if(ModHasSiegeMode) upgrade = "siege mode";	
			}
			if(StrIcmp(weapon, "D4BFG") == 0)                  ammo = CheckInventory("D4BFGAmmo"), ammo2 = -1, weicon="D4BFA0", weaponname = "BFG", ammocapa = GetAmmoCapacity("D4BFGAmmo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "D4VortexRifle") == 0)          
			{
				ammo = CheckInventory("D4Slugs"), ammo2 = -1, weicon="D4ROA0", weaponname = "Vortex Rifle", ammocapa = GetAmmoCapacity("D4Slugs"), clipsize = ammocapa, modcooldown = VortexFireTimer, maxcooldown = 52;
				if(UpVortexRifleDamage) upgrade2 = "damage +";
				if(UpVortexRifleScope) upgrade = "infrared scope";	
			}
			if(StrIcmp(weapon, "D4LightningGun") == 0)        
			{
				ammo = CheckInventory("D4Cells"), ammo2 = -1, weicon="D4CLA0", weaponname = "Lightning Rifle", ammocapa = GetAmmoCapacity("D4Cells"), clipsize = ammocapa;
				if(UpLightningGunAltFire) upgrade = "voltaic arc";
				if(UpLightningGunDamage) upgrade2 = "damage +";	
			}
			if(StrIcmp(weapon, "D4HellShot") == 0)             
			{
				ammo = CheckInventory("ArgentEnergy"), ammo2 = -1, weicon="HLLMMA", weaponname = "Hell Shot", ammocapa = GetAmmoCapacity("ArgentEnergy"), clipsize = ammocapa;
				if(UpHellshotAltFire) upgrade = "argent flare", modcooldown = HSFlareTimer, maxcooldown = 52;
			}
			if(StrICmp(weapon, "MG42") == 0)           		   ammo = CheckInventory("MG42Ammo"), ammo2 = -1, weicon="PINAIA", weaponname = "MG 42", ammocapa = GetAmmoCapacity("MG42Ammo"), clipsize = ammocapa;
			if(StrIcmp(weapon, "RevenantMissileBattery") == 0) 
			{
				ammo = CheckInventory("MiniHellRocketAmmo"), ammo2 = -1, weicon="PINHLSA", weaponname = "Revenant Missile Battery", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
				if(UpMissileBatteryJetThruster) upgrade = "jet thruster";
				if(UpMissileBatteryGuidedMissile) upgrade = "guided missiles";	
			}
			if(StrIcmp(weapon, "D4MancubusArm") == 0)          
			{
				ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Mancubus Arm", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
				if(UpFlammeCannonMK2) upgrade = "flamme-canon mk2";
			}
			if(StrIcmp(weapon, "D4MP40") == 0)	ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("D2KMP40Ammo"), weaponname = "MP 40", weicon="PINAIA", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 32;
			
			if(strICmp(weapon, "D4MeatShield") == 0)
			{
				ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "EMG Sidearm";
				if(UpPistolFastCharge) upgrade = "fast charge";
				if(UpPistolProtoGenerator) upgrade2 = "proto generator";	
			}

			// Dual Weapons
			if(strICmp(weapon, "D4Pistol") == 0 && CheckInventory("PistolDualWield"))
			{
				ammo = -1, ammo2 = -1, weicon = "INFIAA", weaponname = "Dual EMG Sidearms";
			}
			if(StrICmp(weapon, "D4Repeater") == 0 && CheckInventory("RepeaterDualWield"))
			{	
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Dual Burst Rifles", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
			}
			if(StrICmp(weapon, "D4HAR") == 0 && CheckInventory("HARDualWield"))
			{
				ammo = CheckInventory("D4Bullets"), ammo2 = -1, weicon="D4BUA0", weaponname = "Dual H.A.Rs", ammocapa = GetAmmoCapacity("D4Bullets"), clipsize = ammocapa;
				upgrade = "";
			}
			if(StrIcmp(weapon, "D4RocketLauncher") == 0 && CheckInventory("RocketLauncherDualWield"))       
			{
				ammo = CheckInventory("D4Rockets"), ammo2 = -1, weicon="D4MIA0", weaponname = "Dual Rocket Launchers", ammocapa = GetAmmoCapacity("D4Rockets"), clipsize = ammocapa;
				upgrade = "";
			}
			if(StrICmp(weapon, "D4SSG") == 0 && CheckInventory("SSGDualWield"))	ammo = CheckInventory("D4Shells"), ammo2 = CheckInventory("DualSSGAmmo"), weicon="D4SHA0", weaponname = "Dual Super Shotguns", ammocapa = GetAmmoCapacity("D4Shells"), clipsize = 4;
		  	if(StrIcmp(weapon, "D4DualMP40") == 0)	ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("D2KDualMP40Ammo"), weaponname = "Dual MP40s", weicon="PINAIA", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 64;

		//All weapons
		
			// Slot 2
		  if(strICmp(weapon, "Beretta") == 0)       	       ammo = CheckInventory("Magazine9mm"), ammo2 = CheckInventory("BerettaAmmo"), weaponname = "Beretta", weicon="PINAXA", ammocapa = GetAmmoCapacity("Magazine9mm"), clipsize = 16;
		  if(strICmp(weapon, "Glock18") == 0)       	       ammo = CheckInventory("GlockAmmo"), ammo2 = CheckInventory("GlockClip"), weaponname = "UAC Glock 18", weicon="PINAXA", ammocapa = GetAmmoCapacity("GlockClip"), clipsize = 17;
		  if(strICmp(weapon, "BrutalPistol") == 0)             ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDPistolAmmo"), weicon="PINADA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 16;
		  if(strICmp(weapon, "ClassicPistol") == 0)            ammo = CheckInventory("Clip2"),ammo2 = -1, weicon="PINADA", ammocapa = GetAmmoCapacity("Clip2"), weaponname = "Pistol", clipsize =ammocapa;
		  if(strICmp(weapon, "Pistol") == 0)          		   ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", ammocapa = GetAmmoCapacity("Clip"), weaponname = "Pistol", clipsize =ammocapa;
		  if(strICmp(weapon, "BD_Pistol") == 0)          	   ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", ammocapa = GetAmmoCapacity("Clip"), weaponname = "Pistol", clipsize =ammocapa;
		  if(strICmp(weapon, "Pistol~") == 0)          	   	   ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", ammocapa = GetAmmoCapacity("Clip"), weaponname = "Pistol", clipsize =ammocapa;
		  if(strICmp(weapon, "U_DualPistols") == 0)            ammo = CheckInventory("Magazine9mm"), ammo2 = CheckInventory("DualBerettaAmmo"), weicon="PINAXA", weaponname = "Pistols", ammocapa = GetAmmoCapacity("Magazine9mm"), clipsize = 32;
		  if(strICmp(weapon, "DualPistols") == 0)              ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDDualPistolAmmo"), weicon="PINADA", weaponname = "Pistols", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 32;
		  if(strICmp(weapon, "DualBeretta") == 0)              ammo = CheckInventory("Magazine9mm"), ammo2 = CheckInventory("DualBerettaAmmo"), weicon="PINAXA", weaponname = "Berettas", ammocapa = GetAmmoCapacity("Magazine9mm"), clipsize = 32;
		  if(strICmp(weapon, "TE_Revolver") == 0)       	   ammo = CheckInventory("TE_RevolverAmmo"), ammo2 = CheckInventory("RevolverBullets"), weicon="PINAMA", weaponname = "Revolver", ammocapa = GetAmmoCapacity("TE_RevolverAmmo"), clipsize = 6;
		  if(strICmp(weapon, "Revolver") == 0)       	       ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("RevolverAmmo"), weicon="PINAEA", weaponname = "Revolver", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 6;
		  if(strICmp(weapon, "Revolver2") == 0)       	       ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("RevolverAmmo"), weicon="PINADA", weaponname = "Revolver", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 6;
		  if(strICmp(weapon, "DualRevolver") == 0)       	   ammo = CheckInventory("RevolverBullets"), ammo2 = CheckInventory("DualRevolverAmmo"), weicon="PINAMA", weaponname = "Revolvers", ammocapa = GetAmmoCapacity("RevolverBullets"), clipsize = 12;
		  if(strICmp(weapon, "Battlehawk") == 0)       	   ammo = CheckInventory("DeagleAmmo"), ammo2 = CheckInventory("DeClip"), weicon="PINAMA", weaponname = ".50 AE UAC Battlehawk", ammocapa = GetAmmoCapacity("DeagleAmmo"), clipsize = 7;
		  if(strICmp(weapon, "PerkPistol") == 0)          	   ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "LDPistol") == 0)          	   ammo = CheckInventory("Clip"),ammo2 = -1, weicon="PINADA", weaponname = "Pistol", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;	
			//Slot 2 (SMG)
		  if(strICmp(weapon, "U_SMG") == 0)            	       ammo = CheckInventory("Magazine9mm"), ammo2 = CheckInventory("BDSMGAmmo"), weicon="PINAXA", weaponname = "SMG", ammocapa = GetAmmoCapacity("Magazine9mm"), clipsize = 40;
		  if(strICmp(weapon, "BrutalSMG") == 0)                ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDSMGAmmo"), weicon="PINADA", weaponname = "SMG", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 41;
		  if(strICmp(weapon, "DualUSMG") == 0)            	   ammo = CheckInventory("Magazine9mm"), ammo2 = CheckInventory("DualSMGAmmo"), weicon="PINAXA", weaponname = "Dual SMG", ammocapa = GetAmmoCapacity("Magazine9mm"), clipsize = 80;
		  if(strICmp(weapon, "CompactMG") == 0)                ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDCMGAmmo"), weicon="PINADA", weaponname = "SMG", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 36;		 
		  if(strICmp(weapon, "DualSMG") == 0)                  ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDDualSMGAmmo"), weicon="PINADA", weaponname = "Dual SMG", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 82;
		  if(StrICmp(weapon, "U_MP40") == 0)                   ammo = CheckInventory("Magazine9mm"), ammo2 = CheckInventory("MP40Ammo"), weicon="PINAXA", weaponname = "MP40", ammocapa = GetAmmoCapacity("Magazine9mm"), clipsize = 32;
		  if(StrICmp(weapon, "MP40") == 0)                     ammo = CheckInventory("Mauser9mm"), ammo2 = CheckInventory("MP40Ammo"), weicon="PINADA", weaponname = "MP40", ammocapa = GetAmmoCapacity("Mauser9mm"), clipsize = 32;
		  if(StrICmp(weapon, "DualMP40") == 0)                 ammo = CheckInventory("Mauser9mm"), ammo2 = CheckInventory("DualMP40Ammo"), weicon="PINAXA", weaponname = "Dual MP40", ammocapa = GetAmmoCapacity("Mauser9mm"), clipsize = 46;
		  if(strICmp(weapon, "ClassicSMG") == 0)               ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "SMG", ammocapa = GetAmmoCapacity("Clip2"), clipsize =ammocapa;
			//Slot 4
		  if(StrICmp(weapon, "U_Rifle") == 0)                  ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("rifleammo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 31;
		  if(StrICmp(weapon, "Rifle") == 0)                    ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("rifleammo"), weicon="PINADA", weaponname = "Rifle", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 31;
		  if(StrICmp(weapon, "AR36") == 0)                     ammo = CheckInventory("RifleAmmo"), ammo2 = CheckInventory("ARclip"), weicon="PINADA", weaponname = "UAC AR-36", ammocapa = GetAmmoCapacity("ARClip"), clipsize = 30;
		     if(StrICmp(weapon, "AutoCannon") == 0)                     ammo = CheckInventory("RifleAmmo"), ammo2 = -1, weicon="PINADA", weaponname = "UAC 20mm Devastator Autocannon", ammocapa = GetAmmoCapacity("RifleAmmo"), clipsize = ammocapa;
		    if(StrICmp(weapon, "TriCannon") == 0)                     ammo = CheckInventory("RifleAmmo"), ammo2 = -1, weicon="PINADA", weaponname = "UAC Eviscerator Tricannon", ammocapa = GetAmmoCapacity("RifleAmmo"), clipsize = ammocapa;
		  if(StrICmp(weapon, "U_MiniGun") == 0)                ammo = CheckInventory("MinigunAmmo"), ammo2 = -1, weicon="PINANA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("MinigunAmmo"), clipsize = ammocapa;
		  if(StrICmp(weapon, "MiniGun") == 0)                  ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
		  if(StrICmp(weapon, "DualURifle") == 0)               ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("DualRifleAmmo"), weicon="PINADA", weaponname = "Rifles", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 62;
		  if(StrICmp(weapon, "DualRifles") == 0)               ammo = CheckInventory("Clip2"), ammo2 = checkinventory("dOUBLERifleAmmo"), weicon="PINADA", weaponname = "Rifles", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 62;
		  if(StrICmp(weapon, "U_Machinegun") == 0)             ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("MachinegunAmmo"), weicon="PINADA", weaponname = "Machinegun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 60;
		  if(StrICmp(weapon, "Machinegun") == 0)               ammo = CheckInventory("Clip2"), ammo2 = -1, weicon="PINADA", weaponname = "Machinegun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
		  if(StrICmp(weapon, "ClassicChaingun") == 0)          ammo = CheckInventory("Clip2"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip2"), clipsize = ammocapa;
		  if(strICmp(weapon, "Chaingun") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "Z86Chaingun") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "Chaingun~") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "MiniGun~") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Minigun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "BD_Chaingun") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		  if(strICmp(weapon, "LDChaingun") == 0)          	   ammo = CheckInventory("Clip"), ammo2 = -1,weicon="PINADA", weaponname = "Chaingun", ammocapa = GetAmmoCapacity("Clip"), clipsize =ammocapa;
		    // Slot 3
		  if(StrICmp(weapon, "U_Shotgun") == 0)                ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("U_ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 8; 
		  if(StrICmp(weapon, "Shot_Gun") == 0)                 ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 10;  
		  if(StrICmp(weapon, "U_SSG") == 0)                    ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("SSGAmmo"), weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 2;
		  if(StrICmp(weapon, "Quad_Shotgun") == 0)             ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("QuadShotgunAmmo"), weicon="PINAEA", weaponname = "Quad Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 4;
		  if(StrICmp(weapon, "SSG") == 0)                      ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("SSGAmmo"), weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 2;
		  if(StrICmp(weapon, "AutoShotgun") == 0)       	   ammo = CheckInventory("GreenShell"), ammo2 = CheckInventory("M1014Ammo"), weicon="PINALA", weaponname = "Auto Shotgun", ammocapa = GetAmmoCapacity("GreenShell"), clipsize = 8;
		  if(StrICmp(weapon, "U_AssaultShotgun") == 0)         ammo = CheckInventory("GreenShell"), ammo2 = CheckInventory("AssaultShotgunAmmo"), weicon="PINALA", weaponname = "Assault Shotgun", ammocapa = GetAmmoCapacity("GreenShell"), clipsize = 20;
		  if(StrICmp(weapon, "AssaultShotgun") == 0)           ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("AssaultShotgunAmmo"), weicon="PINAEA", weaponname = "Assault Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 20;  
		  if(StrICmp(weapon, "ClassicShotgun") == 0)           ammo = CheckInventory("AmmoShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa; 
		  if(StrICmp(weapon, "ClassicSSG") == 0)               ammo = CheckInventory("AmmoShell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "Shotgun") == 0)          		   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  //Velanian Crisis Shell Weapons
		  if(strICmp(weapon, "UAC12") == 0)          	   ammo = CheckInventory("Shell2"), ammo2 = CheckInventory("UAC12Counter"), weicon="PINAEA", weaponname = "UAC-12 Tactical Shotgun", ammocapa = GetAmmoCapacity("Shell2"), clipsize = 8;
		  if(strICmp(weapon, "Demonsbane") == 0)          	   ammo = CheckInventory("Shell2"), ammo2 = -1, weicon="PINAEA", weaponname = "Demon's Bane Over and Under", ammocapa = GetAmmoCapacity("shell2"), clipsize = ammocapa;
		 
		  if(StrICmp(weapon, "Shot_Gun") == 0)                 ammo = CheckInventory("AmmoShell"), ammo2 = CheckInventory("ShotgunAmmo"), weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("AmmoShell"), clipsize = 10;  
				 
		 if(strICmp(weapon, "PerkShotgun") == 0)          	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "Shotgun~") == 0)          	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "BD_Shotgun") == 0)          	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "SuperShotgun") == 0)         	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "PerkSuperShotgun") == 0)         ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "SuperShotgun~") == 0)            ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "Quad-Shotgun") == 0)             ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Quad Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "BD_SuperShotgun") == 0)          ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "LDShotgun") == 0)          	   ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
		  if(strICmp(weapon, "LDSuperShotgun") == 0)           ammo = CheckInventory("Shell"), ammo2 = -1, weicon="PINAEA", weaponname = "Super Shotgun", ammocapa = GetAmmoCapacity("Shell"), clipsize =ammocapa;
   		   // Slot 5
		  if(StrIcmp(weapon, "U_RocketLauncher") == 0)         ammo = CheckInventory("AmmoRocket"), ammo2 = CheckInventory("U_RocketRounds"), weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = 6;
		  if(StrIcmp(weapon, "Rocket_Launcher") == 0)          ammo = CheckInventory("AmmoRocket"), ammo2 = CheckInventory("RocketRounds"), weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = 6;
		  if(StrIcmp(weapon, "U_GrenadeLauncher") == 0)        ammo = CheckInventory("AmmoRocket"), ammo2 = CheckInventory("GrenadeRounds"), weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = 1;
		  if(StrIcmp(weapon, "GrenadeLauncher") == 0)          ammo = CheckInventory("AmmoRocket"), ammo2 = -1, weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "ClassicRocketLauncher") == 0)    ammo = CheckInventory("AmmoRocket"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("AmmoRocket"), clipsize = ammocapa;
		  if(StrICmp(weapon, "SniperRifle") == 0)       	   ammo = CheckInventory("Clip2"), ammo2 = CheckInventory("SniperAmmo"), weicon="PINADA", weaponname = "Sniper Rifle", ammocapa = GetAmmoCapacity("Clip2"), clipsize = 5;
		  if(strICmp(weapon, "Annihilator") == 0)              ammo = CheckInventory("RocketAmmo2"), ammo2 = CheckInventory("AnnClip"), weicon="PINAGA", weaponname = "Annihilator Missile Launcher", ammocapa = GetAmmoCapacity("RocketAmmo2"), clipsize =4;
		  if(strICmp(weapon, "RocketLauncher") == 0)           ammo = CheckInventory("RocketAmmo2"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo2"), clipsize =ammocapa;
		  if(strICmp(weapon, "NEWRL") == 0)           ammo = CheckInventory("RocketAmmo2"), ammo2 = -1, weicon="PINAGA", weaponname = "UAC RPG-97 Mk. 2", ammocapa = GetAmmoCapacity("RocketAmmo2"), clipsize =ammocapa;
		  if(strICmp(weapon, "PerkRocketLauncher") == 0)       ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;
		  if(strICmp(weapon, "RocketLauncher~") == 0)          ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;
		  if(strICmp(weapon, "GrenadeLauncher~") == 0)         ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Grenade Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;
		  if(strICmp(weapon, "BD_RocketLauncher") == 0)        ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;
          if(strICmp(weapon, "LDRocketLauncher") == 0)         ammo = CheckInventory("RocketAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Rocket Launcher", ammocapa = GetAmmoCapacity("RocketAmmo"), clipsize =ammocapa;		  
		  if(strICmp(weapon, "NukeLauncher") == 0)             ammo = CheckInventory("Nuke"), ammo2 = -1, weicon="PBEXAM", weaponname = "Nuke Launcher", ammocapa = GetAmmoCapacity("Nuke"), clipsize = ammocapa;
		    //Slot 6 & 7
		  if(StrIcmp(weapon, "Plasma_Gun") == 0)               ammo = CheckInventory("AmmoCell"), ammo2 = CheckInventory("PlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = 50;
		  if(StrIcmp(weapon, "U_PlasmaRifle") == 0)            ammo = CheckInventory("AmmoCell"), ammo2 = CheckInventory("PlasmaRifleAmmo"), weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = 50;
		  if(StrIcmp(weapon, "PlasmaCaster2") == 0)            ammo = CheckInventory("Cell2"), ammo2 = CheckInventory("PCasterCooldownCounter"), weicon="PINAFA", weaponname = "UAC PLS35 MK2 Plasma Caster", ammocapa = GetAmmoCapacity("Cell2"), clipsize = 30;
		  if(StrIcmp(weapon, "PR97") == 0)            ammo = CheckInventory("Cell2"), ammo2 = CheckInventory("PR97CooldownCounter"), weicon="PINAFA", weaponname = "PR97 Plasma Defender", ammocapa = GetAmmoCapacity("Cell2"), clipsize = 30;
		  if(StrIcmp(weapon, "BIG_FUCKING_GUN") == 0)          ammo = CheckInventory("AmmoCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = ammocapa;
		  if(StrICmp(weapon, "DUalPlasmaRifles") == 0)         ammo = CheckInventory("AmmoCell"), ammo2 = checkinventory("DoublePlasmaAmmo"), weicon="PINAFA", weaponname = "Plasma Rifles", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = 100;
		  if(StrIcmp(weapon, "U_BFG10000") == 0)               ammo = CheckInventory("RailCore"), ammo2 = -1, weicon="PINAPA", weaponname = "BFG 10k", ammocapa = GetAmmoCapacity("RailCore"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "BFG10k") == 0)                   ammo = CheckInventory("AmmoCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 10k", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "BFG10k~") == 0)                  ammo = CheckInventory("Cell"), ammo2 = -1,weicon="PINAFA", weaponname = "BFG 10k", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "U_Railgun") == 0)                ammo = CheckInventory("RailCore"), ammo2 = CheckInventory("RailAmmo"), weicon="PINAPA", weaponname = "Railgun", ammocapa = GetAmmoCapacity("RailCore"), clipsize = 8;
		  if(StrIcmp(weapon, "BFL10k2") == 0)                   ammo = CheckInventory("Cell2"), ammo2 = -1, weicon="PINAFA", weaponname = "BFL 10k Photonic Megacannon", ammocapa = GetAmmoCapacity("Cell2"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "RailGun") == 0)                  ammo = CheckInventory("AmmoCell"), ammo2 = CheckInventory("RailgunAmmo"), weicon="PINAFA", weaponname = "Sonic Railgun", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = 50;
		  if(StrIcmp(weapon, "Sonic Railgun") == 0)            ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  //HardDoom
		  if(StrIcmp(weapon, "ClassicPlasmaRifle") == 0)       ammo = CheckInventory("AmmoCell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "U_BFG9000") == 0)          	   ammo = CheckInventory("AmmoCell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = ammocapa;		  		   
		  if(strICmp(weapon, "BloxPlasmaRifle") == 0)          ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "PlasmaRifle~") == 0)             ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "PlasmaRifle") == 0)              ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "BD_PlasmaRifle") == 0)           ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "BFG9000~") == 0)          	   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "BFG9000") == 0)          		   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "VanillaBFG9000") == 0)           ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "Z86BFG9000") == 0)          	   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "BD_BFG9000") == 0)          	   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "LDPlasmaRifle") == 0)            ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "Plasma Rifle", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
		  if(strICmp(weapon, "LDBFG9000") == 0)          	   ammo = CheckInventory("Cell"), ammo2 = -1, weicon="PINAFA", weaponname = "BFG 9000", ammocapa = GetAmmoCapacity("Cell"), clipsize = ammocapa;
 		  if(StrIcmp(weapon, "CatsFreezer") == 0)              ammo = CheckInventory("AmmoCell"), ammo2 = CheckInventory("FreezerAmmo"), weicon="PINAFA", weaponname = "Freezer", ammocapa = GetAmmoCapacity("AmmoCell"), clipsize = 50;
		  
		  //Slot 8
		  if(StrIcmp(weapon, "U_FlameCannon") == 0)            ammo = CheckInventory("Gasoline"),ammo2 = -1, weicon="PINGASA", weaponname = "Flame Cannon", ammocapa = GetAmmoCapacity("Gasoline"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "FlameCannon") == 0)              ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Flame Cannon", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "Flamethrower2") == 0)            ammo = CheckInventory("Gas"), ammo2 = -1, weicon="PINGASA", weaponname = "Flame Thrower", ammocapa = GetAmmoCapacity("Gas"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "U_HellishMissileLauncher") == 0) ammo = CheckInventory("HellRocketAmmo"), ammo2 = -1, weicon="PINHLSA", weaponname = "Hellish Missile Launcher", ammocapa = GetAmmoCapacity("HellRocketAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HellishMissileLauncher") == 0)   ammo = CheckInventory("MiniHellRocketAmmo"),ammo2 = -1, weicon="PINHLSA", weaponname = "Hellish Missile Launcher", ammocapa = GetAmmoCapacity("MiniHellRocketAmmo"), clipsize = ammocapa;
		    //Slot 9
		  if(strICmp(weapon, "RiotShield") == 0)           	   ammo = CheckInventory("Clip1"), ammo2 = CheckInventory("BDPistolAmmo"), weicon="PINADA", weaponname = "Pistol + Shield", ammocapa = GetAmmoCapacity("Clip1"), clipsize = 16;
		  if(StrIcmp(weapon, "U_HandGrenades") == 0)           ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "GCDAXA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HandGrenades") == 0)             ammo = CheckInventory("GrenadeAmmo"), ammo2 = -1, weicon = "GCDAXA", weaponname = "Grenades", ammocapa = GetAmmoCapacity("GrenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "HandFreezebot") == 0)            ammo = CheckInventory("FreezebotAmmo"), ammo2 = -1, weicon = "FZBAA0", weaponname = "Freezebot", ammocapa = GetAmmoCapacity("FreezebotAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "Freezenades") == 0)              ammo = CheckInventory("FreezenadeAmmo"), ammo2 = -1, weicon = "FZBAB0", weaponname = "Freezenades", ammocapa = GetAmmoCapacity("FreezenadeAmmo"), clipsize = ammocapa;
		  if(StrIcmp(weapon, "C4Weapon") == 0)         		   ammo = CheckInventory("C4Ammo"), ammo2 = -1, weicon = "PIC4NA", weaponname = "C4 Charges", ammocapa = GetAmmoCapacity("C4Ammo"), clipsize = ammocapa;
		    //Slot 1
		  if(strICmp(weapon, "Chain_saw") ==0)                 ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "U_Chainsaw") ==0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "ClassicModernSaw") ==0)          ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrIcmp(weapon, "Melee_Attacks") == 0)            ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrIcmp(weapon, "BrutalAxe") == 0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(StrIcmp(weapon, "ClassicFist") == 0)              ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "ClassicSaw") ==0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "Chainsaw") ==0)                  ammo = -1, ammo2 = -1, weicon = "PINGASA", weaponname = "";
		  if(strICmp(weapon, "Chainsaw~") ==0)                 ammo = -1, ammo2 = -1, weicon = "PINGASA", weaponname = "";
		  if(strICmp(weapon, "BD_Chainsaw") ==0)               ammo = -1, ammo2 = -1, weicon = "PINGASA", weaponname = "";
		  if(strICmp(weapon, "Fist") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "Knife") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "KNIFAA", weaponname = "";
		  if(strICmp(weapon, "Fist~") ==0)                 	   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "BD_Fist") ==0)                   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "D4BARONHUD") ==0)                ammo = -1, ammo2 = -1, weicon = "DERUA00", weaponname = "";
		  if(strICmp(weapon, "D4REVENANTHUD") ==0)             ammo = -1, ammo2 = -1, weicon = "DERUA00", weaponname = "";
		  if(strICmp(weapon, "LDFists") ==0)                   ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "LDChainsaw") ==0)                ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
		  if(strICmp(weapon, "DSweap") ==0)            	       ammo = -1, ammo2 = -1, weicon = "NONEA", weaponname = "";
			
		  if(StrICmp(weapon, "ImpShield") == 0)                ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "ZMANShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "SguyShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "CguyShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "NaziShield") == 0)               ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "EvilMarineShield") == 0)         ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;
		  if(StrICmp(weapon, "ZombieCivilianShield") == 0)     ammo = CheckInventory("BDPistolAmmo"), ammo2 = CheckInventory("MeatAmmo"), weicon="PINADA", weaponname = "Pistol",ammocapa = GetAmmoCapacity("BDPistolAmmo"), clipsize = 16;

		  if(StrICmp(weapon, "U_HitlersBuzzsaw") == 0)         ammo = CheckInventory("BuzzsawAmmoz"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", clipsize = ammocapa;
		  if(StrICmp(weapon, "HitlersBuzzsaw") == 0)           ammo = CheckInventory("BuzzsawAmmo"), ammo2 = -1, weicon="PINAIA", weaponname = "Hitler's Buzzsaw", clipsize = ammocapa;
		  
		  if(StrIcmp(weapon, "U_Unmaker") == 0)                ammo = CheckInventory("U_SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("U_SoulAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "Unmaker") == 0)                  ammo = CheckInventory("SoulAmmo"), ammo2 = -1, weicon="PINAKA", weaponname = "The Unmaker", ammocapa = GetAmmoCapacity("SoulAmmo"),clipsize = ammocapa;
		  
			if(StrIcmp(weapon, "TankGun") == 0)                ammo = CheckInventory("TankAmmo"), ammo2 = -1, weicon="PINAGA", weaponname = "Tank", ammocapa = GetAmmoCapacity("TankAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "ArtilleryTankGun") == 0)       ammo = CheckInventory("HeavyMachinegunAmmo"), ammo2 = -1, weicon="PINANA", weaponname = "ArtilleryTank", ammocapa = GetAmmoCapacity("HeavyMachinegunAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "MechGun") == 0)                ammo = -1, ammo2 = -1, weicon="NONEA", weaponname = "Mech";
		  if(StrIcmp(weapon, "attackhelicopterGun") == 0)    ammo = CheckInventory("HeavyMachinegunAmmo"), ammo2 = -1, weicon="PINANA", weaponname = "Helicopter", ammocapa = GetAmmoCapacity("HeavyMachinegunAmmo"),clipsize = ammocapa;
		  if(StrIcmp(weapon, "BikeHUD") == 0)               	 ammo = -1, ammo2 = -1, weicon="NONEA", weaponname = "Bike";	  
		  if(StrIcmp(weapon, "HeavyMachinegunHUD") == 0)    ammo = CheckInventory("HeavyMachinegunAmmo"), ammo2 = -1, weicon="PINANA", weaponname = "HeavyMachineGun", ammocapa = GetAmmoCapacity("HeavyMachinegunAmmo"),clipsize = ammocapa;
		 
		  
		  if(ammocapa != 0)
		  {
		 	ammorate = ((FixedMul(100.000,(FixedDiv (ammo, ammocapa))))>> 16);
		  }
		  if(clipsize != 0)
		  {
		 	ammorate2 = ((FixedMul(100.000,(FixedDiv (ammo2, clipsize))))>> 16);
		  }
		}
		//XV117's D4 arsenal upgrade 
		if (IsPlayingD4Arsenal | IsPlayingD4TCSE)
		{
		if (!extcam && !MorphedPlayer)
		    {	
	      	SetFont("UDVSMALL");
	 		}
		else SetFont("Blank");	
		SetHudSize((x_font_res),(y_font_res),0);
		HudMessage(s:upgrade; HUDMSG_ALPHA, 9666669, CR_yellow, (FixedMul(((x - offset) + 0.460),(x_font_res)<<16)>>16<<16), (FixedMul((y + 0.300),(y_font_res)<<16)>>16<<16), 0.01, 0.35);
		HudMessage(s:upgrade2; HUDMSG_ALPHA, 9666668, CR_yellow, (FixedMul(((x - offset) + 0.460),(x_font_res)<<16)>>16<<16), (FixedMul((y + 0.320),(y_font_res)<<16)>>16<<16), 0.01, 0.35);
		SetHudSize(xres,yres,0);	  					
		}
		
		//XV117's D4 arsenal UpgradeBoxes counter
		
		if (IsPlayingD4Arsenal)
		{
		if (!extcam && !MorphedPlayer && UpgradeBoxes != 0)
		    {	
	      	SetFont("UDVSMALL");
	 		}
		else SetFont("Blank");
			if(CatV_StatsMini)
			{
				SetHudSize((x_font_res),(y_font_res),0);
				HudMessage(s:"Upgrade points : ", i:UpgradeBoxes; HUDMSG_ALPHA, 9666679, CR_yellow, (FixedMul(((x - offset) + 0.570),(x_font_res)<<16)>>16<<16), (FixedMul((y - 0.280),(y_font_res)<<16)>>16<<16), 0.01, 0.35);
				SetHudSize(xres,yres,0);
			}
			else
			{
				SetHudSize((x_font_res),(y_font_res),0);
				HudMessage(s:"Upgrade points : ", i:UpgradeBoxes; HUDMSG_ALPHA, 9666679, CR_yellow, (FixedMul(((x - offset) + 0.570),(x_font_res)<<16)>>16<<16), (FixedMul((y - 0.140),(y_font_res)<<16)>>16<<16), 0.01, 0.35);
				SetHudSize(xres,yres,0);
			}
		}
		 //XV117's D4 Arsenal Mod Timer
		 if(maxcooldown != 0)
		  {
		 	cooldownrate = ((FixedMul(100.000,(FixedDiv (modcooldown, maxcooldown))))>> 16);
		  }

		if (IsPlayingD4Arsenal | IsPlayingD4TCSE)
			{
				if (!extcam && !MorphedPlayer)
				{
				if((ModHasStunBomb && CheckWeapon("D4PlasmaRifle")) | (UpHellshotAltFire && CheckWeapon("D4Hellshot")) | (UpGrenadeLaucherAltFire && CheckWeapon("D4GrenadeLauncher")) | (ModHasTriShot && CheckWeapon("D4Shotgun")) | (ModHasExplosiveShot && CheckWeapon("D4Shotgun")))
				{
					if(cooldownrate >= 96) SetFont("D4TIMERP");
					if(cooldownrate <= 95 && cooldownrate >= 90) SetFont("D4TIMERP");
					if(cooldownrate <= 89 && cooldownrate >= 85) SetFont("D4TIMERO");
					if(cooldownrate <= 84 && cooldownrate >= 80) SetFont("D4TIMERN");
					if(cooldownrate <= 79 && cooldownrate >= 75) SetFont("D4TIMERM");
					if(cooldownrate <= 74 && cooldownrate >= 70) SetFont("D4TIMERL");
					if(cooldownrate <= 69 && cooldownrate >= 65) SetFont("D4TIMERK");
					if(cooldownrate <= 64 && cooldownrate >= 60) SetFont("D4TIMERJ");
					if(cooldownrate <= 59 && cooldownrate >= 55) SetFont("D4TIMERI");
					if(cooldownrate <= 54 && cooldownrate >= 50) SetFont("D4TIMERH");
					if(cooldownrate <= 49 && cooldownrate >= 45) SetFont("D4TIMERG");
					if(cooldownrate <= 44 && cooldownrate >= 40) SetFont("D4TIMERF");
					if(cooldownrate <= 39 && cooldownrate >= 35) SetFont("D4TIMERE");
					if(cooldownrate <= 34 && cooldownrate >= 30) SetFont("D4TIMERD");
					if(cooldownrate <= 29 && cooldownrate >= 25) SetFont("D4TIMERC");
					if(cooldownrate <= 24 && cooldownrate >= 20) SetFont("D4TIMERB");
					if(cooldownrate <= 19 && cooldownrate >= 15) SetFont("D4TIMERA");
					if(cooldownrate <= 14 && cooldownrate >= 10) SetFont("D4TIMERX");
					if(cooldownrate <= 9 && cooldownrate >= 5) SetFont("D4TIMERY");
					if(cooldownrate <= 4 && cooldownrate >= 1) SetFont("D4TIMERW");
					if(cooldownrate == 0) SetFont("D4TIMERZ");
				}
				else SetFont("BLANK");	
				}
				else SetFont("BLANK");					
	 	        HudMessage(s:"A"; HUDMSG_ALPHA, 9666689, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.530),xres<<16)>>16<<16), (FixedMul((y + 0.300),yres<<16)>>16<<16),0.2, 0.40);	
			}
			
		//Armortype
		if (!extcam && !MorphedPlayer && CatV_ArmTyp)
		    {	
	      	SetFont("UDVSMALL");
	 		}
		else SetFont("Blank");
			{
			if (!CatV_HPBottom)
			  {
				SetHudSize(x_font_res,y_font_res,0);
				HudMessage(s:armortype2; HUDMSG_ALPHA, 9999999, CR_lightblue, (FixedMul(((x + offset) - 0.525),x_font_res<<16)>>16<<16), (FixedMul((y + 0.120),y_font_res<<16)>>16<<16), 0.01, 0.35);
				SetHudSize(xres,yres,0);
			  } 
			else
			  {
				SetHudSize((x_font_res),(y_font_res),0);
				HudMessage(s:armortype2; HUDMSG_ALPHA, 9999999, CR_lightblue, (FixedMul(((x + offset) - 0.560),(x_font_res)<<16)>>16<<16), (FixedMul((y + 0.195),(y_font_res)<<16)>>16<<16), 0.01, 0.35);
				SetHudSize(xres,yres,0);
			  }
			
			}
			
		//PlayerClass Name
		 /* if (!extcam && !MorphedPlayer)
		    {	
	      	SetFont("UDVSMALL");
	 		}
		else SetFont("Blank");
			{
			SetHudSize(x_font_res,y_font_res,0);
			HudMessage(s:PlClass; HUDMSG_ALPHA, 9191919, CR_lightblue, (FixedMul(((x + offset) - 0.525),x_font_res<<16)>>16<<16), (FixedMul((y + 0.090),y_font_res<<16)>>16<<16), 0.01, 0.35);
			SetHudSize(xres,yres,0);
			}  */
			
		//Weapon Name
		if (!extcam && !MorphedPlayer && CatV_WeaNam)
		    {	
	      	SetFont("UDVSMALL");
	 		}
		else SetFont("Blank");
			{
				if(ammo2 == -1)
				{
					SetHudSize(x_font_res,y_font_res,0);
					HudMessage(s:weaponname; HUDMSG_ALPHA, 9999998, CR_red, (FixedMul(((x - offset) + 0.430),x_font_res<<16)>>16<<16), (FixedMul((y + 0.222),y_font_res<<16)>>16<<16), 0.01, 0.35);
					SetHudSize(xres,yres,0);
				}
				else
				{
					SetHudSize(x_font_res,y_font_res,0);
					HudMessage(s:weaponname; HUDMSG_ALPHA, 9999998, CR_red, (FixedMul(((x - offset) + 0.455),x_font_res<<16)>>16<<16), (FixedMul((y + 0.200),y_font_res<<16)>>16<<16), 0.01, 0.35);
					SetHudSize(xres,yres,0);
				}
			}
			
		 //Weapons number indicators
		 
		 //MachineGunGrenadeIndicator
		if ((CheckWeapon("U_Machinegun") | CheckWeapon("Machinegun")) && !extcam && !MorphedPlayer)
			{
			if(CatV_Altabar)
			{
				if(CheckInventory("FiredMGGrenade"))
				{
					SetFont("TEMGOff1");
					HudMessage(s:"A"; HUDMSG_ALPHA, 9999969, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.359),xres<<16)>>16<<16), (FixedMul((y + 0.262),yres<<16)>>16<<16),0.2, 0.80);
				} 
				else
				{
					SetFont("TEMGOn1");
					HudMessage(s:"A"; HUDMSG_ALPHA, 9999969, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.359),xres<<16)>>16<<16), (FixedMul((y + 0.262),yres<<16)>>16<<16),0.2, 0.80);
				}
			}
			else
			{
				if(CheckInventory("FiredMGGrenade"))
				{
					SetFont("TEMGOff1");
					HudMessage(s:"A"; HUDMSG_ALPHA, 9999969, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.280),xres<<16)>>16<<16), (FixedMul((y + 0.258),yres<<16)>>16<<16),0.2, 0.80);
				} 
				else
				{
					SetFont("TEMGOn1");
					HudMessage(s:"A"; HUDMSG_ALPHA, 9999969, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.280),xres<<16)>>16<<16), (FixedMul((y + 0.258),yres<<16)>>16<<16),0.2, 0.80);
				}
			}
			}
		else
			{
				SetFont("BLANK");
				HudMessage(s:"A"; HUDMSG_ALPHA, 9999969, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.355),xres<<16)>>16<<16), (FixedMul((y + 0.262),yres<<16)>>16<<16),0.2, 0.80);
			}
		
		 // Ammo and grenades indicators
		if(CheckInventory("IsPlayingAsProjectBrutality")) // PB 3.0
		{
		 grenade = CheckInventory("HandGrenadeAmmo");
		}
		else if(CheckInventory("Melee") | CheckInventory("NewMelee")) //complex
		{
		 grenade = CheckInventory("HandGrenadeAmmo");
		}
		else
		{
		 grenade = CheckInventory("GrenadeAmmo");
		}
		 C4ammo = CheckInventory("C4Ammo");	
		 
		 //Melee
		if (!extcam && !MorphedPlayer)
		{
		 if (ammo2 == -1 & ammo == -1)
		 {
		 SetFont("BLANK");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644463, CR_red, (FixedMul(((x - offset) + 0.530),xres<<16)>>16<<16), (FixedMul((y + 0.235),yres<<16)>>16<<16), 0.01, 0.55);		 
		 if (CatV_AmmIco) SetFont(weicon);
		 else SetFont("blank");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644464, CR_untranslated, (FixedMul(((x - offset) + 0.580),xres<<16)>>16<<16), (FixedMul((y + 0.265),yres<<16)>>16<<16), 0.01, 0.60);		  
		 SetFont("BLANK");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644466, CR_red, (FixedMul(((x - offset) + 0.520),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.55);		  
		 }
		 //Guns with reload
		 if (ammo2 != -1 & ammo != -1)
		 {
		 SetFont("AMMOFONT");
		 HudMessage(i:ammo2; HUDMSG_ALPHA, 1644463, CR_red, (FixedMul(((x - offset) + 0.530),xres<<16)>>16<<16), (FixedMul((y + 0.235),yres<<16)>>16<<16), 0.01, 0.55);		 
		 if (CatV_AmmIco) SetFont(weicon);
		 else SetFont("blank");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644464, CR_untranslated, (FixedMul(((x - offset) + 0.580),xres<<16)>>16<<16), (FixedMul((y + 0.265),yres<<16)>>16<<16), 0.01, 0.60);		  
		 SetFont("AMMOFONT");
		 HudMessage(i:ammo; HUDMSG_ALPHA, 1644466, CR_red, (FixedMul(((x - offset) + 0.520),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.55);		  
		 }
		  //Guns without reload
		 if (ammo2 == -1 & ammo != -1)
		 {
		 SetFont("BLANK");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644463, CR_red, (FixedMul(((x - offset) + 0.530),xres<<16)>>16<<16), (FixedMul((y + 0.235),yres<<16)>>16<<16), 0.01, 0.55);		 
		 if (CatV_AmmIco) SetFont(weicon);
		 else SetFont("blank");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644464, CR_untranslated, (FixedMul(((x - offset) + 0.580),xres<<16)>>16<<16), (FixedMul((y + 0.265),yres<<16)>>16<<16), 0.01, 0.60);		  
		 SetFont("AMMOFONT");
		 HudMessage(i:ammo; HUDMSG_ALPHA, 1644466, CR_red, (FixedMul(((x - offset) + 0.520),xres<<16)>>16<<16), (FixedMul((y + 0.260),yres<<16)>>16<<16), 0.01, 0.55);		  
		 }
		 //Grenades
		 if (grenade != 0)
		 {	
			SetFont("UDVSMALL");
		    SetHudSize(x_font_res,y_font_res,0);
			HudMessage(i:grenade; HUDMSG_ALPHA, 1644467, CR_red, (FixedMul(((x - offset) + 0.603),x_font_res<<16)>>16<<16), (FixedMul((y + 0.182),y_font_res<<16)>>16<<16), 0.01, 0.45);		 
			SetHudSize(xres,yres,0);
			SetFont("GRINDIC");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644469, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y + 0.185),yres<<16)>>16<<16), 0.01, 0.60);	
		 }
		 if (grenade == 0)
		 {	
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644467, CR_red, (FixedMul(((x - offset) + 0.610),xres<<16)>>16<<16), (FixedMul((y + 0.185),yres<<16)>>16<<16), 0.01, 0.45);		 
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644469, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y + 0.180),yres<<16)>>16<<16), 0.01, 0.45);	
		 }
		 //C4
		 if (c4ammo != 0)
		 {	
			SetFont("UDVSMALL");
		    SetHudSize(x_font_res,y_font_res,0);
			HudMessage(i:C4ammo; HUDMSG_ALPHA, 1644468, CR_red, (FixedMul(((x - offset) + 0.623),x_font_res<<16)>>16<<16), (FixedMul((y + 0.137),y_font_res<<16)>>16<<16), 0.01, 0.45);	 
			SetHudSize(xres,yres,0);
			SetFont("C4INDIC");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644470, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.580),xres<<16)>>16<<16), (FixedMul((y + 0.140),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 if (c4ammo == 0)
		 {	
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644468, CR_red, (FixedMul(((x - offset) + 0.610),xres<<16)>>16<<16), (FixedMul((y + 0.180),yres<<16)>>16<<16), 0.01, 0.45);		 
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644470, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y + 0.180),yres<<16)>>16<<16), 0.01, 0.45);	
		 }
		}
		else
		{
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644467, CR_red, (FixedMul(((x - offset) + 0.610),xres<<16)>>16<<16), (FixedMul((y + 0.185),yres<<16)>>16<<16), 0.01, 0.45);		 
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644469, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y + 0.180),yres<<16)>>16<<16), 0.01, 0.45);	
		    SetFont("BLANK");
		    HudMessage(s:"A"; HUDMSG_ALPHA, 1644463, CR_red, (FixedMul(((x - offset) + 0.530),xres<<16)>>16<<16), (FixedMul((y + 0.235),yres<<16)>>16<<16), 0.01, 0.55);		 
		    SetFont("BLANK");
		    HudMessage(s:"A"; HUDMSG_ALPHA, 1644464, CR_untranslated, (FixedMul(((x - offset) + 0.580),xres<<16)>>16<<16), (FixedMul((y + 0.265),yres<<16)>>16<<16), 0.01, 0.60);		  
		    SetFont("BLANK");
		    HudMessage(i:ammo; HUDMSG_ALPHA, 1644466, CR_red, (FixedMul(((x - offset) + 0.520),xres<<16)>>16<<16), (FixedMul((y + 0.260),yres<<16)>>16<<16), 0.01, 0.55);		  
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644468, CR_red, (FixedMul(((x - offset) + 0.610),xres<<16)>>16<<16), (FixedMul((y + 0.180),yres<<16)>>16<<16), 0.01, 0.45);		 
			SetFont("BLANK");
			HudMessage(s:"A"; HUDMSG_ALPHA, 1644470, CR_UNTRANSLATED, (FixedMul(((x - offset) + 0.560),xres<<16)>>16<<16), (FixedMul((y + 0.180),yres<<16)>>16<<16), 0.01, 0.45);	
		}
		 
		 // Ammo counters
		 //Pistol
		  if(strICmp(PlClass, "BDoomer") == 0 | strICmp(PlClass, "TacticalDoomer") == 0)
		  {
		  Pclip = CheckInventory("Clip1");
		  clip = CheckInventory("Clip2");
		  shell = CheckInventory("AmmoShell");
		  rocket = CheckInventory("AmmoRocket");
		  cell = CheckInventory("AmmoCell");
		  gas = CheckInventory("Gas");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  BuzzAm = CheckInventory("BuzzsawAmmo");
		  SoulAmmo = CheckInventory("SoulAmmo");
		  }
		  else if(strICmp(PlClass, "Doomer2") == 0)
		  {
		  Pclip = CheckInventory("Clip1");
		  clip = CheckInventory("Clip2");
		  shell = CheckInventory("AmmoShell");
		  rocket = CheckInventory("AmmoRocket");
		  cell = CheckInventory("AmmoCell");
		  gas = CheckInventory("Gas");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  BuzzAm = CheckInventory("BuzzsawAmmo");
		  SoulAmmo = CheckInventory("SoulAmmo");
		  }
		  else if(strICmp(PlClass, "BEDoomer") == 0)
		  {
		  Pclip = CheckInventory("PistolBullets");
		  clip = CheckInventory("RifleClip");
		  shell = CheckInventory("Shell2");
		  revolverbullets = CheckInventory("RevolverBullets");
		  rocket = CheckInventory("AmmoRocket");
		  cell = CheckInventory("AmmoCell");
		  gas = CheckInventory("Gasoline");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  SoulAmmo = CheckInventory("U_SoulAmmo");
		  }
		  else if(strICmp(PlClass, "Doomer3") == 0)
		  {
		  Pclip = CheckInventory("Magazine9mm");
		  clip = CheckInventory("Clip2");
		  shell = CheckInventory("AmmoShell");
		  rocket = CheckInventory("AmmoRocket");
		  cell = CheckInventory("AmmoCell");
		  revolverbullets = CheckInventory("RevolverBullets");
		  minigunammo = CheckInventory("MinigunAmmo");
		  railcore = CheckInventory("RailCore");
		  greenshell = CheckInventory("GreenShell");
		  gas = CheckInventory("Gas");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  }
		  else if(CheckInventory("Melee") | CheckInventory("NewMelee")) 
		  {
		  Pclip = CheckInventory("BulletMag");
		  shell = CheckInventory("NewShell");
		  rocket = CheckInventory("Missile");
		  cell = CheckInventory("NewCell");
		  Soulammo = CheckInventory("DemonAmmo");
		  gas = CheckInventory("Gas");
		  
		  }
		  else if(CheckInventory("PerkFist")) 
		  {
		  clip = CheckInventory("NewClip");
		  shell = CheckInventory("NewShell");
		  cell = CheckInventory("NewCell");
		  rocket = CheckInventory("NewRocketAmmo");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  }
		  else if(CheckInventory("IsPlayingAsProjectBrutality")) 
		  {
		  Pclip = CheckInventory("PistolBullets");
		  clip = CheckInventory("NewClip");
		  shell = CheckInventory("NewShell");
		  cell = CheckInventory("Cell");
		  railcore = CheckInventory("RailCore");
		  rocket = CheckInventory("RocketAmmo");
		  gas = CheckInventory("Gas");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  BuzzAm = CheckInventory("BuzzsawAmmo");
		  SoulAmmo = CheckInventory("SoulAmmo");
		  }
		  else if(CheckInventory("D4DFist"))
		  {
		  clip = CheckInventory("D4Bullets");
		  shell = CheckInventory("D4Shells");
		  cell = CheckInventory("D4Cells");
		  rocket = CheckInventory("D4Rockets");
		  }
		  else if(strICmp(PlClass, "SaturnPlayer") == 0)
		  {
		  Pclip = CheckInventory("Clip");
		  clip = CheckInventory("RifleAmmo");
		  shell = CheckInventory("Shell");
		  rocket = CheckInventory("RocketAmmo");
		  cell = CheckInventory("Cell");
		  revolverbullets = CheckInventory("Bullets");
		  minigunammo = CheckInventory("Nato");
		  }
		  else if(strICmp(PlClass, "CyberMarine") == 0)
		  {
		  Pclip = CheckInventory("Clip");
		  clip = CheckInventory("RifleAmmo");
		  shell = CheckInventory("Shell");
		  rocket = CheckInventory("RocketAmmo");
		  cell = CheckInventory("Cell");
		  revolverbullets = CheckInventory("Bullets");
		  minigunammo = CheckInventory("Nato");
		  }
		  else if(strICmp(PlClass, "CombatVeteran") == 0)
		  {
		  Pclip = CheckInventory("Clip");
		  clip = CheckInventory("RifleAmmo");
		  shell = CheckInventory("Shell");
		  rocket = CheckInventory("RocketAmmo");
		  cell = CheckInventory("Cell");
		  revolverbullets = CheckInventory("Bullets");
		  minigunammo = CheckInventory("Nato");
		  }
		  else if(strICmp(PlClass, "AcrobatPlayer") == 0)
		  {
		  Pclip = CheckInventory("Clip");
		  clip = CheckInventory("RifleAmmo");
		  shell = CheckInventory("Shell");
		  rocket = CheckInventory("RocketAmmo");
		  cell = CheckInventory("Cell");
		  revolverbullets = CheckInventory("Bullets");
		  minigunammo = CheckInventory("Nato");
		  }
		   else if(strICmp(PlClass, "TankPlayer") == 0)
		  {
		  Pclip = CheckInventory("Clip");
		  clip = CheckInventory("RifleAmmo");
		  shell = CheckInventory("Shell");
		  rocket = CheckInventory("RocketAmmo");
		  cell = CheckInventory("Cell");
		  revolverbullets = CheckInventory("Bullets");
		  minigunammo = CheckInventory("Nato");
		  }
		  else if(CheckInventory("FDPlutFist"))
		  {
		  clip = CheckInventory("FDPlutBullets");
		  shell = CheckInventory("FDPlutShells");
		  cell = CheckInventory("FDPlutCell");
		  rocket = CheckInventory("FDPlutRocket");
		  railcore = CheckInventory("FDPlutBFGCharge");
		  }
		  else if(CheckInventory("FDTNTFist"))
		  {
		  clip = CheckInventory("FDTNTBullets");
		  shell = CheckInventory("FDTNTShells");
		  cell = CheckInventory("FDTNTCell");
		  rocket = CheckInventory("FDTNTRocket");
		  railcore = CheckInventory("FDTNTBFGCharge");
		  }
		  else if(CheckInventory("FDDoom2Fist"))
		  {
		  clip = CheckInventory("FDDoom2Bullets");
		  shell = CheckInventory("FDDoom2Shells");
		  cell = CheckInventory("FDDoom2Cell");
		  rocket = CheckInventory("FDDoom2Rocket");
		  railcore = CheckInventory("FDDoom2BFGCharge");
		  }
		  else if(CheckInventory("FDAliensFist"))
		  {
		  clip = CheckInventory("FDAliensBullets");
		  shell = CheckInventory("FDAliensShells");
		  cell = CheckInventory("FDAliensCell");
		  rocket = CheckInventory("FDAliensRocket");
		  railcore = CheckInventory("FDAliensBFGCharge");
		  }
		  else if(CheckInventory("FDJPCPFist"))
		  {
		  clip = CheckInventory("FDJPCPBullets");
		  shell = CheckInventory("FDJPCPShells");
		  cell = CheckInventory("FDJPCPCell");
		  rocket = CheckInventory("FDJPCPRocket");
		  railcore = CheckInventory("FDJPCPBFGCharge");
		  }
		  else if(CheckInventory("FDBTSXFist"))
		  {
		  clip = CheckInventory("FDBTSXBullets");
		  shell = CheckInventory("FDBTSXShells");
		  cell = CheckInventory("FDBTSXCell");
		  rocket = CheckInventory("FDBTSXRocket");
		  railcore = CheckInventory("FDBTSXBFGCharge");
		  }
		  else
		  {
		  Pclip = CheckInventory("clip");
		  clip = CheckInventory("Clip2");
		  shell = CheckInventory("Shell");
		  rocket = CheckInventory("RocketAmmo");
		  cell = CheckInventory("Cell");
		  gas = CheckInventory("Gas");
		  hellish = CheckInventory("MiniHellRocketAmmo");
		  BuzzAm = CheckInventory("BuzzsawAmmo");
		  SoulAmmo = CheckInventory("SoulAmmo");
		  }
		if (!extcam && !MorphedPlayer && CatV_AmmoC)
		{
		 if (railcore != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:railcore; HUDMSG_ALPHA, 17000096, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y - 0.120),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNAR");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000196, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.121),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		  {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000096, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.120),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000196, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.120),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		 if (minigunammo != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);		  		
		  HudMessage(i:minigunammo; HUDMSG_ALPHA, 17000097, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y - 0.100),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNAN");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000197, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.101),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		  {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000097, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000197, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		 }			 
		 if (greenshell != 0)
		 {
		  SetFont("UDVSMALL");	
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:greenshell; HUDMSG_ALPHA, 17000098, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y - 0.080),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNAG");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000198, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.081),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		  {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000098, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000198, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		 }		   	  
		 if (revolverbullets != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:revolverbullets; HUDMSG_ALPHA, 17000099, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y - 0.060),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNAE");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000199, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.061),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		  {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000099, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000199, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		 }

		 if (pclip != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:pclip; HUDMSG_ALPHA, 17000001, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y - 0.040),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA1");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000011, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.041),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000001, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000011, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		 if (clip != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:clip; HUDMSG_ALPHA, 17000002, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.000),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA2");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000012, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.000),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000002, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.000),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000012, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.000),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		 if (shell != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:shell; HUDMSG_ALPHA, 17000004, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y - 0.020),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA3");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000014, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.019),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000004, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000014, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		if (cell != 0)
		 {  
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:cell; HUDMSG_ALPHA, 17000005, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.040),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA5");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000015, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.042),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000005, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000015, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		if (rocket != 0)
		 { 
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:rocket; HUDMSG_ALPHA, 17000006, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.020),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA4");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000016, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.022),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000006, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000016, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		 if (gas != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:gas; HUDMSG_ALPHA, 17000007, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.060),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA6");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000017, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.062),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000007, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000017, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		  if (hellish != 0)
		 {	
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:hellish; HUDMSG_ALPHA, 17000008, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.080),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA7");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000018, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.082),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000008, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000018, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		 if (BuzzAm != 0)
		 {
		  SetFont("UDVSMALL");
		  SetHudSize(x_font_res,y_font_res,0);
		  HudMessage(i:BuzzAm; HUDMSG_ALPHA, 17000009, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.100),y_font_res<<16)>>16<<16), 0.01, 0.45);
		  SetHudSize(xres,yres,0);
		  SetFont("AMNA9");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000019, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.103),yres<<16)>>16<<16), 0.01, 0.60);
		 }
		 else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000009, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000019, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		 if (CheckInventory("Unmaker") | CheckInventory("U_Unmaker"))
		 {
			 if (SoulAmmo != 0)
			 { 
			  SetFont("UDVSMALL");
			  SetHudSize(x_font_res,y_font_res,0);
			  HudMessage(i:SoulAmmo; HUDMSG_ALPHA, 17000003, CR_red, (FixedMul(((x - offset) + 0.630),x_font_res<<16)>>16<<16), (FixedMul((y + 0.120),y_font_res<<16)>>16<<16), 0.01, 0.45);
			  SetHudSize(xres,yres,0);
			  SetFont("AMNA8");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 17000013, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.124),yres<<16)>>16<<16), 0.01, 0.60);
			 }
			 else
			 {
			  SetFont("Blank");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 17000003, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.120),yres<<16)>>16<<16), 0.01, 0.45);
			  SetFont("Blank");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 17000013, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.120),yres<<16)>>16<<16), 0.01, 0.45);
			 }
		 }
		 else
		 { SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000003, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.120),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000013, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.120),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		}
		else
		 {
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000096, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.120),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000196, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.120),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000097, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000197, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000098, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000198, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000099, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000199, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000001, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000011, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000002, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.000),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000012, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.000),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000004, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000014, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000005, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000015, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.040),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000006, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000016, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.020),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000007, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000017, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.060),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000008, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000018, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.080),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000009, CR_red, (FixedMul(((x - offset) + 0.630),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 17000019, CR_red, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y + 0.100),yres<<16)>>16<<16), 0.01, 0.45);
		 }
		
// Ammo bars 1
if (!CatV_Altabar)
{
	//Guns with reload
	if (ammo2 != -1)
	{
		//Magazine bar 
		{
		 if (!extcam && !MorphedPlayer)
		  {
		  if((ammorate2) == 0) setfont("ARM21");
		  if((ammorate2) >= 1 && (ammorate2) <= 5) SetFont("AMMO20");
		  if((ammorate2) >= 6 && (ammorate2) <= 10) SetFont("AMMO19");
		  if((ammorate2) >= 11 && (ammorate2) <= 15) SetFont("AMMO18");
		  if((ammorate2) >= 16 && (ammorate2) <= 20) SetFont("AMMO17");
		  if((ammorate2) >= 21 && (ammorate2) <= 25) SetFont("AMMO16");
		  if((ammorate2) >= 26 && (ammorate2) <= 30) SetFont("AMMO15");
		  if((ammorate2) >= 31 && (ammorate2) <= 35) SetFont("AMMO14");
		  if((ammorate2) >= 36 && (ammorate2) <= 40) SetFont("AMMO13");
		  if((ammorate2) >= 41 && (ammorate2) <= 45) SetFont("AMMO12");
		  if((ammorate2) >= 46 && (ammorate2) <= 50) SetFont("AMMO11");
		  if((ammorate2) >= 51 && (ammorate2) <= 55) SetFont("AMMO10");
		  if((ammorate2) >= 56 && (ammorate2) <= 60) SetFont("AMMO9");
		  if((ammorate2) >= 61 && (ammorate2) <= 65) SetFont("AMMO8");
		  if((ammorate2) >= 66 && (ammorate2) <= 70) SetFont("AMMO7");
		  if((ammorate2) >= 71 && (ammorate2) <= 75) SetFont("AMMO6");
		  if((ammorate2) >= 76 && (ammorate2) <= 80) SetFont("AMMO5");
		  if((ammorate2) >= 81 && (ammorate2) <= 85) SetFont("AMMO4");
		  if((ammorate2) >= 86 && (ammorate2) <= 90) SetFont("AMMO3");
		  if((ammorate2) >= 91 && (ammorate2) <= 95) SetFont("AMMO2");
		  if((ammorate2) >= 96) SetFont("AMMO1");
		  }
		  else SetFont("Blank");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449926, CR_untranslated, (FixedMul(((x - offset) + 0.410),xres<<16)>>16<<16), (FixedMul((y + 0.235),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		}
  		 //Total ammo bar
		{
		if (!extcam && !MorphedPlayer)
		  {
		  if((ammorate) == 0) setfont("ARM21");
		  if((ammorate) >= 1 && (ammorate) <= 5) SetFont("AMMO20");
		  if((ammorate) >= 6 && (ammorate) <= 10) SetFont("AMMO19");
		  if((ammorate) >= 11 && (ammorate) <= 15) SetFont("AMMO18");
		  if((ammorate) >= 16 && (ammorate) <= 20) SetFont("AMMO17");
		  if((ammorate) >= 21 && (ammorate) <= 25) SetFont("AMMO16");
		  if((ammorate) >= 26 && (ammorate) <= 30) SetFont("AMMO15");
		  if((ammorate) >= 31 && (ammorate) <= 35) SetFont("AMMO14");
		  if((ammorate) >= 36 && (ammorate) <= 40) SetFont("AMMO13");
		  if((ammorate) >= 41 && (ammorate) <= 45) SetFont("AMMO12");
		  if((ammorate) >= 46 && (ammorate) <= 50) SetFont("AMMO11");
		  if((ammorate) >= 51 && (ammorate) <= 55) SetFont("AMMO10");
		  if((ammorate) >= 56 && (ammorate) <= 60) SetFont("AMMO9");
		  if((ammorate) >= 61 && (ammorate) <= 65) SetFont("AMMO8");
		  if((ammorate) >= 66 && (ammorate) <= 70) SetFont("AMMO7");
		  if((ammorate) >= 71 && (ammorate) <= 75) SetFont("AMMO6");
		  if((ammorate) >= 76 && (ammorate) <= 80) SetFont("AMMO5");
		  if((ammorate) >= 81 && (ammorate) <= 85) SetFont("AMMO4");
		  if((ammorate) >= 86 && (ammorate) <= 90) SetFont("AMMO3");
		  if((ammorate) >= 91 && (ammorate) <= 95) SetFont("AMMO2");
		  if((ammorate) >= 96) SetFont("AMMO1");
		  }
		  else SetFont("Blank");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449925, CR_untranslated, (FixedMul(((x - offset) + 0.390),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		}
  }
  
  //Guns without reload
  if (ammo2 == -1)
  {
		//Magazine bar
		
		 SetFont("BLANK");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449926, CR_untranslated, (FixedMul(((x - offset) + 0.410),xres<<16)>>16<<16), (FixedMul((y + 0.235),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		
  		 //Total ammo bar
		
		{
		if (!extcam && !MorphedPlayer)
		  {
		  if((ammorate) == 0) setfont("ARM21");
		  if((ammorate) >= 1 && (ammorate) <= 5) SetFont("AMMO20");
		  if((ammorate) >= 6 && (ammorate) <= 10) SetFont("AMMO19");
		  if((ammorate) >= 11 && (ammorate) <= 15) SetFont("AMMO18");
		  if((ammorate) >= 16 && (ammorate) <= 20) SetFont("AMMO17");
		  if((ammorate) >= 21 && (ammorate) <= 25) SetFont("AMMO16");
		  if((ammorate) >= 26 && (ammorate) <= 30) SetFont("AMMO15");
		  if((ammorate) >= 31 && (ammorate) <= 35) SetFont("AMMO14");
		  if((ammorate) >= 36 && (ammorate) <= 40) SetFont("AMMO13");
		  if((ammorate) >= 41 && (ammorate) <= 45) SetFont("AMMO12");
		  if((ammorate) >= 46 && (ammorate) <= 50) SetFont("AMMO11");
		  if((ammorate) >= 51 && (ammorate) <= 55) SetFont("AMMO10");
		  if((ammorate) >= 56 && (ammorate) <= 60) SetFont("AMMO9");
		  if((ammorate) >= 61 && (ammorate) <= 65) SetFont("AMMO8");
		  if((ammorate) >= 66 && (ammorate) <= 70) SetFont("AMMO7");
		  if((ammorate) >= 71 && (ammorate) <= 75) SetFont("AMMO6");
		  if((ammorate) >= 76 && (ammorate) <= 80) SetFont("AMMO5");
		  if((ammorate) >= 81 && (ammorate) <= 85) SetFont("AMMO4");
		  if((ammorate) >= 86 && (ammorate) <= 90) SetFont("AMMO3");
		  if((ammorate) >= 91 && (ammorate) <= 95) SetFont("AMMO2");
		  if((ammorate) >= 96) SetFont("AMMO1");
		  }
		  else SetFont("Blank");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449925, CR_untranslated, (FixedMul(((x - offset) + 0.390),xres<<16)>>16<<16), (FixedMul((y + 0.260),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		}
	}	
}
// Ammo bars 2 
if (CatV_Altabar)
{
	//Guns with reload
	if (ammo2 != -1)
	{
		//Magazine bar 
		{
		 if (!extcam && !MorphedPlayer)
		  {
		  if((ammorate2) == 0) setfont("ARM21");
		  if((ammorate2) >= 1 && (ammorate2) <= 5) SetFont("AMMUN20");
		  if((ammorate2) >= 6 && (ammorate2) <= 10) SetFont("AMMUN19");
		  if((ammorate2) >= 11 && (ammorate2) <= 15) SetFont("AMMUN18");
		  if((ammorate2) >= 16 && (ammorate2) <= 20) SetFont("AMMUN17");
		  if((ammorate2) >= 21 && (ammorate2) <= 25) SetFont("AMMUN16");
		  if((ammorate2) >= 26 && (ammorate2) <= 30) SetFont("AMMUN15");
		  if((ammorate2) >= 31 && (ammorate2) <= 35) SetFont("AMMUN14");
		  if((ammorate2) >= 36 && (ammorate2) <= 40) SetFont("AMMUN13");
		  if((ammorate2) >= 41 && (ammorate2) <= 45) SetFont("AMMUN12");
		  if((ammorate2) >= 46 && (ammorate2) <= 50) SetFont("AMMUN11");
		  if((ammorate2) >= 51 && (ammorate2) <= 55) SetFont("AMMUN10");
		  if((ammorate2) >= 56 && (ammorate2) <= 60) SetFont("AMMUN9");
		  if((ammorate2) >= 61 && (ammorate2) <= 65) SetFont("AMMUN8");
		  if((ammorate2) >= 66 && (ammorate2) <= 70) SetFont("AMMUN7");
		  if((ammorate2) >= 71 && (ammorate2) <= 75) SetFont("AMMUN6");
		  if((ammorate2) >= 76 && (ammorate2) <= 80) SetFont("AMMUN5");
		  if((ammorate2) >= 81 && (ammorate2) <= 85) SetFont("AMMUN4");
		  if((ammorate2) >= 86 && (ammorate2) <= 90) SetFont("AMMUN3");
		  if((ammorate2) >= 91 && (ammorate2) <= 95) SetFont("AMMUN2");
		  if((ammorate2) >= 96) SetFont("AMMUN1");
		  }
		  else SetFont("Blank");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449926, CR_untranslated, (FixedMul(((x - offset) + 0.410),xres<<16)>>16<<16), (FixedMul((y + 0.237),yres<<16)>>16<<16), 0.01, 0.50);
		  } 
		}
  		 //Total ammo bar
		{
		if (!extcam && !MorphedPlayer)
		  {
		  if((ammorate) == 0) setfont("ARM21");
		  if((ammorate) >= 1 && (ammorate) <= 5) SetFont("AMMUN20");
		  if((ammorate) >= 6 && (ammorate) <= 10) SetFont("AMMUN19");
		  if((ammorate) >= 11 && (ammorate) <= 15) SetFont("AMMUN18");
		  if((ammorate) >= 16 && (ammorate) <= 20) SetFont("AMMUN17");
		  if((ammorate) >= 21 && (ammorate) <= 25) SetFont("AMMUN16");
		  if((ammorate) >= 26 && (ammorate) <= 30) SetFont("AMMUN15");
		  if((ammorate) >= 31 && (ammorate) <= 35) SetFont("AMMUN14");
		  if((ammorate) >= 36 && (ammorate) <= 40) SetFont("AMMUN13");
		  if((ammorate) >= 41 && (ammorate) <= 45) SetFont("AMMUN12");
		  if((ammorate) >= 46 && (ammorate) <= 50) SetFont("AMMUN11");
		  if((ammorate) >= 51 && (ammorate) <= 55) SetFont("AMMUN10");
		  if((ammorate) >= 56 && (ammorate) <= 60) SetFont("AMMUN9");
		  if((ammorate) >= 61 && (ammorate) <= 65) SetFont("AMMUN8");
		  if((ammorate) >= 66 && (ammorate) <= 70) SetFont("AMMUN7");
		  if((ammorate) >= 71 && (ammorate) <= 75) SetFont("AMMUN6");
		  if((ammorate) >= 76 && (ammorate) <= 80) SetFont("AMMUN5");
		  if((ammorate) >= 81 && (ammorate) <= 85) SetFont("AMMUN4");
		  if((ammorate) >= 86 && (ammorate) <= 90) SetFont("AMMUN3");
		  if((ammorate) >= 91 && (ammorate) <= 95) SetFont("AMMUN2");
		  if((ammorate) >= 96) SetFont("AMMUN1");
		  }
		  else SetFont("Blank");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449925, CR_untranslated, (FixedMul(((x - offset) + 0.390),xres<<16)>>16<<16), (FixedMul((y + 0.292),yres<<16)>>16<<16), 0.01, 0.50);
		  } 
		}
  }
  
  //Guns without reload
  if (ammo2 == -1)
  {
		//Magazine bar
		
		 SetFont("BLANK");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449926, CR_untranslated, (FixedMul(((x - offset) + 0.410),xres<<16)>>16<<16), (FixedMul((y + 0.237),yres<<16)>>16<<16), 0.01, 0.50);
		  } 
		
  		 //Total ammo bar
		
		{
		if (!extcam && !MorphedPlayer)
		  {
		  if((ammorate) == 0) setfont("ARM21");
		  if((ammorate) >= 1 && (ammorate) <= 5) SetFont("AMMUN20");
		  if((ammorate) >= 6 && (ammorate) <= 10) SetFont("AMMUN19");
		  if((ammorate) >= 11 && (ammorate) <= 15) SetFont("AMMUN18");
		  if((ammorate) >= 16 && (ammorate) <= 20) SetFont("AMMUN17");
		  if((ammorate) >= 21 && (ammorate) <= 25) SetFont("AMMUN16");
		  if((ammorate) >= 26 && (ammorate) <= 30) SetFont("AMMUN15");
		  if((ammorate) >= 31 && (ammorate) <= 35) SetFont("AMMUN14");
		  if((ammorate) >= 36 && (ammorate) <= 40) SetFont("AMMUN13");
		  if((ammorate) >= 41 && (ammorate) <= 45) SetFont("AMMUN12");
		  if((ammorate) >= 46 && (ammorate) <= 50) SetFont("AMMUN11");
		  if((ammorate) >= 51 && (ammorate) <= 55) SetFont("AMMUN10");
		  if((ammorate) >= 56 && (ammorate) <= 60) SetFont("AMMUN9");
		  if((ammorate) >= 61 && (ammorate) <= 65) SetFont("AMMUN8");
		  if((ammorate) >= 66 && (ammorate) <= 70) SetFont("AMMUN7");
		  if((ammorate) >= 71 && (ammorate) <= 75) SetFont("AMMUN6");
		  if((ammorate) >= 76 && (ammorate) <= 80) SetFont("AMMUN5");
		  if((ammorate) >= 81 && (ammorate) <= 85) SetFont("AMMUN4");
		  if((ammorate) >= 86 && (ammorate) <= 90) SetFont("AMMUN3");
		  if((ammorate) >= 91 && (ammorate) <= 95) SetFont("AMMUN2");
		  if((ammorate) >= 96) SetFont("AMMUN1");
		  }
		  else SetFont("Blank");
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16449925, CR_untranslated, (FixedMul(((x - offset) + 0.390),xres<<16)>>16<<16), (FixedMul((y + 0.262),yres<<16)>>16<<16), 0.01, 0.50);
		  } 
		}
	}	
}
	//Armor bar
		{
		if (!extcam && !MorphedPlayer)
		  {
		  if(armor == 0) setfont("ARM21");
		  if(armor >= 1 && armor <= 5) SetFont("HEAL20");
		  if(armor >= 6 && armor <= 10) SetFont("HEAL19");
		  if(armor >= 11 && armor <= 15) SetFont("HEAL18");
		  if(armor >= 16 && armor <= 20) SetFont("HEAL17");
		  if(armor >= 21 && armor <= 25) SetFont("HEAL16");
		  if(armor >= 26 && armor <= 30) SetFont("HEAL15");
		  if(armor >= 31 && armor <= 35) SetFont("HEAL14");
		  if(armor >= 36 && armor <= 40) SetFont("HEAL13");
		  if(armor >= 41 && armor <= 45) SetFont("HEAL12");
		  if(armor >= 46 && armor <= 50) SetFont("HEAL11");
		  if(armor >= 51 && armor <= 55) SetFont("HEAL10");
		  if(armor >= 56 && armor <= 60) SetFont("HEAL9");
		  if(armor >= 61 && armor <= 65) SetFont("HEAL8");
		  if(armor >= 66 && armor <= 70) SetFont("HEAL7");
		  if(armor >= 71 && armor <= 75) SetFont("HEAL6");
		  if(armor >= 76 && armor <= 80) SetFont("HEAL5");
		  if(armor >= 81 && armor <= 85) SetFont("HEAL4");
		  if(armor >= 86 && armor <= 90) SetFont("HEAL3");
		  if(armor >= 91 && armor <= 95) SetFont("HEAL2");
		  if(armor >= 96 && armor <= 100) SetFont("HEAL1");
		  if(armor >= 101 && armor <= 105) SetFont("UHEAL1");
		  if(armor >= 106 && armor <= 110) SetFont("UHEAL2");
		  if(armor >= 111 && armor <= 115) SetFont("UHEAL3");
		  if(armor >= 116 && armor <= 120) SetFont("UHEAL4");
		  if(armor >= 121 && armor <= 125) SetFont("UHEAL5");
		  if(armor >= 126 && armor <= 130) SetFont("UHEAL6");
		  if(armor >= 131 && armor <= 135) SetFont("UHEAL7");
		  if(armor >= 136 && armor <= 140) SetFont("UHEAL8");
		  if(armor >= 141 && armor <= 145) SetFont("UHEAL9");
		  if(armor >= 146 && armor <= 150) SetFont("UHEAL10");
		  if(armor >= 151 && armor <= 155) SetFont("UHEAL11");
		  if(armor >= 156 && armor <= 160) SetFont("UHEAL12");
		  if(armor >= 161 && armor <= 165) SetFont("UHEAL13");
		  if(armor >= 166 && armor <= 170) SetFont("UHEAL14");
		  if(armor >= 171 && armor <= 175) SetFont("UHEAL15");
		  if(armor >= 176 && armor <= 180) SetFont("UHEAL16");
		  if(armor >= 181 && armor <= 185) SetFont("UHEAL17");
		  if(armor >= 186 && armor <= 190) SetFont("UHEAL18");
		  if(armor >= 191 && armor <= 195) SetFont("UHEAL19");
		  if(armor >= 196) SetFont("UHEAL20");
		   }
		  else SetFont("Blank");
		  
		  if (!CatV_HPBottom)
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16444624, CR_untranslated, (FixedMul(((x + offset) - 0.332),xres<<16)>>16<<16), (FixedMul((y - 0.348),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		  else
		  {
			SetHudSize(1024,yres,0);
			HudMessage(s:"A"; HUDMSG_ALPHA, 16444624, CR_untranslated, (FixedMul(((x + offset) - 0.380),1120<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.60);
			SetHudSize(xres,yres,0);	
		  }
		
		}
		
	
		//keys
		if (!extcam && !MorphedPlayer)
		   {
		   if(bkey == 1) 
		   {
		   SetFont("stkeysM");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16444625, CR_untranslated, (FixedMul((x + 0.360),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(ykey == 1)
		   {
		   setfont("stkeysN");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444626, CR_untranslated, (FixedMul((x + 0.394),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(rkey == 1)
		   {
		   setfont("stkeysO");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444627, CR_untranslated, (FixedMul((x + 0.426),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(skey == 1) 
		   {
		   SetFont("stkeysA");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16444628, CR_untranslated, (FixedMul((x + 0.460),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(pkey == 1)
		   {
		   setfont("stkeysB");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444629, CR_untranslated, (FixedMul((x + 0.494),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(brkey == 1)
		   {
		   setfont("stkeysC");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444630, CR_untranslated, (FixedMul((x + 0.528),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }  
		   if(blkey == 1) 
		   {
		   SetFont("stkeysD");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544631, CR_untranslated, (FixedMul((x + 0.562),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(gkey == 1)
		   {
		   setfont("stkeysE");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544632, CR_untranslated, (FixedMul((x + 0.596),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(okey == 1)
		   {
		   setfont("stkeysF");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544633, CR_untranslated, (FixedMul((x + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }  	
		   if(bskull == 1) 
		   {
		   setfont("stkeysP");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544634, CR_untranslated, (FixedMul((x + 0.364),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(yskull == 1)
		   {
		   setfont("stkeysQ");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544635, CR_untranslated, (FixedMul((x + 0.398),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(rskull == 1)
		   {
		   setfont("stkeysR");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544636, CR_untranslated, (FixedMul((x + 0.430),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(sskull == 1) 
		   {
		   setfont("stkeysG");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544637, CR_untranslated, (FixedMul((x + 0.464),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(pskull == 1)
		   {
		   setfont("stkeysH");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544638, CR_untranslated, (FixedMul((x + 0.498),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(brskull == 1)
		   {
		   setfont("stkeysI");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544639, CR_untranslated, (FixedMul((x + 0.532),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(blskull == 1) 
		   {
		   setfont("stkeysJ");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544640, CR_untranslated, (FixedMul((x + 0.566),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(gskull == 1)
		   {
		   setfont("stkeysK");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544641, CR_untranslated, (FixedMul((x + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   if(oskull == 1)
		   {
		   setfont("stkeysL");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544642, CR_untranslated, (FixedMul((x + 0.634),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   }
		   }
		  else
		  {
		   SetFont("Blank");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16444625, CR_untranslated, (FixedMul((x + 0.360),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444626, CR_untranslated, (FixedMul((x + 0.394),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444627, CR_untranslated, (FixedMul((x + 0.426),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   SetFont("Blank");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16444628, CR_untranslated, (FixedMul((x + 0.460),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444629, CR_untranslated, (FixedMul((x + 0.494),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16444630, CR_untranslated, (FixedMul((x + 0.528),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   SetFont("Blank");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544631, CR_untranslated, (FixedMul((x + 0.562),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544632, CR_untranslated, (FixedMul((x + 0.596),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544633, CR_untranslated, (FixedMul((x + 0.630),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544634, CR_untranslated, (FixedMul((x + 0.364),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);	   
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544635, CR_untranslated, (FixedMul((x + 0.398),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544636, CR_untranslated, (FixedMul((x + 0.430),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544637, CR_untranslated, (FixedMul((x + 0.464),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544638, CR_untranslated, (FixedMul((x + 0.498),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544639, CR_untranslated, (FixedMul((x + 0.532),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   Hudmessage(s:"A"; HUDMSG_ALPHA, 16544640, CR_untranslated, (FixedMul((x + 0.566),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544641, CR_untranslated, (FixedMul((x + 0.600),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		   setfont("Blank");
		   HudMessage(s:"A"; HUDMSG_ALPHA, 16544642, CR_untranslated, (FixedMul((x + 0.634),xres<<16)>>16<<16), (FixedMul((y - 0.380),yres<<16)>>16<<16), 0.01, 0.65);
		  }
		
		 //Life & armor indicators
		if (!extcam && !MorphedPlayer)
		  {
		  if(life <= 0)  SetFont("PINAXX");
		  if(life > 0 && life <= 15)  SetFont("PINAXX");
		  if(life >= 16 && life <= 40) SetFont("PINAY");
		  if(life >= 41 && life <= 50) SetFont("PINAZ");
		  if(life >= 51 && life <= 100) SetFont("PINAB");
		  if(life >= 101) SetFont("PINAB");	  	
		  }
		else if (!extcam && MorphedPlayer)
		  {
		  SetFont("PINA666");	  	
		  }
		else SetFont("Blank");
		 
		 if (!CatV_HPBottom)
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16444631, CR_untranslated, (FixedMul(((x + offset) - 0.510),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		  else
		  {	
			HudMessage(s:"A"; HUDMSG_ALPHA, 16444631, CR_untranslated, (FixedMul(((x + offset) - 0.500),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
		  }
		 
		
		if (!extcam && !MorphedPlayer)
		  {
		  SetFont("PINAA");
		  }
		else SetFont("Blank");
		if (!CatV_HPBottom)
				  {
					HudMessage(s:"A"; HUDMSG_ALPHA, 16444633, CR_untranslated, (FixedMul(((x + offset) - 0.500),xres<<16)>>16<<16), (FixedMul((y - 0.350),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
				else
				  {
					HudMessage(s:"A"; HUDMSG_ALPHA, 16444633, CR_untranslated, (FixedMul(((x + offset) - 0.510),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
		
		
		if (!extcam)
		 {  
		  SetFont("AMMOFONT");
		  
			if((life >= 0 && life <= 15 && !MorphedPlayer) | MorphedPlayer) 
			  {
				if (!CatV_HPBottom)
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_darkred, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
				else
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_darkred, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
				  }
			  }
			if(life >= 16 && life <= 40 && !MorphedPlayer) 
			  {
			  if (!CatV_HPBottom)
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_orange, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
			  else
				  
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_orange, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
				}
			if(life >= 41 && life <= 50 && !MorphedPlayer) 
			  {
			  if (!CatV_HPBottom)
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_gold, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
			  else
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_gold, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
				  }
			  }
			if(life >= 51 && life <= 100 && !MorphedPlayer) 
			  {
			  if (!CatV_HPBottom)
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_green, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
			  else
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_green, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
				  }
			  }
			if(life >= 101 && !MorphedPlayer) 
			  {
			  if (!CatV_HPBottom)
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_green, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
			  else
				  {
					HudMessage(i:life; HUDMSG_ALPHA, 16444632, CR_green, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
			  }
		 }
		else
		{
		 SetFont("Blank");
		  if (!CatV_HPBottom)
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16444632, CR_untranslated, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
		  } 
		  else
		  {
			HudMessage(s:"A"; HUDMSG_ALPHA, 16444632, CR_untranslated, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
		  }	 
		}
		
		if (!extcam)
		  { 
			  if (life <= 25)
			  {
			  
			  SetFont("LWHPG00");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 1644477, CR_untranslated, (FixedMul(((x + offset) - 0.620),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.40);
			 
			  }
			  if (life > 25)
			  {
			  
			  SetFont("BLANK");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 1644477, CR_untranslated, (FixedMul(((x + offset) - 0.620),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.40);
			 
			  }
			  SetFont("AMMOFONT");
			  if (!CatV_HPBottom)
				  {
					HudMessage(i:armor; HUDMSG_ALPHA, 16444634, CR_cyan, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y - 0.350),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
				else
				  {
					HudMessage(i:armor; HUDMSG_ALPHA, 16444634, CR_cyan, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.60);
				  }
			  
			  if(life <= 0)
			  {
				SetFont("AMMOFONT");
				if (!CatV_HPBottom)
				  {
					HudMessage(s:"0"; HUDMSG_ALPHA, 16444632, CR_darkred, (FixedMul(((x + offset) - 0.480),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
				else
				  {
					HudMessage(s:"0"; HUDMSG_ALPHA, 16444632, CR_darkred, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y + 0.290),yres<<16)>>16<<16), 0.01, 0.60);
				  }
			  }
			  if(armor <= 0 && !MorphedPlayer)
			  {
				SetFont("AMMOFONT");
				if (!CatV_HPBottom)
				  {
					HudMessage(s:"0"; HUDMSG_ALPHA, 16444634, CR_cyan, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y - 0.350),yres<<16)>>16<<16), 0.01, 0.60);
				  } 
				else
				  {
					HudMessage(s:"0"; HUDMSG_ALPHA, 16444634, CR_cyan, (FixedMul(((x + offset) - 0.475),xres<<16)>>16<<16), (FixedMul((y + 0.240),yres<<16)>>16<<16), 0.01, 0.60);
				  }
			  }
			  if(MorphedPlayer)
			  {
				SetFont("BLANK");
				HudMessage(s:"0"; HUDMSG_ALPHA, 16444634, CR_cyan, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y - 0.350),yres<<16)>>16<<16), 0.01, 0.55);
			  }
			}
		else
		{
		 SetFont("Blank");
		 HudMessage(s:"A"; HUDMSG_ALPHA, 1644477, CR_untranslated, (FixedMul(((x + offset) - 0.620),xres<<16)>>16<<16), (FixedMul((y - 0.100),yres<<16)>>16<<16), 0.01, 0.40);
		 SetFont("Blank");
		 HudMessage(s:"0"; HUDMSG_ALPHA, 16444632, CR_darkred, (FixedMul(((x + offset) - 0.480),xres<<16)>>16<<16), (FixedMul((y - 0.400),yres<<16)>>16<<16), 0.01, 0.60);
		 SetFont("Blank");
		 HudMessage(s:"0"; HUDMSG_ALPHA, 16444634, CR_cyan, (FixedMul(((x + offset) - 0.465),xres<<16)>>16<<16), (FixedMul((y - 0.350),yres<<16)>>16<<16), 0.01, 0.55);
		}
		 
		
		//Level stats
		 if (!extcam && !MorphedPlayer )
		  { 
			 if (CatV_Stats && CatV_StatsMini)
			  {
				SetFont("UDVSMALL");	
			    SetHudSize(x_font_res,y_font_res,0);
				if (!CatV_HPBottom)
				  {
					HudMessage(s:"kills : ", i:mkilled, s:"/" , i:mtotal;
					HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x - offset) + 0.560),x_font_res<<16)>>16<<16), (FixedMul((y - 0.315),y_font_res<<16)>>16<<16), 0.01, 0.40);
				  } 
				else
				  {
					HudMessage(s:"kills : ", i:mkilled, s:"/" , i:mtotal;
					HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x + offset) - 0.510),x_font_res<<16)>>16<<16), (FixedMul((y - 0.315),y_font_res<<16)>>16<<16), 0.01, 0.40);
				  }
				SetHudSize(xres,yres,0);
				
				SetFont("UDVSMALL");	
			    SetHudSize(x_font_res,y_font_res,0);
				if (!CatV_HPBottom)
				  {
					HudMessage(s:"items : ", i:ifound, s:"/" , i:itotal;
					HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x - offset) + 0.560),x_font_res<<16)>>16<<16), (FixedMul((y - 0.340),y_font_res<<16)>>16<<16), 0.01, 0.40);
			      } 
				else
				  {
					HudMessage(s:"items : ", i:ifound, s:"/" , i:itotal;
					HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x + offset) - 0.510),x_font_res<<16)>>16<<16), (FixedMul((y - 0.340),y_font_res<<16)>>16<<16), 0.01, 0.40);
			      }
			    SetHudSize(xres,yres,0);

			    SetFont("UDVSMALL");	
			    SetHudSize(x_font_res,y_font_res,0);
				if (!CatV_HPBottom)
				  {
					HudMessage(s:"secrets : ", i:sfound, s:"/" , i:stotal;
					HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x - offset) + 0.560),x_font_res<<16)>>16<<16), (FixedMul((y - 0.365),y_font_res<<16)>>16<<16), 0.01, 0.40);
				  } 
				else
				  {
					HudMessage(s:"secrets : ", i:sfound, s:"/" , i:stotal;
					HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x + offset) - 0.510),x_font_res<<16)>>16<<16), (FixedMul((y - 0.365),y_font_res<<16)>>16<<16), 0.01, 0.40);
			      }
				SetHudSize(xres,yres,0);	
				
			  setfont("Blank");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 16444635, CR_untranslated, (FixedMul(((x - offset) + 0.210),xres<<16)>>16<<16), (FixedMul((y-0.350),yres<<16)>>16<<16), 0.01, 0.45);
			  SetFont("Blank");
			  HudMessage(i:mkilled; HUDMSG_ALPHA, 16444637, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.420),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:ifound; HUDMSG_ALPHA, 16444639, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.330),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:sfound; HUDMSG_ALPHA, 16444641, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.375),yres<<16)>>16<<16), 0.01, 0.55);
				
			  }
		  
			if (CatV_Stats && CatV_Screen && !CatV_StatsMini)
			{
				
				  setfont("STATHEAD");
				  HudMessage(s:"A"; HUDMSG_ALPHA, 16444635, CR_untranslated, (FixedMul(((x - offset)  + 0.210),xres<<16)>>16<<16), (FixedMul((y-0.350),yres<<16)>>16<<16), 0.01, 0.35);
				  SetFont("AMMOFONT");
				  HudMessage(i:mtotal; HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x - offset)  + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.425),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:mkilled; HUDMSG_ALPHA, 16444637, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.420),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:itotal; HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.335),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:ifound; HUDMSG_ALPHA, 16444639, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.330),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:stotal; HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.380),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:sfound; HUDMSG_ALPHA, 16444641, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.375),yres<<16)>>16<<16), 0.01, 0.55);
	
			}
			 
			 
			 
			if (CatV_Stats && !CatV_Screen && !CatV_StatsMini)
			{ 
				if (!CatV_HPBottom)
				{
				  setfont("STATHEAD");
				  HudMessage(s:"A"; HUDMSG_ALPHA, 16444635, CR_untranslated, (FixedMul(((x - offset)  + 0.510),xres<<16)>>16<<16), (FixedMul((y-0.240),yres<<16)>>16<<16), 0.01, 0.50);
				  SetFont("AMMOFONT");
				  HudMessage(i:mtotal; HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x - offset)  + 0.600),xres<<16)>>16<<16), (FixedMul((y-0.315),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:mkilled; HUDMSG_ALPHA, 16444637, CR_cyan, (FixedMul(((x - offset) + 0.540),xres<<16)>>16<<16), (FixedMul((y-0.310),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:itotal; HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y-0.225),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:ifound; HUDMSG_ALPHA, 16444639, CR_cyan, (FixedMul(((x - offset) + 0.540),xres<<16)>>16<<16), (FixedMul((y-0.220),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:stotal; HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x - offset) + 0.600),xres<<16)>>16<<16), (FixedMul((y-0.270),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:sfound; HUDMSG_ALPHA, 16444641, CR_cyan, (FixedMul(((x - offset) + 0.540),xres<<16)>>16<<16), (FixedMul((y-0.265),yres<<16)>>16<<16), 0.01, 0.55);
			    }
				else
			    {
				  setfont("STATHEAD");
				  HudMessage(s:"A"; HUDMSG_ALPHA, 16444635, CR_untranslated, (FixedMul(((x + offset)  - 0.530),xres<<16)>>16<<16), (FixedMul((y-0.240),yres<<16)>>16<<16), 0.01, 0.50);
				  SetFont("AMMOFONT");
				  HudMessage(i:mtotal; HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x + offset)  - 0.440),xres<<16)>>16<<16), (FixedMul((y-0.315),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:mkilled; HUDMSG_ALPHA, 16444637, CR_cyan, (FixedMul(((x + offset) - 0.500),xres<<16)>>16<<16), (FixedMul((y-0.310),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:itotal; HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x + offset) - 0.440),xres<<16)>>16<<16), (FixedMul((y-0.225),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:ifound; HUDMSG_ALPHA, 16444639, CR_cyan, (FixedMul(((x + offset) - 0.500),xres<<16)>>16<<16), (FixedMul((y-0.220),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:stotal; HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x + offset) - 0.440),xres<<16)>>16<<16), (FixedMul((y-0.270),yres<<16)>>16<<16), 0.01, 0.55);
				  SetFont("AMMOFONT");
				  HudMessage(i:sfound; HUDMSG_ALPHA, 16444641, CR_cyan, (FixedMul(((x + offset) - 0.500),xres<<16)>>16<<16), (FixedMul((y-0.265),yres<<16)>>16<<16), 0.01, 0.55);
			    }
			 }
			if (!CatV_Stats)
			{
			  setfont("Blank");
			  HudMessage(s:"A"; HUDMSG_ALPHA, 16444635, CR_untranslated, (FixedMul(((x - offset) + 0.210),xres<<16)>>16<<16), (FixedMul((y-0.350),yres<<16)>>16<<16), 0.01, 0.45);
			  SetFont("Blank");
			  HudMessage(i:mtotal; HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.425),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:mkilled; HUDMSG_ALPHA, 16444637, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.420),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:itotal; HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.335),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:ifound; HUDMSG_ALPHA, 16444639, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.330),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:stotal; HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.380),yres<<16)>>16<<16), 0.01, 0.55);
			  SetFont("Blank");
			  HudMessage(i:sfound; HUDMSG_ALPHA, 16444641, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.375),yres<<16)>>16<<16), 0.01, 0.55);
			}
		  }
		else
		 {
		  setfont("Blank");
		  HudMessage(s:"A"; HUDMSG_ALPHA, 16444635, CR_untranslated, (FixedMul(((x - offset) + 0.210),xres<<16)>>16<<16), (FixedMul((y-0.350),yres<<16)>>16<<16), 0.01, 0.45);
		  SetFont("Blank");
		  HudMessage(i:mtotal; HUDMSG_ALPHA, 16444636, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.425),yres<<16)>>16<<16), 0.01, 0.55);
		  SetFont("Blank");
		  HudMessage(i:mkilled; HUDMSG_ALPHA, 16444637, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.420),yres<<16)>>16<<16), 0.01, 0.55);
		  SetFont("Blank");
		  HudMessage(i:itotal; HUDMSG_ALPHA, 16444638, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.335),yres<<16)>>16<<16), 0.01, 0.55);
		  SetFont("Blank");
		  HudMessage(i:ifound; HUDMSG_ALPHA, 16444639, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.330),yres<<16)>>16<<16), 0.01, 0.55);
		  SetFont("Blank");
		  HudMessage(i:stotal; HUDMSG_ALPHA, 16444640, CR_cyan, (FixedMul(((x - offset) + 0.300),xres<<16)>>16<<16), (FixedMul((y-0.380),yres<<16)>>16<<16), 0.01, 0.55);
		  SetFont("Blank");
		  HudMessage(i:sfound; HUDMSG_ALPHA, 16444641, CR_cyan, (FixedMul(((x - offset) + 0.240),xres<<16)>>16<<16), (FixedMul((y-0.375),yres<<16)>>16<<16), 0.01, 0.55);
		 }
		 
		
			//Timer
			if (!extcam && !MorphedPlayer && CatV_Clock)
		    { 
				SetFont("UDVSMALL");	
			    SetHudSize(x_timer_res,y_timer_res,0);
				HudMessage(d:t/60, s:":" , d:(t%60)/10, d:t%10;
				HUDMSG_ALPHA, 16444642, CR_cyan, (FixedMul(((x - offset) + 0.560),x_timer_res<<16)>>16<<16), (FixedMul((y - 0.430),y_timer_res<<16)>>16<<16), 0.01, 0.40);
			    SetHudSize(xres,yres,0);
			}
			else
			{
				SetFont("Blank");	
			    SetHudSize(x_timer_res,y_timer_res,0);
				HudMessage(d:t/60, s:":" , d:(t%60)/10, d:t%10;
				HUDMSG_ALPHA, 16444642, CR_cyan, (FixedMul(((x - offset) + 0.560),x_timer_res<<16)>>16<<16), (FixedMul((y - 0.430),y_timer_res<<16)>>16<<16), 0.01, 0.40);
			    SetHudSize(xres,yres,0);
			}
		
		delay(1);
	  }
	  
	  }
  }