//Radar by cybermind 
//edited by schr√∂dingcat
#library "Radar"
#import "Aspect.acs"
#include "zcommon.acs"

int pid=1000000;
int tidcounter=-32767;
//int tidcounter=-32759;
int count=0;
int mode[8];//=0;
global int 1:kx[];
global int 2:ky[];
global int 3:kz[];
int atic = 0;
int RadarX169 = 687;
int RadarX43 = 594;
int RadarY = 167;
int RadarLX169 = -51;
int RadarLX43 = 41;
int RadarYHPB = 127;
int CRadarX169 = 688.0;
int CRadarX43 = 595.0;
int CRadarY = 167.0;
int CRadarLX169 = -50.0;
int CRadarLX43 = 42.0;
int CRadarYHPB = 127.0;

Int Player_TID [32];
Function Int GetPlayerID (void)
{
	Player_TID [PlayerNumber()] = ActivatorTID();
	Return (Player_TID [PlayerNumber()]);
}

Script "TIDAssignment" ENTER
{
	While(true)
	{
			If(!CheckInventory("PowerTimeFreezer") && !GetCVar("CatV_DisableGiver"))
			{
			SpawnForced("Radar_Giver", 0.0, 0.0, 0.0); // Gives all actors inventory item that triggers TID Script
			}
			GetPlayerID(); //Ensures Player TID is always Viewable by Radar
			//DEBUG
			//PrintBold(d:tidcounter);
			//PrintBold(d:ActivatorTID());
			//
			Delay(35);
	}
}

function int sqrt2(int number)
{
	if(number <= 3)
	{
		if(number > 0)
		{
			return 1;
		}
		return 0;
	}

	int oldAns = number >> 1,                     // initial guess
	    newAns = (oldAns + number / oldAns) >> 1; // first iteration

	// main iterative method
	while(newAns < oldAns)
	{
		oldAns = newAns;
		newAns = (oldAns + number / oldAns) >> 1;
	}

	return oldAns;
}

function int distance (int tid1, int tid2)
{
	int len;
	int y = getactory(tid1) - getactory(tid2)>>16;
	int x = getactorx(tid1) - getactorx(tid2)>>16;
	int z = getactorz(tid1) - getactorz(tid2)>>16;

	int ang = vectorangle(x,y);
	if(((ang+0.125)%0.5) > 0.25) len = fixeddiv(y, sin(ang));
	else len = fixeddiv(x, cos(ang));

	ang = vectorangle(len, z);
	if(((ang+0.125)%0.5) > 0.25) len = fixeddiv(z, sin(ang));
	else len = fixeddiv(len, cos(ang));

	return len;
}

function int distance2 (int x1, int y1, int z1, int x2, int y2, int z2)
{
	int len;
	int y = (y1 - y2) >>16;
	int x = (x1 - x2) >>16;
	int z = (z1 - z2) >>16;

	int ang = vectorangle(x,y);
	if(((ang+0.125)%0.5) > 0.25) len = fixeddiv(y, sin(ang));
	else len = fixeddiv(x, cos(ang));

	ang = vectorangle(len, z);
	if(((ang+0.125)%0.5) > 0.25) len = fixeddiv(z, sin(ang));
	else len = fixeddiv(len, cos(ang));

	return len;
}

function int getspeed (int tid)
{
int x = GetActorX(tid);
int y = GetActorY(tid);
int z = GetActorZ(tid);
int speed = distance2(x,y,z,kx[tid],ky[tid],kz[tid]);
kx[tid]=GetActorX(tid);
ky[tid]=GetActorY(tid);
kz[tid]=GetActorZ(tid);
return speed;
}

Script "RadarChanger" (Void) NET
{
	if (GameType () != GAME_TITLE_MAP && ActivatorTID() == 0  && !CheckActorClass(0, "ExplosiveBarrel1") )
	{
		Thing_ChangeTID(ActivatorTID(), tidcounter++);
	}
}
function void DrawRadar(int tid, int scale,int x1,int y1, int mod, int dist)
{
	int x,y,z,dx,dy;
	int scan;
	SetHudSize(640,480,0);
	SetFont("AILIFONT");
	int MinPlayerTID = ActivatorTID()-PlayerNumber();
	/*
	//Player  commented out because player is displayed by kMinimap
	If( !CheckInventory("cat_extcam") )//&& mod != 0 )
	{
		If (mod == 1)	HudMessage(s:" ";HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP,2000+PlayerNumber(),CR_CYAN,(x1<<16)+0.1,(y1<<16)+0.1,0.01);
		Else If (mod == 2) HudMessage(s:" ";HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP,2000+PlayerNumber(),CR_GREEN,(x1<<16)+0.1,(y1<<16)+0.1,0.01);
		Else If (mod == 3) HudMessage(s:" ";HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP,2000+PlayerNumber(),CR_RED,(x1<<16)+0.1,(y1<<16)+0.1,0.01);
		Else HudMessage(s:" ";HUDMSG_PLAIN,2000+PlayerNumber(),3,(x1<<16)+0.1,(y1<<16)+0.1,0.01);	
	}
	Else HudMessage(s:" ";HUDMSG_PLAIN,2000+PlayerNumber(),3,(x1<<16)+0.1,(y1<<16)+0.1,0.01);	
	*/
	//
	//Other Players
	//
	for (int p=MinPlayerTID; p < MinPlayerTID+8;++p)
	{
	z=(GetActorZ(p)-GetActorZ(tid))>>16;//-GetActorFloorZ(i);//(GetActorZ(i)-GetActorFloorZ(ActivatorTID())) >> 16; //Enemy height position in relation to player
	x=GetActorX(tid)-GetActorX(p);
	y=GetActorY(tid)-GetActorY(p);
	if (mod==1) 
		scan=distance(tid,p) <= dist && CheckSight(0,p,0);
	if (mod==3 || mod==2) 
		scan=distance(tid,p) <= dist;
		if (scan && !CheckInventory("cat_extcam") && ActivatorTID() != p && mod!=0 )//&& !CheckInventory("sae_deathcam") )
		{
			dx=((((FixedMul(x,cos(-GetActorAngle(0))))-(FixedMul(y,sin(-GetActorAngle(0)))))));
			dy=((((FixedMul(x,sin(-GetActorAngle(0))))+(FixedMul(y,cos(-GetActorAngle(0)))))));
			dx/=scale; dx+=y1<<16; dx=dx>>16; dx=dx<<16;
			dy/=scale; dy+=x1<<16; dy=dy>>16; dy=dy<<16;
			if (dx<0) dx-=0.1; else dx+=0.1;
			if (dy<0) dy-=0.1; else dy+=0.1;
			if( ClassifyActor(p) & ACTOR_PLAYER )
			{
				If(z <= -30)
				{
					SetFont("GRNBELOW");
					HudMessage(s:"A";HUDMSG_PLAIN,p,6,dy,dx,0.15);
				}
				else if(z >= 30)
				{
					SetFont("GRNABOVE");
					HudMessage(s:"A";HUDMSG_PLAIN,p,6,dy,dx,0.15);
				}
				Else
				{
					SetFont("GRNDOT");
					HudMessage(s:"A";HUDMSG_PLAIN,p,6,dy,dx,0.15);
				}
				//SetFont("UDVSMALL");
				//HudMessage(s:"+";HUDMSG_PLAIN,p,CR_YELLOW,dy,dx,0.1);
			}
		}
	}
	
	//
	//Monsters
	//
	for (int i=-32767;i<tidcounter;++i)
	{
	//z=(GetActorFloorZ(i)-GetActorZ(tid))>>16;//-GetActorFloorZ(i);//(GetActorZ(i)-GetActorFloorZ(ActivatorTID())) >> 16; //Enemy height position in relation to player
	z=(GetActorZ(i)-GetActorZ(tid))>>16;//-GetActorFloorZ(i);//(GetActorZ(i)-GetActorFloorZ(ActivatorTID())) >> 16; //Enemy height position in relation to player
	x=GetActorX(tid)-GetActorX(i);
	y=GetActorY(tid)-GetActorY(i);
	if (mod==1) 
		scan=distance(tid,i) <= dist && CheckSight(0,i,0);
	if (mod==3 || mod==2) 
		scan=distance(tid,i) <= dist;
		if (scan && !CheckInventory("cat_extcam") && ActivatorTID() != i && mod!=0 )//&& !CheckInventory("sae_deathcam") )
		{
			dx=((((FixedMul(x,cos(-GetActorAngle(0))))-(FixedMul(y,sin(-GetActorAngle(0)))))));
			dy=((((FixedMul(x,sin(-GetActorAngle(0))))+(FixedMul(y,cos(-GetActorAngle(0)))))));
			dx/=scale; dx+=y1<<16; dx=dx>>16; dx=dx<<16;
			dy/=scale; dy+=x1<<16; dy=dy>>16; dy=dy<<16;
			if (dx<0) dx-=0.1; else dx+=0.1;
			if (dy<0) dy-=0.1; else dy+=0.1;
			
			/*Keys commented out because A_GiveRadius (see Radar_Giver actor) seems to be too greedy with RGF_ITEMS flag (related to BD??)
			if ((CheckActorProperty(i, APROP_SPECIES, "RedCard")) | (CheckActorProperty(i, APROP_SPECIES, "RedSkull")))
					{
						SetFont("AILIFONT");
						HudMessage(s:".";HUDMSG_PLAIN,i,CR_RED,dy,dx,0.1);
					}
			else if ((CheckActorProperty(i, APROP_SPECIES, "BlueCard")) | (CheckActorProperty(i, APROP_SPECIES, "BlueSkull")))
					{
						SetFont("AILIFONT");
						HudMessage(s:".";HUDMSG_PLAIN,i,CR_LIGHTBLUE,dy,dx,0.1);
					}
			else if ((CheckActorProperty(i, APROP_SPECIES, "YellowCard")) | (CheckActorProperty(i, APROP_SPECIES, "YellowSkull")))
					{
						SetFont("AILIFONT");
						HudMessage(s:".";HUDMSG_PLAIN,i,CR_YELLOW,dy,dx,0.1);
					}
			//////////////////////
			else if ( GetActorProperty(i,APROP_Speed) == 0  && GetActorProperty(i,APROP_SpawnHealth) >= 1000 && GetActorProperty(i,APROP_Health)>0 && mod!=2 && mod!=0 ) //Static "boss" ?
			{
				SetFont("GOLDDOT");
				HudMessage(s:"A";HUDMSG_PLAIN,i,16,dy,dx,0.1);
			}
			*/
			if (CheckActorProperty(i, APROP_SPECIES, "Marines"))
					{
						SetFont("AILIFONT");
						HudMessage(s:"o";HUDMSG_PLAIN,i,CR_GREEN,dy,dx,0.1);
					}
			else if ( GetActorProperty(i,APROP_Speed) >= 0  && GetActorProperty(i,APROP_SpawnHealth) >= 2000 && GetActorProperty(i,APROP_Health)>0 && mod!=2)// && mod!=0 )
			{
				SetFont("GOLDDOT");
				HudMessage(s:"A";HUDMSG_PLAIN,i,5,dy,dx,0.1);
			}
			else if ( GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)>0 && mod!=2)// && mod!=0 )
			{
				If(z <= -30)
				{
					SetFont("REDBELOW");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				else if(z >= 30)
				{
					SetFont("REDABOVE");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				Else
				{
					SetFont("REDDOT");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				//HudMessage(s:"+";HUDMSG_PLAIN,i,6,dy,dx,0.1); original code with no height indication ?
			}
			/*
			else if (GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)<=0 && mod!=2 && mod!=0 )
			{
				HudMessage(s:"+";HUDMSG_PLAIN,i,12,dy,dx,0.1);
			}
			*/
			//else if (GetActorProperty(i,APROP_Speed) == 0  && GetActorProperty(i,APROP_SpawnHealth) == 1000 && mod==2); //Static "boss" ?
			else if ( (GetActorProperty(i,APROP_Speed) > 0 | CheckSight(0,i,0)) && GetActorProperty(i,APROP_SpawnHealth) >= 2000 && GetActorProperty(i,APROP_Health)>0 && mod==2)
			{
				SetFont("GOLDDOT");
				HudMessage(s:"A";HUDMSG_PLAIN,i,5,dy,dx,0.1);
			}
			else if ( GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)>0 && mod==2 && (getspeed(i)>0 | CheckSight(0,i,0)))
			{
				If(z <= -30)
				{
					SetFont("REDBELOW");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				else if(z >= 30)
				{
					SetFont("REDABOVE");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				Else
				{
					SetFont("REDDOT");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				
			}
			/*
			else if ( GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)>0 && mod==2 && CheckSight(0,i,0)) //added enemies in sight for mode 2
			{
				If(z <= -30)
				{
					SetFont("REDBELOW");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				else if(z >= 30)
				{
					SetFont("REDABOVE");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
				Else
				{
					SetFont("REDDOT");
					HudMessage(s:"A";HUDMSG_PLAIN,i,6,dy,dx,0.15);
				}
			}*/
		}			
	}
}



#define F_RADAR_SIZE 12
str F_RADAR[F_RADAR_SIZE] = 
    {"RADAR1", "RSAFEZ", "RSAFEZ1", "RSAFEZ2", "RSAFEZ3", "RSAFEZ4",
    "RSAFEZ5", "RSAFEZ6", "RSAFEZ7", "RSAFEZ8", "RSAFEZ9", "RSAFEZA"};
script "DrawRadarCircle" ENTER//(VOID) NET
{
	//If( GameType() != GAME_TITLE_MAP && CheckInventory("udv_moduleB"))
	If ( GameType() != GAME_TITLE_MAP )
		{

		While(true)
		{
			int Radar_aspect = GetAspectRatio();
			SetHudSize(640,480,0);
			If( !CheckInventory("cat_extcam") && mode[PlayerNumber()] != 0 && GetCVar("CatV_Radar"))
			{
					SetFont(F_RADAR[atic]);
					if(GetCVar("CatV_RadarLeft"))
					{
						If(Radar_aspect == ASPECT_4_3 )	HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP, 128, CR_UNTRANSLATED, CRadarLX43, CRadarY, 0, 0.25);
						Else HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP, 128, CR_UNTRANSLATED, CRadarLX169, CRadarY, 0, 0.25);					
					}
					else
					{
					if(GetCVar("CatV_HPBottom"))
						{
							If(Radar_aspect == ASPECT_4_3 )	HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP, 128, CR_UNTRANSLATED, CRadarX43, CRadarYHPB, 0, 0.25);
							Else HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP, 128, CR_UNTRANSLATED, CRadarX169, CRadarYHPB, 0, 0.25);
						}
					else
						{
							If(Radar_aspect == ASPECT_4_3 )	HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP, 128, CR_UNTRANSLATED, CRadarX43, CRadarY, 0, 0.25);
							Else HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP, 128, CR_UNTRANSLATED, CRadarX169, CRadarY, 0, 0.25);
						}
					}
			}
			Else //draws nothing so it blanks out the radar
			{
				SetFont(" ");
				{
				HudMessage(c:' '; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, CR_UNTRANSLATED, 560.0, 70.0, 0, 0.25);
				}
			}
			if(atic == 0) // Special case for first/last frames
				delay(8);
			else if(atic == F_RADAR_SIZE - 1)
				delay(10);
			else
				delay(5);
			
			atic++;
			atic %= F_RADAR_SIZE;
		}
	}
}


Script "RadarStart" ENTER 
{
	mode[PlayerNumber()]=0;
	//If( GameType() != GAME_TITLE_MAP && CheckInventory("udv_moduleB"))
	If ( GameType() != GAME_TITLE_MAP )
	{
		/*
		If( GetUserCVAR(PlayerNumber(), "CatV_RadarStart") ) 
		//If( GetUserCVAR(PlayerNumber(), "CatV_RadarMode") > 0 )
		{
			ACS_NamedExecuteAlways("RadarMode",0);
			//mode[PlayerNumber()]=GetUserCVAR(PlayerNumber(),"CatV_RadarMode");
		}
		*/
		If( GetUserCVAR(PlayerNumber(), "CatV_RadarMode") == 1)
		{
			ACS_NamedExecuteAlways("RadarMode",0);
		}
		Else If( GetUserCVAR(PlayerNumber(), "CatV_RadarMode") == 2)
		{
			ACS_NamedExecuteAlways("RadarMode",0);
			ACS_NamedExecuteAlways("RadarMode",0);
		}
		Else If( GetUserCVAR(PlayerNumber(), "CatV_RadarMode") == 3)
		{
			ACS_NamedExecuteAlways("RadarMode",0);
			ACS_NamedExecuteAlways("RadarMode",0);
			ACS_NamedExecuteAlways("RadarMode",0);
		}
		//Delay(5);
		while (1)
		{
			if(GetCVar("CatV_Radar"))
			{
			int Radar_aspect = GetAspectRatio();
			
				if (GetCvar("CatV_RadarLeft"))
				{
					If(Radar_aspect == ASPECT_4_3)
					{
					DrawRadar(0,26,RadarLX43,RadarY,mode[PlayerNumber()],1000);
					}
					Else
					{
					DrawRadar(0,26,RadarLX169,RadarY,mode[PlayerNumber()],1000);
					}
				}
				else
				{
					if(GetCVar("CatV_HPBottom"))
					{
						If(Radar_aspect == ASPECT_4_3)
						{
						DrawRadar(0,26,RadarX43,RadarYHPB,mode[PlayerNumber()],1000);
						}
						Else
						{
						DrawRadar(0,26,RadarX169,RadarYHPB,mode[PlayerNumber()],1000);
						}
					}
					if(!GetCVar("CatV_HPBottom"))
					{
						If(Radar_aspect == ASPECT_4_3)
						{
						DrawRadar(0,26,RadarX43,RadarY,mode[PlayerNumber()],1000);
						}
						Else
						{
						DrawRadar(0,26,RadarX169,RadarY,mode[PlayerNumber()],1000);
						}
					}		
				}
			//ACS_NamedExecute("DrawRadarCircle",0);
			}
			else
			{
				//mode[PlayerNumber()] = 0;
			}
			delay(1);
		}
	}

}

Script "RadarMode" (Void) net 
{
		if 		(mode[PlayerNumber()]==0)
		{
				mode[PlayerNumber()] = 1;
				SetFont("UDVSMALL");	
			    SetHudSize(5762,3240,0);
				HudMessage(s:"Local Scanner Activated";
				HUDMSG_TYPEON | HUDMSG_ALPHA , 54645111, CR_cyan, (FixedMul(0.500,5762<<16)>>16<<16), (FixedMul(0.430,3240<<16)>>16<<16), 0.5, 0.05, 0.5, 0.6);
			    SetHudSize(640,480,0);				
						
		}
		else if (mode[PlayerNumber()]==1)
		{
				mode[PlayerNumber()] = 2;
				SetFont("UDVSMALL");	
			    SetHudSize(5762,3240,0);
				HudMessage(s:"Movement Scanner Activated";
				HUDMSG_TYPEON | HUDMSG_ALPHA, 54645111, CR_green, (FixedMul(0.500,5762<<16)>>16<<16), (FixedMul(0.430,3240<<16)>>16<<16), 0.5, 0.05, 0.5, 0.6);
			    SetHudSize(640,480,0);				
				
		}
		else if (mode[PlayerNumber()]==2)
		{
				mode[PlayerNumber()] = 3; 
				SetFont("UDVSMALL");	
			    SetHudSize(5762,3240,0);
				HudMessage(s:"Full Scanner Activated";
				HUDMSG_TYPEON | HUDMSG_ALPHA, 54645111, CR_red, (FixedMul(0.500,5762<<16)>>16<<16), (FixedMul(0.430,3240<<16)>>16<<16), 0.5, 0.05, 0.5, 0.6);
			    SetHudSize(640,480,0);
				
		}
		else if (mode[PlayerNumber()]==3)
		{
				mode[PlayerNumber()] = 0;
				SetFont("UDVSMALL");	
			    SetHudSize(5762,3240,0);
				HudMessage(s:"Scanner Deactivated";
				HUDMSG_TYPEON | HUDMSG_ALPHA, 54645111, CR_grey, (FixedMul(0.500,5762<<16)>>16<<16), (FixedMul(0.430,3240<<16)>>16<<16), 0.5, 0.05, 0.5, 0.6);
			    SetHudSize(640,480,0);				
				
		}
}
