class AR36 : weapon replaces chaingun
{
	int fireMode;
	bool initialUp;
	
	Default
	{
		scale 0.5;
		Inventory.PickupSound ("Weapons/ARin");
		Weapon.SelectionOrder 1500;
		Weapon.BobStyle "smooth";
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive1 0;
		Weapon.AmmoGive2 30;
		Weapon.AmmoType "ARClip";
		Weapon.AmmoType2 "RifleAmmo";
		Weapon.SlotNumber 4;
		Weapon.SlotPriority 3;
		Weapon.UpSound "Weapons/GunUp1";
		Weapon.MinSelectionAmmo1 1;
		Weapon.MinSelectionAmmo2 1;
		+Weapon.NoAutoFire;
		+WEAPON.AMMO_CHECKBOTH;
		+Weapon.NOALERT
		Inventory.PickupMessage "You found the UAC DeltaTech AR-36 Assault Rifle!";
		Obituary "%o was shot down by %k's UAC AR-36!";
		decal "BulletChip";
	}
	
	States
	{
		Spawn:
			AR36 U -1;
			Stop;
		Select:
			AR36 A 1 A_Raise(12);
			loop;
		
		Deselect:
			TNT1 A 0
			{
				A_ZoomFactor(1);
				if(CountInv("RifleAmmo") == 0 && CountInv("ARClip") == 0)
				{
					ACS_Execute(1238,0);
				}
			}
			AR36 A 1 A_Lower(12);
			loop;
		
		Ready:
		TNT1 A 0
		{
			A_ZoomFactor(1);
			if(invoker.initialUp == 0)
			{
				invoker.initialUp = 1;
				return ResolveState ("WeaponFirstUp");
			}
			else
			{
				return ResolveState (null);
			}
		}
			AR36 A 1 
			{	
				A_WeaponReady(WRF_AllowReload|WRF_AllowUser1|WRF_AllowUser2);
			}
			loop;
		
		User1:
			TNT1 A 0
			{
			A_ZoomFactor(1);
			  if(Invoker.fireMode == 2)           //If the shot type variable is equal to three
                {
                invoker.fireMode = 0;               //reset ShotType to 0 (Buckshot)
                return ResolveState("ARMsgState");    //Go to ammo switch message switch block
                } 
                else
                {
                invoker.fireMode++;                  //Incriment shot type variable by one
                return ResolveState("ARMsgState");     //Go to ammo switch message switch block
                }
			}
		User2:
			TNT1 A 0
			{
			A_ZoomFactor(1);
			  if(Invoker.fireMode == 0)           //If the shot type variable is equal to three
                {
                invoker.fireMode = 2;               //reset ShotType to 0 (Buckshot)
                return ResolveState("ARMsgState");    //Go to ammo switch message switch block
                } 
                else
                {
                invoker.fireMode--;                  //Incriment shot type variable by one
                return ResolveState("ARMsgState");     //Go to ammo switch message switch block
                }
			}
			
		ARMsgState:
			TNT1 A 0
			{
			switch(invoker.fireMode)
				{
					case 0: ACS_Execute(1234, 0);              //Play buckshot message
					break;                                  //Break out of the switch block

					case 1: ACS_Execute(1235, 0);              //Play slug message
					break;                                  //Break out of the switch block

					case 2: ACS_Execute(1236, 0);              //Play flechette message
					break;                                  //Break out of the switch block
				}
			}                                          
			goto FireSwitch; 
		
		FireSwitch:
			AR36 A 3;
			ARRE A 3;
			ARRE B 3 A_StartSound("Weapons/arswitch", 0);
			ARRE A 3;
			AR36 A 3;
			goto ready;
		
		Fire:
		TNT1 A 0
		{
			if(GetPlayerInput (MODINPUT_BUTTONS) & BT_ALTATTACK && CountInv("RocketAmmo2") > 0)
			{
				return ResolveState ("GrenadeFire");
			}
			else if(countInv("ARClip") == 0)
			{
				return ResolveState ("DryFire");
			}
			else
			{
				return ResolveState (null);
			}
		}
		
		TNT1 A 0 
		{
		A_AlertMonsters();
			if(invoker.fireMode == 0)
			{
				return ResolveState ("FireAuto");
			}
			else if(invoker.fireMode == 1)
			{	
				return ResolveState ("FireBurst");
			}
			else if(invoker.fireMode == 2)
			{
				return ResolveState ("FireSemi");
			}
			else
			{
				return ResolveState (null);
			}
		}
		goto ready;
		
	AltFire:
		TNT1 A 0 A_ZoomFactor(1.5);
		ARIS A 1 {
		int input = GetPlayerInput(INPUT_BUTTONS);
		int oldinput = GetPlayerInput(INPUT_OLDBUTTONS);
		if(invoker.firemode == 0 && input & BT_ATTACK)
		{
		return ResolveState("AltShoot");
		}
		else If(input & BT_ALTATTACK)
		{
			if (oldinput & BT_ATTACK)
			{	
				return ResolveState(null);
			}
			else if (input & BT_ATTACK)
			{
				A_WeaponReady(WRF_AllowReload|WRF_AllowUser1|WRF_AllowUser2);
				return ResolveState("AltShoot");
			}
			else
			{
			return resolvestate(null);
			}
			
		}
		else
		{
			A_WeaponReady(WRF_AllowReload|WRF_AllowUser1|WRF_AllowUser2);
			A_ZoomFactor(1);
			return ResolveState("Ready");
		}
	}
	loop;
	
	AltShoot:
	TNT1 A 0
		{
		
			if(countInv("ARClip") == 0)
			{
				return ResolveState ("DryFire");
			}
			else
			{
				return ResolveState (null);
			}
		}
		
		TNT1 A 0 
		{
		A_AlertMonsters();
			if(invoker.fireMode == 0)
			{
				return ResolveState ("AltFireAuto");
			}
			else if(invoker.fireMode == 1)
			{	
				return ResolveState ("AltFireBurst");
			}
			else if(invoker.fireMode == 2)
			{
				return ResolveState ("AltFireSemi");
			}
			else
			{
				return ResolveState (null);
			}
		}
		goto ready;
	
		
//GrenadeFire
	GrenadeFire:
		AR36 A 2; 
		AR3G A 2 
		{
		A_AlertMonsters();
		A_StartSound("weapons/argrenade", 0);
		A_FireProjectile("HPGrenade",0 , 1, 0, -1);
		}
		AR3G B 2;
		AR3G C 2;
		TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
		AR3R A 1 A_Recoil(2*cos(pitch));
		AR3R B 1   
			{
				A_SetPitch(pitch-4.0);
	            A_ZoomFactor(0.96,ZOOM_INSTANT);
			}
			AR3R C 1   
			{
				A_SetPitch(pitch+2.0);
	            A_ZoomFactor(0.98, ZOOM_INSTANT);
			}
			AR3R B 1
			{
				A_SetPitch(pitch+2.0);
	            A_ZoomFactor(1, ZOOM_INSTANT);
			}
		AR36 A 0 A_TakeInventory("RocketAmmo", 1);
		AR36 A 1;
		goto Ready;

//Automatic Fire		
		FireAuto:
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			AR3F A 1 Bright A_Light(1);
			TNT1 A 0 A_FireBullets(Random(2,3), Random(0,2), 1, 9, "BulletPuff");
			AR3F B 1 Bright 
			{
			A_SetPitch(pitch-1.0);
	        A_ZoomFactor(0.96,ZOOM_INSTANT);
			A_Light(2);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			TNT1 A 0 A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(30,34),	random(-2,-3),0,random(5,7),random(90,105)); 
				AR3R C 1  
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1, ZOOM_INSTANT);
			}
			AR36 A 1 A_ReFire;
			
			goto Ready;
			
//AltAutomatic Fire		
		AltFireAuto:
				TNT1 A 0
				{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			ARIF A 1 Bright A_Light(1);
			TNT1 A 0 
			{
			A_FireBullets(Random(2,3), Random(0,1), 1, 9, "BulletPuff");
			A_SetPitch(pitch-1.0);
			A_ZoomFactor(1.49,ZOOM_INSTANT);
			TakeInventory("ARClip", 1);
			}
			ARIF B 1 Bright A_Light(2);
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			TNT1 A 0 A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(35,40),	random(-2,-3),0,random(5,7),random(90,105)); 
			ARIR C 1  
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1.5, ZOOM_INSTANT);
			}
			ARIS A 1 A_ReFire;
			goto AltFire+11;

//Fire Burst
		FireBurst:
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
//Fire First Shot
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			AR3F A 1 Bright 
			{
			A_FireBullets(Random(2, 2), random(2,2), 1, 9,"BulletPuff");
			A_Light(1);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			AR3F B 0 Bright 
			{
			A_Light(2); 
			A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(30,34),	random(-2,-3),0,random(5,7),random(90,105)); 
			}
			AR3R B 1
			{
				A_SetPitch(pitch-1.0);
	            A_ZoomFactor(0.96,ZOOM_INSTANT);
			}
				TNT1 A 0
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1, ZOOM_INSTANT);
			}
//Fire Second Shot
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			AR3F A 0 Bright 
			{
			A_FireBullets(Random(2, 2), random(2,2), 1, 9,"BulletPuff");
			A_Light(1);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			AR3F B 1 Bright 
			{
			A_Light(2); 
			A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(30,34),	random(-2,-3),0,random(5,7),random(90,105)); 
			}
			AR3R B 1
			{
				A_SetPitch(pitch-1.0);
	            A_ZoomFactor(0.96,ZOOM_INSTANT);
			}
				TNT1 A 0  
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1, ZOOM_INSTANT);
			}
//Fire Third Shot
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			AR3F A 1 Bright 
			{
			A_FireBullets(Random(2, 2), random(2,2), 1, 9,"BulletPuff");
			A_Light(1);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			AR3F B 0 Bright 
			{
			A_Light(2); 
			A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(30,34),	random(-2,-3),0,random(5,7),random(90,105)); 
			}
			AR3R A 1
			{
				A_SetPitch(pitch-1.0);
	            A_ZoomFactor(0.96,ZOOM_INSTANT);
			}
				AR3R C 1   
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1, ZOOM_INSTANT);
				A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			}
			AR36 A 1 A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);  
			goto Ready;
			
AltFireBurst:
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
//Fire First Shot
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			ARIF A 1 Bright 
			{
			A_FireBullets(Random(0, 1), random(0,1), 1, 9,"BulletPuff");
			TakeInventory("ARClip", 1);
			A_Light(1);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			ARIF B 0 Bright 
			{
			A_Light(2); 
			A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(35,40),	random(-2,-3),0,random(5,7),random(90,105)); 
			}
			ARIR B 1
			{
				A_SetPitch(pitch-1.0);
	            A_ZoomFactor(1.49,ZOOM_INSTANT);
			}
				TNT1 A 0
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1.5, ZOOM_INSTANT);
			}
//Fire Second Shot
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			ARIF A 0 Bright 
			{
			A_FireBullets(Random(0, 1), random(0,1), 1, 9,"BulletPuff");
			TakeInventory("ARClip", 1);
			A_Light(1);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			ARIF B 1 Bright 
			{
			A_Light(2); 
			A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(35,40),	random(-2,-3),0,random(5,7),random(90,105)); 
			}
			ARIR B 1
			{
				A_SetPitch(pitch-1.0);
	            A_ZoomFactor(1.49,ZOOM_INSTANT);
			}
				TNT1 A 0  
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1.5, ZOOM_INSTANT);
			}
//Fire Third Shot
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ar36", 1);
			ARIF A 1 Bright 
			{
			A_FireBullets(Random(0, 1), random(0,1), 1, 9,"BulletPuff");
			TakeInventory("ARClip", 1);
			A_Light(1);
			}
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			ARIF B 1 Bright 
			{
			A_Light(2); 
			A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(35,40),	random(-2,-3),0,random(5,7),random(90,105)); 
			}
			ARIR A 1
			{
				A_SetPitch(pitch-1.0);
	            A_ZoomFactor(1.49,ZOOM_INSTANT);
			}
				ARIR C 1   
			{
				A_SetPitch(pitch+1.0);
	            A_ZoomFactor(1.5, ZOOM_INSTANT);
				A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			}
			goto AltFire;			

//Semi Auto Fire
		FireSemi:
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ardmr", 1);
			AR3F A 1 Bright A_Light(1);
			TNT1 A 0 A_FireBullets(2, 1, 1, 18, "BulletPuff");
			AR3F B 1 Bright A_Light(2);
			TNT1 A 0 A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(30,34),	random(-2,-3),0,random(5,7),random(90,105));  
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			TNT1 A 0 A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			AR3R B 1
			{
				A_SetPitch(pitch-2.0);
	            A_ZoomFactor(0.96,ZOOM_INSTANT);
			}
				AR3R C 1   
			{
				A_SetPitch(pitch+2.0);
	            A_ZoomFactor(1, ZOOM_INSTANT);
				A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			}
			AR36 A 1 A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			goto Ready;
			
AltFireSemi:
			TNT1 A 0
			{
				if(countInv("ARClip") == 0)
				{
					return ResolveState ("DryFire");
				}
				else
				{
					return ResolveState (null);
				}
			}
			TNT1 A 0 A_StartSound("weapons/ardmr", 1);
			ARIF A 1 Bright A_Light(1);
			TNT1 A 0 
			{
			A_FireBullets(1, 0, 1, 18, "BulletPuff");
			TakeInventory("ARClip", 1);
			}
			ARIF B 1 Bright A_Light(2);
			TNT1 A 0 A_SpawnItemEx("ARSmoke",random(20,21),0,sin(-pitch)*25+random(35,40), random(2,3),0,1,0);
			TNT1 A 0 A_SpawnItemEx("ARCasing",random(-6,-7),cos(pitch)*25,sin(-pitch)*25+random(35,40),	random(-2,-3),0,random(5,7),random(90,105));  
			TNT1 A 0 A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			ARIR B 1
			{
				A_SetPitch(pitch-2.0);
	            A_ZoomFactor(1.485,ZOOM_INSTANT);
			}
				ARIR C 1   
			{
				A_SetPitch(pitch+2.0);
	            A_ZoomFactor(1.5, ZOOM_INSTANT);
				A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
			}
			goto AltFire;

		DryFire:
			TNT1 A 0 A_ZoomFactor(1);
			ARIS B 0 A_StartSound ("Weapons/DryFire", 0);   //Play dryfire sound
            goto Reload;                                 //goto ready state

		Reload:
		TNT1 A 0
		{
			if(CountInv("RifleAmmo") == 0 && CountInv("ARClip") == 0)
			{
			A_SelectWeapon("",SWF_SELECTPRIORITY);
			return ResolveState (null);
			}
			Else If(CountInv("RifleAmmo") <= 30)
			{
				A_ZoomFactor(1);
				ACS_Execute(1237);
				return ResolveState ("ReloadFinish");
			}
			Else if(CountInv("ARClip") == 30)
			{
				return ResolveState ("ready");
			}
			Else 
			{
				A_ZoomFactor(1);
				return ResolveState ("ReloadFinish");
			}
		}

		ReloadFinish:
		 TNT1 A 0 {
            if (CheckInventory (invoker.ammoType1, 0) || !CheckInventory (invoker.ammoType2, 1))
                return ResolveState ("Ready");

            int ammoAmount = min (FindInventory (invoker.ammoType1).maxAmount - CountInv (invoker.ammoType1), CountInv (invoker.ammoType2));
            if (ammoAmount <= 0)
                return ResolveState ("Ready");

            GiveInventory (invoker.ammoType1, ammoAmount);
            TakeInventory (invoker.ammoType2, ammoAmount);

            return ResolveState (null);
		}	
		ARRE A 2;
		ARRE B 2;
		ARRE C 2;
		ARRE D 2;
		ARRE E 2 
		{
		A_StartSound("weapons/arout", 0);
		A_SpawnItemEx("AREmptyClip",3,0,0,random(1,2),-4,random(5,7),random(-75,-85));
		}
		ARRE F 2;
		ARRE G 2;
		ARRE H 2;
		ARRE I 2;
		ARRE J 2;
		ARRE K 2 A_StartSound("weapons/arin", 0);
		ARRE L 2;
		ARRE M 2; 
		ARRE N 2;
		ARRE O 2 A_StartSound("weapons/arbolt", 0);
		ARRE P 2;
		ARRE Q 2;
		goto Ready;

	WeaponFirstUp:
	 TNT1 A 0 {
            if (CheckInventory (invoker.ammoType1, 0) || !CheckInventory (invoker.ammoType2, 1))
                return ResolveState ("Ready");

            int ammoAmount = min (FindInventory (invoker.ammoType1).maxAmount - CountInv (invoker.ammoType1), CountInv (invoker.ammoType2));
            if (ammoAmount <= 0)
                return ResolveState ("Ready");

            GiveInventory (invoker.ammoType1, ammoAmount);
            TakeInventory (invoker.ammoType2, ammoAmount);

            return ResolveState (null);
		}	
		ARRE H 2;
		ARRE I 2;
		ARRE J 2;
		ARRE K 2 A_StartSound("weapons/arin", 0);
		ARRE L 2;
		ARRE M 2; 
		ARRE N 2;
		ARRE O 2 A_StartSound("weapons/arbolt", 0);
		ARRE P 2;
		ARRE Q 2;
		goto Ready;
	}
 }