Class BFLAmmo : Ammo
{
    Default
        { 
            Inventory.PickupMessage "Picked up a BFL10K Cell";
            Inventory.Icon "BFLC0";
            Inventory.Amount 20;
            Inventory.MaxAmount 400;
            Ammo.BackpackAmount 200;
            Ammo.BackpackMaxAmount 800;
        }
    States
        {
            Spawn: 
            BFLC A -1;
            Stop;
        }
}

Class BFLBox : BFLAmmo
{
    Default
        {
            Inventory.PickupMessage "Picked up a BFL10K charge pack.";
        }
    States
        {
            Spawn:
                BFBX A -1;
                Stop;
        }
}

Class BFL10k : Weapon
{
    /* BFLModePicker has three values from 0-2
        1 = Low Power Firemodes
        2 = High Power Firemodes
        3 = Photonuclear Acceleration Mode, alt fire is BFL Shot pattern Shot.
    */
    int BFLModePicker;
    int PhaseShifter;
	int FireButtons;

    Default
        {
            Weapon.SelectionOrder 2900;
            Weapon.BobStyle "smooth";
            Weapon.AmmoUse1 1;
            Weapon.AmmoUse2 1;
            Weapon.AmmoGive1 80;
            Weapon.AmmoType "Cell";
            Weapon.AmmoType2 "Cell";
            Weapon.SlotNumber 7;
            Weapon.SlotPriority 3;
            Weapon.UpSound "Weapons/GunUp1";
            +WEAPON.NOAUTOFIRE;
	        Inventory.PickupMessage "You Obtained the BFL-10k Electroatomic Photon Cannon!";
            Obituary "%o was vaporized by %k's Big Frickin Photon Cannon.";
            Decal "BigScorch"; 
        }
    States 
        {	
            spawn:
                BFL2 A -1;
                stop;
            
            select:
				BFNA A 1 A_Raise;
                loop;

            deselect:
                BFNA A 1 A_Lower;
                loop;

            ready:
                BFNA A 1;
                goto bflup; 

            bflup:
                TNT1 A 0 A_PlaySound("Weapons/BFLUP2", CHAN_AUTO);
                BFLF ABCDEF 2;
                goto bflidle;
            
            bflidle: 
                TNT1 A 0 A_PlaySound("Weapons/BFLIdle", CHAN_WEAPON);
                BFLG ABCDE 6
                    {
                        A_WeaponReady(WRF_ALLOWUSER1);
                        A_WeaponReady(WRF_ALLOWUSER2);
                    }
                loop;

            user1:
                BFLG A 0
                {
                    if(Invoker.BFLModePicker == 2)           //If the mode variable is equal to teo
                    {
                        invoker.BFLModePicker = 0;               //reset BFL Mode to 0 (Low Power Mode)
                        return ResolveState("MsgState");    //Go to ammo switch message switch block
                    } 
                    else if (invoker.BFLModePicker != 2)     //Otherwise if mode is not equal to two
                    {
                        invoker.BFLModePicker++;                  //Incriment mode variable by one
                        return ResolveState("MsgState");     //Go to ammo switch message switch block
                    }
                    else 
                    {
                        return ResolveState(null); 
                    }
                }
                goto bflup;

            User2:
                BFLG A 0 
                {
                    if(Invoker.BFLModePicker == 0)           //If the shot type variable is equal to zero
                    {
                        invoker.BFLModePicker = 2;               //reset ShotType to two (Acceleration Blast)
                        return ResolveState("MsgState");    //Go to ammo switch message switch block
                    } 
                    else if (Invoker.BFLModePicker != 0)     //otherwise if shot type is not equal to zero
                    {   
                        invoker.BFLModePicker--;                  //decriment mode by one
                        return ResolveState("MsgState");    //Go to ammo switch message switch block
                    }
                    else
                    {
                        return ResolveState(null);
                    }    
                }
                goto bflup;

            MsgState:
                BFLG A 0
                {
                    switch(invoker.BFLModePicker)
                        {
                            case 0: ACS_Execute(3654);              //Play Low Power Message
                            break;                                  //Break out of the switch block

                            case 1: ACS_Execute(3662);              //Play High Power Message
                            break;                                  //Break out of the switch block

                            case 2: ACS_Execute(3653);              //Play Acceleration message
                            break;                                  //Break out of the switch block
                        }
                }                                          
            goto bflup; 

            Fire:
				BFLG A 0
				{
					switch(invoker.BFLModePicker)
					{
						case 0:
							return ResolveState("Low1");
							break;
						case 1:
							return ResolveState("HighPower");
							break;
						case 2:
							return ResolveState("UltFire");
							break; 
						default:
							break;
					}
					return ResolveState(null);
				}
				goto bflup;
				
			AltFire:
				BFLG A 0
				{
					switch(invoker.BFLModePicker)
					{
						case 0:
							return ResolveState("Low2");
							break;
						case 1:
							return ResolveState("HighPower2");
							break;
						default:
							break;
					}	
					return ResolveState(null);
				}
				goto bflup;
										
				Low1:
					BFLF CE 2;													//Play fire sprites
		            BFLF G 1
					{
				    A_PlaySound("Weapons/BFLShot", CHAN_WEAPON);				//Play weapon fire sound
					A_Recoil(2*cos(pitch));										//Perform Recoil functions
					A_SetPitch(pitch-1.0);										
					A_ZoomFactor(0.95,ZOOM_INSTANT);
					}
					BFLF H 1													//Fire Projectile, and more recoil functions
					{
					A_SetPitch(pitch+1.0);										//Set Pitch back to 0
	                A_ZoomFactor(0.975,ZOOM_INSTANT);							//increase zoom closer to normal
		            A_FireProjectile("BFLSmallShot", 0, 1, 0, -8, 0);			//Fire the projectile
					A_TakeInventory("cell", 2);
				    A_Light(3);
					}
					BFLF G 1
					{
					A_ZoomFactor(1,ZOOM_INSTANT);
			        A_Light(1);
					}
					TNT1 A 0 A_Refire;											//Fire as long as button is held
				    BFLF A 2 A_WeaponReady;										//Be ready to fire again
					goto bflup;	

				Low2:		
					BFLF CE 1;						//Play fire sprites
		            BFLF G 1
					{
				    A_PlaySound("Weapons/BFLShot", CHAN_WEAPON);				//Play weapon fire sound
					A_Recoil(3*cos(pitch));										//Perform Recoil functions
					A_SetPitch(pitch-2.0);										
					A_ZoomFactor(0.9,ZOOM_INSTANT);
					A_FireProjectile("BFLTinyShot", random(-2,2), 0, random(-2,2), -8 , 0, random(-2,2));
					A_FireProjectile("BFLTinyShot", random(-2,2), 1, random(-2,2), -8, 0, random(-2,2));
					A_Light(2);
					}
					BFLF H 1													//Fire Projectile, and more recoil functions
					{
					A_PlaySound("Weapons/BFLShot", CHAN_WEAPON);
					A_SetPitch(pitch+1.0);
	                A_ZoomFactor(0.95,ZOOM_INSTANT);
		            A_FireProjectile("BFLTinyShot", random(-2,2), 0, random(-2,2), -8, 0, random(-2,2));
					A_FireProjectile("BFLTinyShot", random(-2,2), 1, random(-2,2), -8, 0, random(-2,2));
				    A_Light(3);
					}
					BFLF G 1
					{
					A_PlaySound("Weapons/BFLShot", CHAN_WEAPON);	
					A_SetPitch(pitch+1.0);										//Reset pitch and zoom to 0
					A_ZoomFactor(1,ZOOM_INSTANT);
					A_FireProjectile("BFLTinyShot", random(-2,2), 0, random(-2,2), 0, random(-2,2));
					A_FireProjectile("BFLTinyShot", random(-2,2), 1, random(-2,2), -8, 0, random(-2,2));
					A_Light(2);							
					}
					TNT1 A 0 A_Refire;											//Fire as long as button is held
				    BFLF A 2 A_WeaponReady;										//Be ready to fire again
					goto bflup;
					
				HighPower:
					BFLF A 4 A_PlaySound("Weapons/BFLCharge1", CHAN_WEAPON);
					BFLF BCDEFBCDEF 3;          
					BFLF BCDEF 2;           
					BFLF BCDEFBCDEF 1;        
					Goto HiHold;
				
				HiHold:         
					BFLF BCDEF 1;
					BFLF G 1 A_GunFlash;
					TNT1 A 0 
					{
						A_PlaySound("Weapons/BFLShot", CHAN_WEAPON);
						A_FireProjectile("BFLStandardShot", 0, -1, 0, -8, 0);
					    A_TakeInventory("cell", 30);
						A_Recoil(3*cos(pitch));
						A_SetPitch(pitch-3.0);
						A_ZoomFactor(0.85,ZOOM_INSTANT);
					}
						BFLF H 1 
					{
						A_SetPitch(pitch+1.0);
						A_ZoomFactor(0.9,ZOOM_INSTANT);;
					}
						BFLF I 1 
					{
						A_SetPitch(pitch+1.0);
						A_ZoomFactor(0.95,ZOOM_INSTANT);
					}		
						BFLF J 1 
					{
						A_SetPitch(pitch+1.0);
						A_ZoomFactor(1.0,ZOOM_INSTANT);
						A_Refire("HiHold");
					}
						BFLF A 2 A_WeaponReady;
						Goto BFLUp;
					
					Flash:
						TNT1 A 2 Bright A_Light1;
						TNT1 A 3 Bright A_Light2;
						Goto LightDone;
						
		}
}